/*jshint esversion: 6 */
// MAIN VUE INSTANCE
let app = new Vue({
    el: "#divContainer",
    data: {
      active: [ //defines which page to render - see div with it divTransform in html
          {Vanilla: true},
          {Vue: false},
          {jQuery: false}
      ],
      imagePath: "assets/images/img-",
      videoPath: "assets/videos/vid-",
      textPath: "assets/txt_files/code-",

      sections: [
        {id: 1, text: "Vanilla", active: true},
        {id:2, text: "Vue", active: false},
        {id: 3, text: "jQuery", active: false}
      ],

      updateStyle: {
        Vanilla: { //This is for the hovering over the vanilla link
          backgroundColor: "rgb(250, 220, 52)",
          backgroundImage: 'url("assets/images/logo-javascript.png")',
          boxShadow: "inset 100vw 100vh rgba(250, 220, 52, .5)",
          transition: "all .3s"
        },
        Vue: { //This is for the hovering over the Vue link
          backgroundColor: "rgba(66, 184, 131, .0001)",
          backgroundImage: 'url("assets/images/logo-vue.png")',
          boxShadow: "inset 100vw 100vh rgba(66, 184, 131, .5)",
          transition: "all .3s"
        },
        jQuery: { //This is for the hovering over the jQuery link
          backgroundColor: "rgba(18, 26, 38, .0001)",
          backgroundImage: 'url("assets/images/logo-jquery.png")',
          boxShadow: "inset 100vw 100vh rgba(18, 26, 38, .5)",
          transition: "all .3s"
        },
        clean: { //This is for the mousing out of the Vanilla, Vue or jQuery links in header
          backgroundColor: "",
          backgroundImage: '',
          boxShadow: "",
          transition: "all .3s"
        },
        expandCodeModal: {
          position: "fixed",
          zIndex: 2,
          left: 0,
          top: 0,
          width: "100vw",
          height: "100vh"
        },
        codeModalClose: {
          position: "static",
          zIndex: 1,
          width: "32vw",
          height: "96vh"
        }
      },  //End of updateStyle

      activeModals: "Vanilla",
      counter: 0, //This is for the image and text transition inside each modal
      modalDisplay: "none", //This is for the image and text transition

      projects: [
        {
          key: 1,
          title: "listMe.xyz",
          url: "http://listme.xyz",
          git: "https://github.com/papostolopoulos/listme",
          code_url: "",
          code: "var express = require(\'express\');\nvar router = express.Router();\nvar bcrypt = require(\'bcrypt\');\nvar knex = require(\'../db/knex\');\n\n//Log In POST\nrouter.post(\'/login\', function(req, res, next) {\n  console.log(req.body);\n\n  knex(\'users\')\n  .select()\n  .where(\'email\', req.body.email)\n  .returning(\'*\')\n  .then(function (existingUsers) {\n    var user = existingUsers[0];\n    if (existingUsers.length === 0) {\n      console.log(user);\n      res.render(\'error\', {\n        message: \'User does not exist\',\n        status: 400,\n        description: \'Sorry but the email you entered does not exist in the database. Please try to log in with a different email or try to sign up.\',\n        user: req.session.user || \'guest\'\n      });\n    } else {\n      if (bcrypt.compareSync(req.body.password, user.hashed_password) === true) {\n        console.log(\'Hoorah!!!\');\n        req.session.user = req.body.email;\n        req.session.cookie.maxAge = 24 * 60 * 60 * 10;\n        knex\n        .select(\'list.name\', \'list.id\', \'users.id\', \'users.email\')\n        .table(\'list\')\n        .innerJoin(\'users\', \'list.user_id\', \'users.id\')\n        .where({email: req.session.user})\n        .returning(\'*\')\n        .then(function (listTitles) {\n          res.render(\'lists\',{\n            listTitles: listTitles,\n            email: listTitles.email,\n            user: req.session.user || \'guest\'\n          })\n        })\n      }\n      else {\n        console.log(\'POOP!\');\n        res.render(\'error\', {\n          message: \'Incorrect Login Credentials\',\n          status: 400,\n          description: \'You have entered incorrect login credentials\',\n          user: req.session.user || \'guest\'\n        })\n      }\n\n\n    }\n  });\n}); //End of router.post\n\n\n//Sing up POST\nrouter.post(\'/signup\', function(req, res, next) {\n  console.log(req.body);\n\n  knex(\'users\')\n  .select()\n  .where(\'email\', req.body.email)\n  .returning(\'*\')\n  .then(function (existingUsers) {\n    if (existingUsers.length &gt; 0) {\n      var existingUser = existingUsers[0];\n      console.log(existingUser);\n      res.render(\'error\', {\n        message: \'User already exists\',\n        status: 400,\n        description: \'Sorry but the email you entered exists already in the database. Please try siging up with a different email or try to login.\',\n        user: req.session.user || \'guest\'\n      });\n    }\n  })\n\n  var hashedPassword = new Promise(function (resolve, reject) {\n    resolve(saltPassword(req.body.password));\n  })\n\n  hashedPassword\n  .then(function(pwd){\n    var newUserObj = {\n      email: req.body.email,\n      hashed_password: pwd\n    }\n    return newUserObj;\n  })\n  .then(function (newUser) {\n\n    knex(\'users\')\n    .insert(newUser)\n    .returning(\'email\')\n    .then(function(newUserEmails){\n      var newUserEmail = newUserEmails[0];\n      req.session.user = newUserEmail;\n      req.session.cookie.maxAge = 24 * 60 * 60 * 10;\n      res.render(\'lists\', {\n        user: req.session.user\n      });\n    })\n  })\n\n});\n\n//LOGOUT BUTTON\nrouter.get(\'/logout\', (req, res, next) =&gt; {\n  console.log(\'LOGOUT: req session before logout\');\n  console.log(req.session);\n  req.session.destroy(function (err) {\n      res.render(\'index\', {\n        title: \'listMe.xyz\',\n        user: \'guest\'\n      });\n  });\n  console.log(\'LOGOUT: req session after logout\');\n  console.log(req.session);\n});\n\n\n\n/* GET home page. */\nrouter.get(\'/\', function(req, res, next) {\n  res.render(\'index\', {\n    title: \'listMe.xyz\',\n    user: req.session.user || \'guest\'\n  });\n});\n\n//FUNCTIONS FOR PASSWORD HASHING\n\n//Salt of password\nfunction saltPassword(passwordEntry) {\n  var salt = bcrypt.genSaltSync(10);\n  console.log(\'The salt is:\', salt);\n  return hashPassword(passwordEntry, salt);\n}\n\nfunction hashPassword(passwordEntry, salt) {\n  var hash = bcrypt.hashSync(passwordEntry, salt);\n  console.log(\'The hash is:\', hash);\n  return hash;\n}\n\nmodule.exports = router;",
          description: [
            {bullet: "Full stack CRUD to-do list."},
            {bullet: "Create, read, update and delete lists of todo items."},
            {bullet: "Create, update or delete user account."},
            {bullet: "Node, Express, knex, psql, JQuery, handlebars, CSS."}
          ],
          highlights: [
            {fact: "Customized to-do lists. (2017-03)"},
            {fact: "Why was it built?\nI helped a colleague with his capstone project by creating the backend, database logic, backend - frontend connectivity"},
            {fact: "Interesting fact: The user can update and customize the lists."},
          ],
          language: "jQuery",
          images: [
            {image: ""},
            {image: ""},
            {image: ""},
          ],
          video_url: "https://youtube.com/embed/QI_-P_XE8fo",
          id: "listMejQuery",
          bgImage: {
            backgroundImage: "",
            boxShadow: ""
          }
        },

        {
          key: 2,
          title: "writeit.pro",
          url: "http://writeit.pro",
          git: "https://github.com/papostolopoulos/writeit",
          code_url: "",
          code: "$.cloudinary.config({ cloud_name: \'writeit\', api_key: \'957122638812785\'});\n\n\n\n//VARIABLE DECLARATIONS\nlet richTextField = document.getElementById(\'richTextField\');\nlet buttonBold = document.getElementById(\'buttonBold\');\nlet buttonItalic = document.getElementById(\'buttonItalic\');\nlet buttonUnderline = document.getElementById(\'buttonUnderline\');\nlet buttonStrikethrough = document.getElementById(\'buttonStrikethrough\');\nlet buttonSubscript = document.getElementById(\'buttonSubscript\');\nlet buttonSuperscript = document.getElementById(\'buttonSuperscript\');\nlet buttonUndo = document.getElementById(\'buttonUndo\');\nlet buttonRedo = document.getElementById(\'buttonRedo\');\nlet buttonCut = document.getElementById(\'buttonCut\');\nlet buttonCopy = document.getElementById(\'buttonCopy\');\nlet buttonPaste = document.getElementById(\'buttonPaste\');\nlet buttonSelectAll = document.getElementById(\'buttonSelectAll\');\nlet buttonJustifyLeft = document.getElementById(\'buttonJustifyLeft\');\nlet buttonJustifyCenter = document.getElementById(\'buttonJustifyCenter\');\nlet buttonJustifyRight = document.getElementById(\'buttonJustifyRight\');\nlet buttonJustifyFull = document.getElementById(\'buttonJustifyFull\');\nlet buttonIndent = document.getElementById(\'buttonIndent\');\nlet buttonOutdent = document.getElementById(\'buttonOutdent\');\nlet buttonInsertUnorderedList = document.getElementById(\'buttonInsertUnorderedList\');\nlet buttonInsertOrderedList = document.getElementById(\'buttonInsertOrderedList\');\nlet buttonInsertParagraph = document.getElementById(\'buttonInsertParagraph\');\nlet selectParagraphStyle = document.getElementById(\'selectParagraphStyle\')\nlet buttonHorizontalRule = document.getElementById(\'buttonHorizontalRule\')\nlet buttonInsertLink = document.getElementById(\'buttonInsertLink\');\nlet buttonRemoveLink = document.getElementById(\'buttonRemoveLink\');\nlet buttonInlineSourceCode = document.getElementById(\'buttonInlineSourceCode\');\nlet buttonSourceCode = document.getElementById(\'buttonSourceCode\');\nlet buttonToggleEdit = document.getElementById(\'buttonToggleEdit\');\nlet toggleIcon = document.getElementById(\'toggleIcon\');\nlet selectFontStyle = document.getElementById(\'selectFontStyle\');\nlet selectFontSize = document.getElementById(\'selectFontSize\');\nlet buttonFontColor = document.getElementById(\'buttonFontColor\');\nlet inputFontColor = document.getElementById(\'inputFontColor\');\n// let inputBackgroundColor = document.getElementById(\'inputBackgroundColor\');\nlet buttonHighlightColor = document.getElementById(\'buttonHighlightColor\');\nlet inputHighlightColor = document.getElementById(\'inputHighlightColor\');\nlet buttonClearColorSettings = document.getElementById(\'buttonClearColorSettings\');\nlet buttonInsertOnlineImage = document.getElementById(\'buttonInsertOnlineImage\');\nlet buttonInsertOnlineVideo = document.getElementById(\'buttonInsertOnlineVideo\');\nlet buttonInsertCloudImage = document.getElementById(\'buttonInsertCloudImage\');\nlet formImageUploadCloudinary = document.getElementById(\'formImageUploadCloudinary\');\nlet cloudinary_fileupload = document.getElementsByClassName(\'cloudinary_fileupload\');\n\n\n\nlet formNewArticle = document.getElementById(\'formNewArticle\');\nlet buttonSubmitNewArticle = document.getElementById(\'buttonSubmitNewArticle\');\nlet inputNewArticleTitleVisible = document.getElementById(\'inputNewArticleTitleVisible\');\nlet inputNewArticle = document.getElementById(\'inputNewArticle\')\n\n\n\n\n\n\n//EVENT LISTENERS\nbuttonBold.addEventListener(\'click\', ()=>{execCmd(\'bold\', false, null)});\nbuttonItalic.addEventListener(\'click\', ()=>{execCmd(\'italic\', false, null)});\nbuttonUnderline.addEventListener(\'click\', ()=>{execCmd(\'underline\', false, null)});\nbuttonStrikethrough.addEventListener(\'click\', ()=>{execCmd(\'strikethrough\', false, null)});\nbuttonJustifyLeft.addEventListener(\'click\', ()=>{execCmd(\'justifyLeft\', false, null)});\nbuttonJustifyCenter.addEventListener(\'click\', ()=>{execCmd(\'justifyCenter\', false, null)});\nbuttonJustifyRight.addEventListener(\'click\', ()=>{execCmd(\'justifyRight\', false, null)});\nbuttonJustifyFull.addEventListener(\'click\', ()=>{execCmd(\'justifyFull\', false, null)});\nbuttonCut.addEventListener(\'click\', ()=>{execCmd(\'cut\', false, null)});\nbuttonCopy.addEventListener(\'click\', ()=>{execCmd(\'copy\', false, null)});\nbuttonPaste.addEventListener(\'click\', ()=>{execCmd(\'paste\', false, null)}); //This has a problem\nbuttonIndent.addEventListener(\'click\', ()=>{execCmd(\'indent\', false, null)});\nbuttonOutdent.addEventListener(\'click\', ()=>{execCmd(\'outdent\', false, null)});\nbuttonSubscript.addEventListener(\'click\', ()=>{execCmd(\'subscript\', false, null)});\nbuttonSuperscript.addEventListener(\'click\', ()=>{execCmd(\'superscript\', false, null)});\nbuttonUndo.addEventListener(\'click\', ()=>{execCmd(\'undo\', false, null)});\nbuttonRedo.addEventListener(\'click\', ()=>{execCmd(\'redo\', false, null)});\nbuttonInsertUnorderedList.addEventListener(\'click\', ()=>{execCmd(\'insertUnorderedList\', false, null)});\nbuttonInsertOrderedList.addEventListener(\'click\', ()=>{execCmd(\'insertOrderedList\', false, null)});\nbuttonInsertParagraph.addEventListener(\'click\', ()=>{execCmd(\'insertParagraph\', false, null)});\nselectParagraphStyle.addEventListener(\'change\', ()=>{execCmd(\'formatBlock\', false, selectParagraphStyle[selectParagraphStyle.selectedIndex].getAttribute(\'value\'))});\nbuttonHorizontalRule.addEventListener(\'click\', ()=>{execCmd(\'insertHorizontalRule\'), false, null});\nbuttonInsertLink.addEventListener(\'click\', ()=>{execCmd(\'createLink\', false, prompt(\'Please enter a URL\', \'http://\'))});\nbuttonRemoveLink.addEventListener(\'click\', ()=>{execCmd(\'unlink\', false, null)});\nbuttonInlineSourceCode.addEventListener(\'click\', ()=>{execCmdPrompt(\'insertHTML\', false, prompt(\'Please insert the raw html here\', \'Example: <h1>writeIt rocks!</h1>\'))});\nbuttonSourceCode.addEventListener(\'click\', ()=>{toggleSource()});\nbuttonToggleEdit.addEventListener(\'click\', ()=>{toggleEdit()})\nselectFontStyle.addEventListener(\'change\', ()=>{execCmd(\'fontName\', false, selectFontStyle[selectFontStyle.selectedIndex].getAttribute(\'value\', \'value\'))});\nselectFontSize.addEventListener(\'change\', ()=>{execCmd(\'fontSize\', false, selectFontSize[selectFontSize.selectedIndex].getAttribute(\'value\'))});\nbuttonFontColor.addEventListener(\'click\', ()=>{clickInputInsert(inputFontColor)});\ninputFontColor.addEventListener(\'change\', ()=>{execCmd(\'foreColor\', false, inputFontColor.value)}); //Not sure why the getAttribute(\'value\')  does not work\n// inputBackgroundColor.addEventListener(\'change\', ()=>{execCmd(\'backColor\', false, inputBackgroundColor.value)}); //Need to work on this. Will this come in the function through a form?\nbuttonHighlightColor.addEventListener(\'click\', ()=>{clickInputInsert(inputHighlightColor)});\ninputHighlightColor.addEventListener(\'change\', ()=>{execCmd(\'hiliteColor\', false, inputHighlightColor.value)});\nbuttonClearColorSettings.addEventListener(\'click\', clearColorSettings);\nbuttonInsertOnlineImage.addEventListener(\'click\', ()=>{execCmdPrompt(\'insertImage\', false, prompt(\'Please enter the image url\', \'http://\'))});\nbuttonInsertOnlineVideo.addEventListener(\'click\', ()=>{uploadOnlineVideo(prompt(\'Please enter the video url\', \'http://\'))})\nbuttonSelectAll.addEventListener(\'click\', ()=>{execCmd(\'selectAll\')});\nbuttonInsertCloudImage.addEventListener(\'click\', ()=>{clickInputInsert(cloudinary_fileupload[1])})\n\n\nbuttonSubmitNewArticle.addEventListener(\'mouseover\', ()=>{registerIframeInfo()});\ninputNewArticleTitleVisible.addEventListener(\'keyup\', inputUpdateTitle);\n\n\n\n\n\n\n\n// ----------FUNCTION DECLARATIONS=========================\n//ENABLE EDIT MODE FOR THE IFRAME AREA\nfunction enableEditMode() {\n  richTextField.contentDocument.designMode = \'On\';\n  richTextField.contentDocument.body.focus();\n}\n\n\n//EXECCOMMAND - ALLOWS US TO RUN COMMANDS TO MANIPULATE THE CONTENTS OF THE EDITABLE REGION\nfunction execCmd(command, bool, value) {\n  console.log(command);\n  event.preventDefault();\n  richTextField.contentDocument.execCommand(command, bool, value)\n  richTextField.contentDocument.body.focus();\n}\n\n\n//EXECCOMMAND FOR PROMPT USER INFO\nfunction execCmdPrompt(command, bool, value) {\n  if (value !== null) {\n    event.preventDefault();\n    richTextField.contentDocument.execCommand(command, bool, value)\n    richTextField.contentDocument.body.focus();\n  }\n}\n\n\n\n//SWITCH FROM TEXT EDITOR TO RAW HTML\nlet showingSourceCode = false; //A variable that defines if the view should be turned on or off\nfunction toggleSource() {\n  if (showingSourceCode) {\n    richTextField.contentDocument.getElementsByTagName(\'body\')[0].innerHTML = richTextField.contentDocument.getElementsByTagName(\'body\')[0].textContent;\n    showingSourceCode = false;\n  }\n  else {\n    richTextField.contentDocument.getElementsByTagName(\'body\')[0].textContent = richTextField.contentDocument.getElementsByTagName(\'body\')[0].innerHTML;\n    showingSourceCode = true;\n  }\n}\n// The textContent property sets or returns the textual content of the specified node, and all its descendants.\n// If you set the textContent property, any child nodes are removed and replaced by a single Text node containing the specified string.\n\n\n\n//SWITCH EDITOR ON AND OFF\nlet isInEditMode = true;\nfunction toggleEdit() {\n  if (isInEditMode) {\n    //Change the icon\n    event.preventDefault();\n    toggleIcon.classList.add(\'fa-toggle-off\');\n    toggleIcon.classList.remove(\'fa-toggle-on\');\n    //switch off the editor\n    richTextField.contentDocument.designMode = \'Off\';\n    isInEditMode = false;\n  }\n  else {\n    //Change the icon\n    event.preventDefault();\n    toggleIcon.classList.add(\'fa-toggle-on\');\n    toggleIcon.classList.remove(\'fa-toggle-off\');\n    //Switch on the editor\n    richTextField.contentDocument.designMode = \'On\';\n    richTextField.contentDocument.body.focus();\n    isInEditMode = true;\n  }\n}\n\n\n//CONNECT IFRAME TO THE TEXTAREA IN ORDER TO SUBMIT THE DATA TO DATABASE\nfunction registerIframeInfo(){\n  document.getElementById(\'textAreaNewArticle\').value = document.getElementById(\'richTextField\').contentDocument.body.innerHTML;\n}\n\n\n//CLEAR THE COLOR SETTINGS FOR FONT, HIGHLIGHT AND BACKGROUND\nfunction clearColorSettings() {\n  console.log(inputFontColor);\n  execCmd(\'foreColor\', false, \'#000000\');\n  execCmd(\'hiliteColor\', false, \'#ffffff\');\n  richTextField.contentDocument.body.focus();\n}\n\n\n//UPDATE THE TITLE IN THE HIDDEN INPUT FROM ENTRY IN THE VISIBLE INPUT\nfunction inputUpdateTitle() {\n  inputNewArticleTitle.value = inputNewArticleTitleVisible.value\n}\n\n\n//ACTIVATE INPUT TYPE=FILE TAGS BY CLICKING AT DIFFERENT BUTTONS\nfunction clickInputInsert(inputTag){\n  inputTag.click();\n}\n\n\n//UPLOAD AND RENDER IMAGE FROM HARD DRIVE\nfunction previewImageFile(source) {\n  let newImage = document.createElement(\'img\');\n\n  var file = source.files[0];\n  var reader = new FileReader(); //reads contents of files in the hard drive\n  reader.addEventListener(\'load\', function () {\n    newImage.src = reader.result;\n  }, false);\n\n\n  if (file) {\n    reader.readAsDataURL(file); //read contents of file and transform into base 64\n  }\n  console.log(newImage);\n  newImage.style.width = \'640px\';\n  // newImage.style.resize = \'both\';\n  // newImage.style.overflow = \'auto\';\n  // newImage.className = \'newImage\'\n\n  //Find the right position for image to be inserted\n  let cursorText = richTextField.contentDocument.getSelection().getRangeAt(0).endContainer.data; //returns a Selection object representing the text currently selected in the document.\n  let iframeChildren = richTextField.contentDocument.body.children;\n  for (let i = 0; i < iframeChildren.length; i++) {\n    console.log(\'innerHTML for position\' + i + \':\' + iframeChildren[i].textContent.replace(/&nbsp;/g, \'\').trim());\n    // console.log(\'CursorText: \' + cursorText.trim());\n    if (iframeChildren[i].textContent.replace(/&nbsp;/g, \'\').trim() === cursorText.trim()) {\n      console.log(\'IN THE FIRST IF STATEMENT\');\n      // richTextField.contentDocument.body.insertBefore(newImage, iframeChildren[i]);\n      iframeChildren[i].appendChild(newImage);\n\n      return;\n    }\n  }\n  if (richTextField.contentDocument.body.innerHTML === \'\') {\n    richTextField.contentDocument.body.appendChild(newImage);\n  }\n  else if (richTextField.contentDocument.body.innerHTML !== \'\') {\n    console.log(\'Got in the else statement\');\n    richTextField.contentDocument.body.insertBefore(newImage, iframeChildren[0]);\n  }\n  //Focus the document\n  richTextField.contentDocument.body.focus();\n}\n\n\n\n//UPLOAD AND RENDER VIDEO FROM HARD DRIVE\n//preview the information coming from the source\nfunction previewFile(dataSource, sourceTagSrcAttribute) {\n  var file = dataSource.files[0];\n  var reader = new FileReader(); //reads contents of files in the hard drive\n\n  reader.addEventListener(\'load\', ()=>{\n    sourceTagSrcAttribute.src = reader.result;\n    console.log(\'inside event listener\');\n\n    var dataURL = reader.result; //Get the information about the type of the file being imported\n    var mimeType = dataURL.split(\',\')[0].split(\':\')[1].split(\';\')[0];\n    sourceTagSrcAttribute.setAttribute(\'type\', mimeType);\n    console.log(sourceTagSrcAttribute.getAttribute(\'type\'));\n  }, false);\n\n  if (file) {\n    reader.readAsDataURL(file); //read contents of file and transform into base 64\n    console.log(file);\n  }\n}\n\n\n// find position in document and upload media file\nfunction findPositionAndUploadVideo(source) {\n\n  let newVideo = document.createElement(\'video\');\n  let newVideoSource = document.createElement(\'source\');\n  let cursorText = richTextField.contentDocument.getSelection().getRangeAt(0).endContainer.data; //returns a Selection object representing the text currently selected in the document.\n  let iframeChildren = richTextField.contentDocument.body.children;\n\n  newVideo.setAttribute(\'controls\', \'controls\');\n  newVideo.setAttribute(\'allowfullscreen\', \'allowfullscreen\');\n  newVideo.style.width = \'640px\';\n  newVideo.className = \'newVideo\';\n  newVideo.appendChild(newVideoSource);\n\n  if (richTextField.contentDocument.body.textContent === \'\') { //If the iframe is empty\n    console.log(\'first if statement\');\n    previewFile(source, newVideoSource);\n    setTimeout(function(){\n      richTextField.contentDocument.body.appendChild(newVideo);\n      richTextField.contentDocument.body.append(\'.\');\n      richTextField.contentDocument.body.focus();\n    }, 1000);\n  }\n  else if (richTextField.contentDocument.body.textContent !== \'\' && richTextField.contentDocument.body.children.length === 0) {//If the iframe has text but no html children\n    previewFile(source, newVideoSource);\n    setTimeout(function(){\n      richTextField.contentDocument.body.appendChild(newVideo);\n      richTextField.contentDocument.body.append(\'.\');\n      richTextField.contentDocument.body.focus();\n    }, 1000);\n  }\n  else if (richTextField.contentDocument.body.textContent !== \'\' && richTextField.contentDocument.body.children.length !== 0) {//The iframe has both content and html childrean\n    for (let i = 0; i < iframeChildren.length; i++) {\n      console.log(\'innerHTML for position\' + i + \':\' + iframeChildren[i].innerHTML.replace(/&nbsp;/g, \'\').trim());\n      console.log(cursorText);\n      console.log(iframeChildren[i].textContent);\n      // console.log(\'CursorText: \' + cursorText.trim());\n      if (cursorText === undefined && iframeChildren[i].textContent.replace(/&nbsp;/g, \'\').trim() === \'\') {\n        console.log(\'IN THE IF OF THE ELSE\');\n        previewFile(source, newVideoSource);\n        setTimeout(function(){\n          iframeChildren[i].appendChild(newVideo);\n          richTextField.contentDocument.body.append(\'.\');\n          richTextField.contentDocument.body.focus();\n        }, 1000);\n        return;\n      }\n      else if (iframeChildren[i].textContent.replace(/&nbsp;/g, \'\').trim() === cursorText.trim()) {\n        console.log(\'IN THE ELSE IF OF THE ELSE\');\n        // richTextField.contentDocument.body.insertBefore(newVideo, iframeChildren[i]);\n        previewFile(source, newVideoSource);\n        setTimeout(function(){\n          iframeChildren[i].appendChild(newVideo);\n          richTextField.contentDocument.body.append(\'.\');\n          richTextField.contentDocument.body.focus();\n        }, 1000);\n        return;\n      }\n    }\n  }\n}\n\n\n\n//UPLOAD IMAGES OR VIDEOS FROM HARD DRIVE\n$(\'.cloudinary_fileupload\').append($.cloudinary.unsigned_upload_tag(\'z2mez0vj\',\n{ cloud_name: \'writeit\' })\n  .bind(\'fileuploadprogress\', function(e, data) {\n    $(\'.progress_bar\').css(\'width\', Math.round((data.loaded * 100.0) / data.total) + \'%\');\n  })\n  .bind(\'cloudinarydone\', function(e, data) {\n    console.log(e);\n    console.log(data.result);\n      console.log(data.result.path);\n      console.log(data.result.path.slice(data.result.path.length - 3));\n\n      if (data.result.path.slice(data.result.path.length - 3) === \'jpg\' || data.result.path.slice(data.result.path.length - 3) === \'png\' || data.result.path.slice(data.result.path.length - 3) === \'bmp\') {\n        let newImageSource = \'https://res.cloudinary.com/writeit/image/upload/w_640,q_80,f_auto/\' + data.result.path.slice(0, data.result.path.length - 3) + \'jpg\';\n        let newImage = document.createElement(\'img\');\n        newImage.src = newImageSource;\n        newImage.className = \'newImage\';\n        execCmdPrompt(\'insertImage\', false, newImageSource);\n      }\n      else if (data.result.path.slice(data.result.path.length - 3) === \'mp4\' || data.result.path.slice(data.result.path.length - 3) === \'mov\') {\n        let newVideoSource = \'https://res.cloudinary.com/writeit/video/upload/w_640,q_80/\' + data.result.path.slice(0, data.result.path.length - 3);\n        console.log(\'https://res.cloudinary.com/writeit/video/upload/w_640,q_80/\' + data.result.path.slice(0, data.result.path.length - 3) + \'mp4\');\n        let htmlVideoTag = \'<video poster=\' + newVideoSource + \'jpg controls><source src=\\'\' + newVideoSource + \'mp4\\'/></video>\'\n        execCmdPrompt(\'insertHTML\', false, htmlVideoTag);\n      }\n      else if (data.result.path.slice(data.result.path.length - 3) === \'gif\') {\n        let newGifSource = \'https://res.cloudinary.com/writeit/image/upload/w_320,q_80/\' + data.result.path.slice(0, data.result.path.length - 3);\n        let htmlGifVideoTag = \'<video poster=\' + newGifSource + \'jpg autoplay loop><source src=\\'\' + newGifSource + \'mp4\\'/></video>\'\n        execCmdPrompt(\'insertHTML\', false, htmlGifVideoTag);\n      }\n      else {\n        alert(\'The file you are trying to upload is not supported\');\n      }\n  })\n);\n\n\n// UPLOAD ONLINE VIDEOS\n  function uploadOnlineVideo(url){\n    var uploadParameter = \'<iframe width=\\'640\\' height=\\'360\\' src=\\'\' + url + \'\\' frameborder=\\'0\\' allowfullscreen></iframe>\'\n    execCmdPrompt(\'insertHTML\', false, uploadParameter)\n  }\n\n\n\n\n//FUNCTION CALLS\nenableEditMode();",
          description:
          [
            {bullet: "Full stack blog."},
            {bullet: "WYSIWYG text editor."},
            {bullet: "Image, video upload."},
            {bullet: "Responsive / mobile."},
            {bullet: "Node, Express, psql, JavaScript, handlebars, html, CSS"}
          ],
          highlights: [
            {fact: "Blog with a WYSIWYG editor. (2017-02)"},
            {fact: "Why was it built?\nIt was my capstone project. I liked the idea of creating something that would allow people to save thoughts"},
            {fact: "Interesting fact: Ability to upload images, video and modify the display of text"},
          ],
          language: "Vanilla",
          images: [
            {image: ""},
            {image: ""},
            {image: ""},
          ],
          video_url: "https://youtube.com/embed/DB0xETCAt4E",
          id: "writeItVanilla",
          bgImage: {
            backgroundImage: "",
            boxShadow: ""
          }
        },

        {
          key: 3,
          title: "CSS Tutorial",
          url: "https://papostolopoulos.github.io/css-exploration/index-vanilla.html",
          git: "https://github.com/papostolopoulos/css-exploration",
          code_url: "",
          code: "/*\n  ========================================\n  006 Responsive design\n  ========================================\n*/\n\n@media screen and (max-width: 768px) {\n\n	body {\n		width: 100vw;\n		display: block;\n	}\n\n	h1 {\n		font-size: 180%;\n		line-height: 45px;\n	}\n\n	h2 {\n		font-size: 150%;\n	}\n\n	h3 {\n		font-size: 140%;\n		margin-top: -10px;\n	}\n\n	p {\n		font-size: 100%;\n	}\n\n	li {\n		font-size: 100%;\n	}\n\n	code {\n		font-size: 120%;\n	}\n\n	#container {\n		display: block;\n	}\n\n	aside {\n		width: 100%;\n		display: block;\n		height: 65px;\n		margin: -65px 0 0 0;\n		padding: 0 0 0 10px;\n		position: fixed;\n		right: 0px;\n		left: 0px;\n		background-color: rgba(35, 57, 91, .9);\n	}\n\n	header {\n		position: absolute;\n		width: 100%;\n	}\n\n	#logoDiv {\n		position: absolute;\n		margin: 5px 0 0 80%;\n		display: block;\n	}\n\n	#burger {\n		float: left;\n		width: 50%;\n		display: block;\n	}\n\n	.images {\n		width: 100%;\n	}\n\n	.boxModelsImages {\n		width: 100%;\n	}\n\n	nav {\n		padding: 15px;\n		margin-left: -12px;\n		margin-top: -10px;\n		width: 200px;\n	}\n\n	#menuBarUl {\n		border: 2px solid rgb(107, 247, 237);\n		padding-left: 30px;\n		margin-left: -12px;\n	}\n\n	nav ol, nav:active ol {\n		display: none;\n		z-index: 1000;\n	}\n\n	nav:hover, nav:hover ol {\n		display: block;\n		position: absolute;\n	}\n\n	nav:hover ol {\n		margin: 40px 0 0 0;\n		background-color: rgb(35, 57, 91);\n		padding: 0 10px;\n	}\n\n\n/*MAIN SECTION*/\n		section {\n			display: block;\n			width: 100%;\n			text-align: justify;\n		}\n\n		#mainSectionId {\n			width: 100%;\n			margin-top: 65px;\n		}\n\n		#interactiveSectionId {\n			width: 100%;\n			padding: 0 20px 10px 0;\n		}\n\n\n/*FOOTER*/\n		footer {\n			width: 100%;\n			height: 100%;\n			padding: 10px;\n			font-size: 120%;\n			line-height: 30px;\n		}\n\n} /*End of mobile design*/",
          description: [
            {bullet: "CSS tutorial with basic aspects of CSS."},
            {bullet: "Reset, Specificity, the Box Model, Positioning, Typography, Backgrounds, Responsive Design."},
            {bullet: "Responsive, mobile."},
            {bullet: "HTML, Vanilla CSS."}
          ],
          highlights: [
            {fact: "Basic CSS tutorial. (2016-12)"},
            {fact: "Why was it built?\nIt was some kind of homework for my coding school"},
            {fact: "Interesting fact: As you progress through the pages, you will see more CSS being added."},
          ],
          language: "Vanilla",
          images: [
            {image: ""},
            {image: ""},
            {image: ""},
          ],
          video_url: "https://youtube.com/embed/k-3_nybOPAQ",
          id: "cssTutorialVanilla",
          bgImage: {
            backgroundImage: "",
            boxShadow: ""
          }
        },

        {
          key: 4,
          title: "Spotify Discography Search",
          url: "https://git.io/vyfiO",
          git: "https://github.com/papostolopoulos/spotify",
          code_url: "",
          code: "window.onload = function(){\n  var artistSearchForm = document.getElementById(\'artistSearchForm\');\n  var artistNameEntry = document.getElementById(\'artistNameEntry\');\n  var submitButton = document.getElementById(\'submitButton\');\n\n  artistSearchForm.addEventListener(\'submit\', function (event) {\n    //Clear up the main content and prevent default\n    event.preventDefault();\n\n\n    var articlesDiv = document.getElementById(\'articlesDiv\');\n    articlesDiv.innerHTML = \'\';\n    var nameEntryValue = artistNameEntry.value.replace(/\s/g, \'+\');\n\n    fetch(\'https://api.spotify.com/v1/search?q=\\'\' + nameEntryValue + \'\\'&type=artist&limit=1\',\n    {\n      method: \'GET\',\n      headers: {\n        \'Authorization\': \'Basic *&lt;base64 encoded d0acac994f0e4947b5eacdc3c480e31d:c5fe231aa97a41b29bef006c193a8a1c&gt;*\',\n        \'Accept\': \'application/json\',\n        \'Content-Type\': \'application/json\'\n      }\n    })\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (json) {\n      console.log(\'JSON is\', json);\n      if (json.artists.items[0] === undefined) {\n        var errorMessage = document.createElement(\'h3\');\n        errorMessage.innerHTML = \'Sorry but your search did not return any results\';\n        articlesDiv.appendChild(errorMessage);\n        artistSearchForm.reset();\n      }\n      console.log(\'json.artists is\', json.artists);\n      var artistId = json.artists.items[0].id;\n      console.log(\'artistId is\', artistId);\n      return artistId\n    })\n    .then(function (artistId) {\n      fetch(\'https://api.spotify.com/v1/artists/\' + artistId + \'/albums\',\n      {\n        method: \'GET\',\n        headers: {\n          \'Authorization\': \'Basic base64 encoded d0acac994f0e4947b5eacdc3c480e31d:c5fe231aa97a41b29bef006c193a8a1c\',\n          \'Accept\': \'application/json\',\n          \'Content-Type\': \'application/json\'\n        }\n      })\n      .then(function(response) {\n        return response.json();\n      })\n      .then(function (json) {\n        var jsonItems = json.items;\n        console.log(\'json items is\', jsonItems);\n        var albums = [];\n        for (let i = 0; i &lt; jsonItems.length; i++) {\n          var albumItem = {}\n          albumItem.artistName = artistNameEntry.value\n          albumItem.albumName = jsonItems[i].name;\n          albumItem.albumID = jsonItems[i].id;\n          albumItem.tracks = {};\n          albumItem.images = jsonItems[i].images;\n          albums.push(albumItem);\n        }\n        return albums;\n      })\n      .then(function(albums) {\n        var trackPromises = [];\n        for (let j = 0; j &lt; albums.length; j++) {\n          let trackPromise = fetch(\'https://api.spotify.com/v1/albums/\' + albums[j].albumID + \'/tracks\',\n          {\n            method: \'GET\',\n            headers: {\n              \'Authorization\': \'Bearer BQBd97aViKgz3QrJQQ8KNh-bc5r8ZEEYYIXrz7fdsaSyQRD_lAHVSGNHfWzuXlrwKyqrPXYWQTM6sQAHw6NHql1q4TFWP9sxqK83bhja_jzpOkLairz61aADXU9Se85RdRd7ZPeWg_142GEB6Q\',\n              \'Accept\': \'application/json\',\n              \'Content-Type\': \'application/json\'\n            }\n          })\n          .then(function (response) {\n            return response.json();\n          })\n          .then(function (json) {\n            var albumTracks = json.items;\n            for (let k = 0; k &lt; albumTracks.length; k++) {\n              albums[j].tracks[\'song\'+(k+1)] = albumTracks[k].name;\n            }\n            return albums[j];\n          });\n          trackPromises.push(trackPromise);\n        } //End of the for loop\n        return Promise.all(trackPromises);\n      })//good up to here. put parenthesis if it does not work\n      .then(function(albums) {\n        // var articlesDiv = document.getElementById(\'articlesDiv\');\n\n        var articleH1 = document.createElement(\'h1\');\n        // var h1Value = artistNameEntry.value.slice(0,1).toUpperCase() + artistNameEntry.value.slice(1).toLowerCase() + \' Discography\';\n        var h1Value = artistNameEntry.value[0].toUpperCase();\n        for (let o = 1; o &lt; artistNameEntry.value.length; o++) {\n          if (artistNameEntry.value[o-1] === \' \') {\n            h1Value += artistNameEntry.value[o].toUpperCase();\n          }\n          else {\n            h1Value += artistNameEntry.value[o].toLowerCase();\n          }\n        }\n\n        h1Value += \' Discography\'\n        articleH1.innerHTML = h1Value;\n        articlesDiv.appendChild(articleH1)\n\n        var articleH1 = document.createElement(\'h1\');\n        articleH1.innerHTML = artistNameEntry;\n\n        for (let l = 0; l &lt; albums.length; l++) {\n          var albumTitle = document.createElement(\'h3\');\n          albumTitle.innerHTML = albums[l].albumName\n          // console.log(albums[l].images[0].height);\n\n          let albumSongs = albums[l].tracks;\n\n          var albumOl = document.createElement(\'ol\');\n          var counter = 1\n          for (let key in albumSongs) {\n            var albumLi = document.createElement(\'li\');\n            albumLi.innerHTML = counter + \'. \' + albumSongs[key];\n            albumOl.appendChild(albumLi);\n            counter++\n          }\n\n          var backgroundImageURL = albums[l].images[1].url;\n          console.log(backgroundImageURL);\n          // var image = document.createElement(\'img\');\n          // image.src = backgroundImageURL;\n          var textDiv = document.createElement(\'div\');\n\n          var article = document.createElement(\'article\');\n          article.className += \'albumSlot\';\n          article.style.background = \'url(\' + backgroundImageURL + \')\';\n          // article.appendChild(image);\n          textDiv.appendChild(albumTitle);\n          textDiv.appendChild(albumOl);\n          article.appendChild(textDiv);\n\n\n          // var articlesDiv = document.getElementById(\'articlesDiv\');\n          articlesDiv.appendChild(article);\n        }\n        console.log(albums);\n      });\n    });\n    // artistSearchForm.reset();\n  }); //End of submit Event Listener\n\n}; //End of window.onload",
          description: [
            {bullet: "API calls to the Spotify API."},
            {bullet: "Search for artists' discographies."},
            {bullet: "Review the song titles and album covers"},
            {bullet: "JavaScript, Ajax calls, CSS, HTML"}
          ],
          highlights: [
            {fact: "See the discography of your favorite artist. (2017-01)"},
            {fact: "Why was it built?\nIt was built as a school assignment. I wanted to learn on API calls"},
            {fact: "Interesting fact: Different API calls in spotify with promises."},
          ],
          language: "Vanilla",
          images: [
            {image: ""},
            {image: ""},
            {image: ""},
          ],
          video_url: "",
          id: "spotifyDiscographyVanilla",
          bgImage: {
            backgroundImage: "",
            boxShadow: ""
          }
        },

        {
          key: 5,
          title: "Image filtering",
          url: "https://goo.gl/s9sHDS",
          git: "https://github.com/papostolopoulos/image_filtering",
          code_url: "",
          code: "window.onload = function () {\n\n  var fileMenu = document.getElementById(\'fileMenu\');\n  var fileSubMenu = document.getElementById(\'fileSubMenu\');\n  fileMenu.subMenu = fileSubMenu;\n\n  var editMenu = document.getElementById(\'editMenu\');\n  var editSubMenu = document.getElementById(\'editSubMenu\');\n  editMenu.subMenu = editSubMenu;\n\n  var imageMenu = document.getElementById(\'imageMenu\');\n  var imageSubMenu = document.getElementById(\'imageSubMenu\');\n  imageMenu.subMenu = imageSubMenu;\n\n  var layerMenu = document.getElementById(\'layerMenu\');\n  var layerSubMenu = document.getElementById(\'layerSubMenu\');\n  layerMenu.subMenu = layerSubMenu;\n\n  var adjustmentMenu = document.getElementById(\'adjustmentMenu\');\n  var adjustmentSubMenu = document.getElementById(\'adjustmentSubMenu\');\n  adjustmentMenu.subMenu = adjustmentSubMenu;\n\n  var filterMenu = document.getElementById(\'filterMenu\');\n  var filterSubMenu = document.getElementById(\'filterSubMenu\');\n  filterMenu.subMenu = filterSubMenu;\n\n  var viewMenu = document.getElementById(\'viewMenu\');\n  var viewSubMenu = document.getElementById(\'viewSubMenu\');\n  viewMenu.subMenu = viewSubMenu;\n\n  var fractalsMenu = document.getElementById(\'fractalsMenu\');\n  var fractalsSubMenu = document.getElementById(\'fractalsSubMenu\');\n  fractalsMenu.subMenu = fractalsSubMenu;\n\n  var helpMenu = document.getElementById(\'helpMenu\');\n  var helpSubMenu = document.getElementById(\'helpSubMenu\');\n  helpMenu.subMenu = helpSubMenu;\n\n  var verticalMenus = document.getElementsByClassName(\'menuVertical\');\n\n  fileMenu.addEventListener(\'click\', showFileMenu);\n  editMenu.addEventListener(\'click\', showEditMenu);\n  imageMenu.addEventListener(\'click\', showImageMenu);\n  layerMenu.addEventListener(\'click\', showLayerMenu);\n  adjustmentMenu.addEventListener(\'click\', showAdjustmentMenu);\n  filterMenu.addEventListener(\'click\', showFilterMenu);\n  viewMenu.addEventListener(\'click\', showViewMenu);\n  fractalsMenu.addEventListener(\'click\', showFractalsMenu);\n  helpMenu.addEventListener(\'click\', showHelpMenu);\n\n  function showFileMenu() {\n    fileSubMenu.style.visibility === \'\' || fileSubMenu.style.visibility === \'hidden\' ? fileSubMenu.style.visibility = \'visible\' : fileSubMenu.style.visibility = \'hidden\';\n  }\n  function showEditMenu() {\n    editSubMenu.style.visibility === \'\' || editSubMenu.style.visibility === \'hidden\' ? editSubMenu.style.visibility = \'visible\' : editSubMenu.style.visibility = \'hidden\';\n  }\n  function showImageMenu() {\n    imageSubMenu.style.visibility === \'\' || imageSubMenu.style.visibility === \'hidden\' ? imageSubMenu.style.visibility = \'visible\' : imageSubMenu.style.visibility = \'hidden\';\n  }\n  function showLayerMenu() {\n    layerSubMenu.style.visibility === \'\' || layerSubMenu.style.visibility === \'hidden\' ? layerSubMenu.style.visibility = \'visible\' : layerSubMenu.style.visibility = \'hidden\';\n  }\n  function showAdjustmentMenu() {\n    adjustmentSubMenu.style.visibility === \'\' || adjustmentSubMenu.style.visibility === \'hidden\' ? adjustmentSubMenu.style.visibility = \'visible\' : adjustmentSubMenu.style.visibility = \'hidden\';\n  }\n  function showFilterMenu() {\n    filterSubMenu.style.visibility === \'\' || filterSubMenu.style.visibility === \'hidden\' ? filterSubMenu.style.visibility = \'visible\' : filterSubMenu.style.visibility = \'hidden\';\n  }\n  function showViewMenu() {\n    viewSubMenu.style.visibility === \'\' || viewSubMenu.style.visibility === \'hidden\' ? viewSubMenu.style.visibility = \'visible\' : viewSubMenu.style.visibility = \'hidden\';\n  }\n  function showFractalsMenu() {\n    fractalsSubMenu.style.visibility === \'\' || fractalsSubMenu.style.visibility === \'hidden\' ? fractalsSubMenu.style.visibility = \'visible\' : fractalsSubMenu.style.visibility = \'hidden\';\n  }\n  function showHelpMenu() {\n    helpSubMenu.style.visibility === \'\' || helpSubMenu.style.visibility === \'hidden\' ? helpSubMenu.style.visibility = \'visible\' : helpSubMenu.style.visibility = \'hidden\';\n  }\n\n  // helpMenu.addEventListener(\'mouseover\', showHelpMenuMouseOver);\n\n\n  fileMenu.addEventListener(\'mouseover\', showMenuMouseOver);\n  editMenu.addEventListener(\'mouseover\', showMenuMouseOver);\n  imageMenu.addEventListener(\'mouseover\', showMenuMouseOver);\n  layerMenu.addEventListener(\'mouseover\', showMenuMouseOver);\n  adjustmentMenu.addEventListener(\'mouseover\', showMenuMouseOver);\n  filterMenu.addEventListener(\'mouseover\', showMenuMouseOver);\n  viewMenu.addEventListener(\'mouseover\', showMenuMouseOver);\n  fractalsMenu.addEventListener(\'mouseover\', showMenuMouseOver);\n  helpMenu.addEventListener(\'mouseover\', showMenuMouseOver);\n  //\n  function showMenuMouseOver() {\n    if (this.subMenu.style.visibility === \'visible\') {\n      return;\n    }\n    //This is the primary code\n    this.subMenu.style.visibility = \'hidden\'\n    for (var i = 0; i &lt; verticalMenus.length; i++) {\n      if (verticalMenus[i].style.visibility === \'visible\' && this.subMenu.style.visibility === \'hidden\') {\n        verticalMenus[i].style.visibility = \'hidden\';\n        this.subMenu.style.visibility = \'visible\';\n      }\n    }\n  }\n\n\n\n  function hideMenus() {\n    for (var i = 0; i &lt; verticalMenus.length; i++) {\n      verticalMenus[i].addEventListener(\'click\', hideIt);\n    }\n\n    function hideIt() {\n      if (this.style.visibility === \'visible\') {\n        this.style.visibility = \'hidden\';\n      }\n    }\n  }\n\n  hideMenus();\n\n};",
          description: [
            {bullet: "Image editing and filters application."},
            {bullet: "Open images from the hard drive or online sources."},
            {bullet: "Filters for brightness, contrast, transparency, grayscale, blur etc."},
            {bullet: "Save in a different image formats."},
            {bullet: "Node, JavaScript, CSS, HTML"}
          ],
          highlights: [
            {fact: "Image filters through algo calculations. (2016-11)"},
            {fact: "Why was it built?\nClass project. I wanted to learn some techniques on loading and editing images online."},
            {fact: "Interesting fact: Images can be saved in different formats"},
          ],
          language: "Vanilla",
          images: [
            {image: ""},
            {image: ""},
            {image: ""},
          ],
          video_url: "https://youtube.com/embed/RYklsgi93uA",
          id: "imageEditingVanilla",
          bgImage: {
            backgroundImage: "",
            boxShadow: ""
          }
        },

        {
          key: 6,
          title: "SportyTourist.com",
          url: "http://sportytourist.com",
          git: "https://github.com/papostolopoulos/sportytourist",
          code_url: "",
          code: "var sourcesArr = [\n  {\n    source: \'ESPN\',\n    url: \'https://newsapi.org/v1/articles?source=espn&sortBy=top&apiKey=909efd3e931c4e16bde5565b8d10f113\'\n  },\n  {\n    source: \'ESPN Cric Info\',\n    url: \'https://newsapi.org/v1/articles?source=espn-cric-info&sortBy=latest&apiKey=909efd3e931c4e16bde5565b8d10f113\',\n  },\n  {\n    source: \'Fox Sports\',\n    url: \'https://newsapi.org/v1/articles?source=fox-sports&sortBy=latest&apiKey=909efd3e931c4e16bde5565b8d10f113\'\n  },\n  {\n    source: \'NFL News\',\n    url: \'https://newsapi.org/v1/articles?source=nfl-news&sortBy=latest&apiKey=909efd3e931c4e16bde5565b8d10f113\'\n  },\n  {\n    source: \'SKY Sports News\',\n    url: \'https://newsapi.org/v1/articles?source=sky-sports-news&sortBy=latest&apiKey=909efd3e931c4e16bde5565b8d10f113\'\n  },\n  {\n  source: \'BBC Sports\',\n  url: \'https://newsapi.org/v1/articles?source=bbc-sport&sortBy=top&apiKey=909efd3e931c4e16bde5565b8d10f113\'\n  },\n  {\n    source: \'FourFourTwo\',\n    url: \'https://newsapi.org/v1/articles?source=four-four-two&sortBy=latest&apiKey=909efd3e931c4e16bde5565b8d10f113\'\n  },\n  {\n    source: \'talkSport\',\n    url: \'https://newsapi.org/v1/articles?source=talksport&sortBy=latest&apiKey=909efd3e931c4e16bde5565b8d10f113\'\n  },\n  {\n    source: \'TheSPORTbible\',\n    url: \'https://newsapi.org/v1/articles?source=the-sport-bible&sortBy=latest&apiKey=909efd3e931c4e16bde5565b8d10f113\'\n  },\n  {\n    source: \'Football Italia\',\n    url: \'https://newsapi.org/v1/articles?source=football-italia&sortBy=latest&apiKey=909efd3e931c4e16bde5565b8d10f113\'\n  }\n];\nvar expandedSourcesArr = [];\n//shuffle the array\nfunction shuffleArray(array) {\n    for (var i = array.length - 1; i &gt; 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n    return array;\n  }\n\n//reload the page\nfunction pageReload(time) {\n  setTimeout(reloadFun, time);\n}\n//callback for reloading the page\nfunction reloadFun() {\n  window.location.reload(true);\n}\n\nwindow.onload = function() {\n  shuffleArray(sourcesArr);\n  heroSectionArticles(sourcesArr);\n  sportsSectionArticles(sourcesArr);\n\n  toggleHeroClass();\n  toggleArticleClasses();\n  pageReload(600000);\n};//End of onload function\n\n\nfunction expandSources(arrWithSources, endArr) {\n  for (var i = 0; i &lt; arrWithSources.length; i++) {\n    let sourcesUrl = arrWithSources[i].url;\n    $.getJSON(sourcesUrl, function (result) {\n      endArr.push(result);\n      // console.log(result);\n    });\n  }\n}\nexpandSources(sourcesArr, expandedSourcesArr);\n// console.log(expandedSourcesArr);\n//---------------------HERO CONTENT CREATION------------------------------\n//creation and append of the article tags in the main Grid\nfunction heroSectionArticles(arrWithSources) {\n  let heroSection = document.getElementById(\'heroSection\');\n  let sourcesUrl = arrWithSources[0].url;\n  let heroArticle = document.createElement(\'article\');\n  heroArticle.className += \'heroArticleClass\';\n  // heroArticle.className += \' transform\'; Not needed because I am not applying special effect\n  arrWithSources[0] = heroArticle;\n  apiData(0, sourcesUrl);\n  heroSection.appendChild(heroArticle);\n}\n\n\n//------------------MAIN GRID CONTENT CREATION----------------------------\n//creation and append of the article tags in the main Grid\nfunction sportsSectionArticles(arrWithSources) {\n  let sportsSection = document.getElementById(\'sportsSection\');\n  for (let i = 1; i &lt; arrWithSources.length; i++) {\n    let sourcesUrl = arrWithSources[i].url;\n\n    function jSonArr(url) {\n      $.getJSON(url, function (result) {\n        // console.log(result);\n      });\n    }\n    jSonArr(sourcesUrl);\n\n    let sportsArticle = document.createElement(\'article\');\n    sportsArticle.className += \'sportsArticleClass\';\n    // sportsArticle.className += \' transform\'; //not needed because I am not applying special effect\n    arrWithSources[i] = sportsArticle;\n    apiData(i, sourcesUrl);\n    sportsSection.appendChild(sportsArticle);\n  }\n}\n\n//api Data retrieval\nfunction apiData(idxForSourcesArr, url) {\n  // console.log(\'The url is: \' + url);\n  $.ajax({\n    url: url,\n    method: \'GET\',\n    success: sportsNewsResult\n    // error: bbcNewsError\n  });\n\n  // Inner function in order to close over idxForSourcesArr\n  function sportsNewsResult(data) {\n    //articles\n    let resultTitle = document.createElement(\'h3\');\n    let resultSource = document.createElement(\'h4\');\n    let imageDiv = document.createElement(\'div\');\n    let heroImageDiv = document.createElement(\'div\');//////////////////////////////\n    let resultImage = document.createElement(\'img\');\n    let resultArticle = document.createElement(\'p\');\n    let articleSourceAnchor = document.createElement(\'a\');\n\n    let moreButtonDiv = document.createElement(\'div\');\n    let moreButtonAnchor = document.createElement(\'a\');\n\n    resultTitle.textContent = data.articles[0].title;\n    imageDiv.className += \'imageDiv\';\n    heroImageDiv.className += \'heroImageDiv\';/////////////////////////////////\n    moreButtonDiv.className += \'moreButtonDiv\';\n\n    articleSourceAnchor.setAttribute(\'href\', data.articles[0].url);\n    articleSourceAnchor.setAttribute(\'target\', \'_blank\');\n    resultImage.setAttribute(\'alt\', \'Sorry, there is no image provided by the source\');\n    articleSourceAnchor.innerText = \'Source: \' + data.source + \' via newsapi.org \';\n    resultImage.src = data.articles[0].urlToImage;\n    resultArticle.textContent = data.articles[0].description;\n    moreButtonAnchor.innerText = \'More\';\n\n    //\n    imageDiv.appendChild(resultImage);\n    resultSource.appendChild(articleSourceAnchor);\n    moreButtonDiv.appendChild(moreButtonAnchor);\n    sourcesArr[idxForSourcesArr].appendChild(imageDiv);\n    sourcesArr[idxForSourcesArr].appendChild(resultTitle);\n    sourcesArr[idxForSourcesArr].appendChild(resultSource);\n    sourcesArr[idxForSourcesArr].appendChild(resultArticle);\n    sourcesArr[idxForSourcesArr].appendChild(moreButtonDiv);\n\n  }\n} //End of apiData function\n\n// function bbcNewsError {\n//\n// }\n\n//-------------------TOGGLES------------------------------\n//toggle between classes for expanding the hero article content\nfunction toggleHeroClass() {\n  $(\'.heroArticleClass\').on(\'click\', function(){\n    $(this).toggleClass(\'heroArticleExpanded\');\n    $(this).children(\'div\').toggleClass(\'heroImageDivExpanded\');\n    $(this).children(\'div\').toggleClass(\'imageDiv\');\n    $(this).children(\'.moreButtonDiv\').removeClass(\'imageDiv\');\n\n    $(\'.sportsArticleExpanded\').removeClass(\'sportsArticleExpanded\');\n    $(\'.imageDivExpanded\').removeClass(\'imageDivExpanded\');\n  });\n}\n\n//toggle between classes for expanding the article content\nfunction toggleArticleClasses() {\n  $(\'.sportsArticleClass\').on(\'click\', function(){\n    $(this).toggleClass(\'sportsArticleExpanded\');\n    $(this).children(\'.imageDiv\').toggleClass(\'imageDivExpanded\');\n\n    $(this).siblings().removeClass(\'sportsArticleExpanded\');\n    $(\'.heroArticleExpanded\').removeClass(\'heroArticleExpanded\');\n    $(\'.heroImageDivExpanded\').addClass(\'heroImageDiv\');\n    $(\'.heroImageDivExpanded\').removeClass(\'heroImageDivExpanded\');\n    $(this).siblings().children(\'div\').removeClass(\'imageDivExpanded\');\n  });\n}",
          description: [
            {bullet: "Sports news aggregator."},
            {bullet: "News API calls"},
            {bullet: "JavaScript, AJAX, CSS, HTML"}
          ],
          highlights: [
            {fact: "Sports news highlights from different sources. (2016-08)"},
            {fact: "Why was it built?\nI wanted to learn on api calls"},
            {fact: "Interesting fact: All the api calls are done from one source."},
          ],
          language: "Vanilla",
          images: [
            {image: ""},
            {image: ""},
            {image: ""},
          ],
          video_url: "https://youtube.com/embed/85MEVokytgs",
          id: "sportyTouristVanilla",
          bgImage: {
            backgroundImage: "",
            boxShadow: ""
          }
        },

        {
          key: 7,
          title: "hangman.pro",
          url: "http://hangman.pro",
          git: "https://github.com/papostolopoulos/hangman",
          code_url: "",
          code: "$(document).ready(function(){\n  var alphabet = [\'a\', \'b\', \'c\', \'d\', \'e\', \'f\', \'g\', \'h\', \'i\', \'j\', \'k\', \'l\', \'m\', \'n\', \'o\', \'p\', \'q\', \'r\', \'s\', \'t\', \'u\', \'v\', \'w\', \'x\', \'y\', \'z\', \' \', \'\'\', \'-\'];\n  var imageChanger = 1;\n\n  //FUNCTIONS\n  //1. New random word\n  function newRandomWord(){\n    var url = \'https://wordsapiv1.p.mashape.com/words/?random=true\';\n    fetch(url, {\n      method: \'GET\',\n      headers: {\n        \'X-Mashape-Key\': \'N5TPAl6S0Dmsh231cDKa7vKInQxwp1iMvEWjsniJfs7d8e0C86\',\n        \'Accept\': \'application/json\',\n        \'Content-Type\': \'application/json\'\n      }\n    })\n    .then(function(response) {\n      return response.json();\n    })\n    .then(function(data) {\n      return data.word;\n    })\n    .then(function(word) {\n      var randomWord = word.toLowerCase();\n      var newRow = $(\'tr\');\n      console.log(\'The new random word is: \' + randomWord);\n      for (var i = 0; i &lt; randomWord.length; i++) {\n        newRow.append($(\'&lt;td class=\'randomWordTd randomWordTdWhite\'&gt;\' + randomWord[i] + \'&lt;/td&gt;\'));\n      }\n      $(\'#randomWordTable\').append(function(){\n          $(newRow).show(2000);\n      });\n      $(\'.remainingLetters\').html(\'&lt;h3&gt;You have \' + randomWord.length + \' letters remaining for guessing&lt;/h3&gt;\');\n      $(\'#usedLetters\').empty();\n      $(\'#wordSubmit\').off(); //You can move this in the \'new game action\'. Also put and elseif statement in the event the user clicks on wordSubmit but has not entered a word\n      $(\'#wordSubmit\').click(function(){\n        var $wordGuess = $(\'#iKnowTheWord\').val().toLowerCase();\n        if ($wordGuess === randomWord) {\n          $(\'#infoMessage\').html(\'&lt;h3&gt;That is great! You have guessed the word. YOU WON!&lt;/h3&gt;\');\n          $(\'#imageArea\').html(\'&lt;img class=\'finalImage\' src=\'assets/images/escape.gif\'&gt;\');\n          $(\'#iKnowTheWord\').val(\'\');\n        }\n        else {\n          console.log(\'word guess is: \', $wordGuess, \'the random word is\', randomWord);\n          $(\'#infoMessage\').html(\'&lt;h3&gt;Sorry, the right word is \' + randomWord + \'. You lost :-(&lt;/h3&gt;\');\n          $(\'#imageArea\').html(\'&lt;img src=\'assets/images/12.jpg\'&gt;\');\n          $(\'#iKnowTheWord\').val(\'\');\n        }\n      });\n    });\n  }\n\n  //2. New letter entry\n\n  function newLetterEntry() {\n    var $letterGuess = $(\'#newLetter\').val().toLowerCase();\n    // alert($letterGuess);\n    var counter = 0;\n    var $wordToGuess = $(\'td[class=\'randomWordTd randomWordTdWhite\']\').text();\n    var $guessedLetters = $(\'td[class=\'randomWordTd randomWordTdBlack\']\').text();\n    var wordLength = $wordToGuess.length;\n    // console.log(\'The remaining letters are: \' + $wordToGuess);\n    // console.log(\'The found letters are: \' + $guessedLetters);\n    var usedLettersString = $(\'#usedLetters\').text()\n    if (usedLettersString.indexOf($letterGuess) !== -1 || $guessedLetters.indexOf($letterGuess) !== -1) {\n      $(\'#infoMessage\').html(\'&lt;h3&gt;You have already tried to guess this letter. Try again.\');\n    }\n    else {\n      for (var i = 0; i &lt; wordLength; i++) {\n        // console.log(\'checking on position \' + i + \' for the element \' + $wordToGuess[i] + \' and with image changer \' + imageChanger);\n        if ($letterGuess === $wordToGuess[i]) {\n          // console.log(\'Inside the if statement. $letterGuess is \' + $letterGuess + \' and $wordToGuess is \' + $wordToGuess[i] + \' for position \' + i);\n          $(\'#infoMessage\').html(\'&lt;h3&gt;That is correct! The letter \'\' + $letterGuess + \'\' is included in the secret word&lt;/h3&gt;\');\n          $($(\'td[class=\'randomWordTd randomWordTdWhite\']\')[i - counter]).removeClass(\'randomWordTdWhite\').addClass(\'randomWordTdBlack\');\n          counter +=1;\n          $(\'.remainingLetters\').html(\'&lt;h3&gt;You have \' + ($wordToGuess.length - counter) + \' letters remaining for guessing&lt;/h3&gt;\');\n          // console.log(\'counter is \' + counter + \' and word length is \' + wordLength);\n          if (wordLength - counter === 0) {\n            $(\'#infoMessage\').html(\'&lt;h3&gt;That is great! You have guessed the word. YOU WON!&lt;/h3&gt;\');\n            $(\'#imageArea\').html(\'&lt;img class=\'finalImage\' src=\'assets/images/escape.gif\'&gt;\');\n          }\n        }\n        else if ($wordToGuess.indexOf($letterGuess) !== -1 && $letterGuess !== $wordToGuess[i]) {\n          continue;\n        }\n        else {\n          imageChanger += 1;\n          // console.log(\'imageChanger is \' + imageChanger);\n          if (imageChanger &gt;= 12) {\n            $(\'#infoMessage\').html(\'&lt;h3&gt;Sorry, you lost. The word is \'\' + $(\'td\').text() + \'\'. Better luck next time.\');\n            $(\'#imageArea\').html(\'&lt;img src=\'assets/images/12.jpg\'&gt;\');\n            break;\n          }\n          else {\n            $(\'#infoMessage\').html(\'&lt;h3&gt;Bummer. The letter \'\' + $letterGuess + \'\' is not included in the secret word.&lt;/h3&gt;\');\n            $(\'#imageArea\').html(\'&lt;img src=\'assets/images/\' + imageChanger + \'.jpg\'&gt;\');\n            $(\'#usedLetters\').append($letterGuess + \' \');\n            break;\n          }\n        } //else if the letter is not matching\n      } //End of for loop for evaluating the letter matching\n    } //else if the letter has not been evaluated already\n\n  } //End of newLetterEntry function\n\n  //GAME FLOW\n  $(\'.startButton\').click(function(){\n    $(\'tr\').empty();\n    $(\'#infoMessage\').empty();\n    $(\'#newLetter\').val(\'\');\n    $(\'#imageArea\').html(\'&lt;img src=\'assets/images/1.jpg\'&gt;\');\n    imageChanger = 1;\n    newRandomWord();\n  });  //End of $(\'.startButton\').click\n\n  $(\'#letterSubmit\').click(function(){\n    var $newLetter = $(\'#newLetter\').val().toLowerCase();\n    if ($newLetter.length === 0 || alphabet.indexOf($newLetter) === -1) {\n      $(\'#infoMessage\').html(\'&lt;h3&gt;Please enter a valid alphabet letter&lt;/h3&gt;\');\n    }\n    else {\n      newLetterEntry();\n    }\n    $(\'#newLetter\').val(\'\');\n  });\n\n});",
          description: [
            {bullet: "Game of hangman."},
            {bullet: "Random word pick and play."},
            {bullet: "JQuery, AJAX, CSS, HTML"}
          ],
          highlights: [
            {fact: "Play hangman online. (2016-08)"},
            {fact: "Why was it built?\nThis was my first online project."},
            {fact: "Interesting fact: You can cheat by looking at the developer tools."},
          ],
          language: "jQuery",
          images: [
            {image: ""},
            {image: ""},
            {image: ""},
          ],
          video_url: "https://youtube.com/embed/hpI6RAwc0g0",
          id: "hangmanjQuery",
          bgImage: {
            backgroundImage: "",
            boxShadow: ""
          }
        },

        {
          key: 8,
          title: "Clock",
          url: "https://papostolopoulos.github.io/js30/02-clock/index-vanilla.html",
          git: "https://github.com/papostolopoulos/js30/tree/master/02-clock",
          code_url: "",
          code: "<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Clock - vanilla JS</title>\n\n    <style media=\"screen\">\n      body{\n        background-image: url(clock-vanilla.jpg);\n        background-size: cover;\n        box-sizing: border-box;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 100vh;\n        font-family: verdana, helvetica, serif;\n        margin: 0;\n        padding: 0;\n        font-weight: bold;\n        font-size: 8vh;\n      }\n      h1{\n        padding: 0;\n        margin: 0;\n        font-size: 8vh;\n      }\n      .clock-body {\n        width: 50vh;\n        height: 50vh;\n        border-radius: 50%;\n        border: 3vh solid red;\n        padding: 2px;\n        position: relative;\n      }\n      .clock-face {\n        width: 100%;\n        height: 100%;\n        position: relative;\n      }\n      .clock-overlay {\n        width: 100%;\n        height: 100%;\n        z-index: -1;\n        background-color: rgba(255, 255, 255, .8);\n        border-radius: 50%;\n        position: absolute;\n        top: 0;\n        left: 0;\n      }\n      .top_third, .middle_third, .bottom_third {\n        width: 100%;\n        height: 33.33%;\n      }\n      .top_third {\n        text-align: center;\n      }\n      .middle_third {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      .middle1, .middle2, .middle3{\n        width: 33.33%;\n        height: 100%;\n      }\n      .middle1 {\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n      }\n      .middle2{\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      .middle3{\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n      }\n      .bottom_third{\n        position: relative;\n        text-align: center;\n      }\n      .bottom_third span{\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n      }\n      .center_dot {\n        width: 30%;\n        height: 30%;\n        background-color: black;\n        border-radius: 50%;\n        z-index: 1;\n      }\n      #hours{\n        height: 45%;\n        background-color: black;\n        width: 5%;\n        position: absolute;\n        left: 47.5%;\n        top: 5%;\n        transform-origin: bottom;\n      }\n      #minutes{\n        height: 50%;\n        background-color: black;\n        width: 3%;\n        position: absolute;\n        left: 48.5%;\n        transform-origin: bottom;\n      }\n      #seconds{\n        height: 50%;\n        background-color: black;\n        width: 1%;\n        position: absolute;\n        left: 49.5%;\n        transform-origin: bottom;\n      }\n    </style>\n  </head>\n  <body>\n    <div class=\"clock-body\">\n\n      <div class=\"clock-face\">\n        <div id=\"hours\"></div>\n        <div id=\"minutes\"></div>\n        <div id=\"seconds\"></div>\n      </div>\n\n      <div class=\"clock-overlay\">\n        <div class=\"top_third\">12</div>\n        <div class=\"middle_third\">\n          <div class=\"middle1\">9</div>\n          <div class=\"middle2\">\n            <div class=\"center_dot\"></div>\n          </div>\n          <div class=\"middle3\">3</div>\n        </div>\n        <div class=\"bottom_third\">\n          <span>6</span>\n        </div>\n      </div>\n    </div>\n\n\n\n\n\n    <script>\n      var hoursPointer = document.getElementById(\"hours\");\n      var minutesPointer = document.getElementById(\"minutes\");\n      var secondsPointer = document.getElementById(\"seconds\");\n      function playTime() {\n        var newDate = new Date();\n        var getTheHours = newDate.getHours();\n        var getTheMinutes = newDate.getMinutes();\n        var getTheSeconds = newDate.getSeconds();\n        var secondsTurn = (360 / 60) * getTheSeconds;\n        var minutesTurn = (360 / 60) * getTheMinutes + (secondsTurn / 60);\n        var hoursTurn = (360 / 12) * getTheHours + (minutesTurn / 12);\n        secondsPointer.style.transform = `rotate(${secondsTurn}deg)`\n        minutesPointer.style.transform = `rotate(${minutesTurn}deg)`\n        hoursPointer.style.transform = `rotate(${hoursTurn}deg)`\n      }\n      setInterval(playTime, 1000);\n      playTime();\n    </script>\n\n  </body>\n</html>",
          description: [
            {bullet: "A clock."},
            {bullet: "Updates automatically by firing interval calls."},
            {bullet: "JavaScript, CSS, HTML."}
          ],
          highlights: [
            {fact: "Working clock displaying computer time. (2018-09)"},
            {fact: "Why was it built?\nGood practice for CSS transforms and timeouts"},
            {fact: "Interesting fact: transforms happen through a timeout function"},
          ],
          language: "Vanilla",
          images: [
            {image: ""},
            {image: ""},
            {image: ""},
          ],
          video_url: "https://youtube.com/embed/qc0xtBvhYE8",
          id: "clockVanilla",
          bgImage: {
            backgroundImage: "",
            boxShadow: ""
          }
        },

        {
          key: 9,
          title: "Drum Kit - Vanilla",
          url: "https://papostolopoulos.github.io/js30/01-drum_kit/index-vanilla.html",
          git: "https://github.com/papostolopoulos/js30/tree/master/01-drum_kit",
          code_url: "",
          code: "<!DOCTYPE html>\n<html lang=\'en\'>\n<head>\n  <meta charset=\'UTF-8\'>\n  <title>JS Drum Kit - Paris Apostolopoulos version</title>\n  <link href=\'https://fonts.googleapis.com/css?family=Raleway\' rel=\'stylesheet\'>\n  <link rel=\'stylesheet\' href=\'style-vanilla.css\'>\n</head>\n<body>\n\n\n  <div class=\'keys\'>\n    <div data-key=\'65\' class=\'key\'>\n      <kbd>A</kbd>\n      <span class=\'sound\'>clap</span>\n    </div>\n    <div data-key=\'83\' class=\'key\'>\n      <kbd>S</kbd>\n      <span class=\'sound\'>hihat</span>\n    </div>\n    <div data-key=\'68\' class=\'key\'>\n      <kbd>D</kbd>\n      <span class=\'sound\'>kick</span>\n    </div>\n    <div data-key=\'70\' class=\'key\'>\n      <kbd>F</kbd>\n      <span class=\'sound\'>openhat</span>\n    </div>\n    <div data-key=\'71\' class=\'key\'>\n      <kbd>G</kbd>\n      <span class=\'sound\'>boom</span>\n    </div>\n    <div data-key=\'72\' class=\'key\'>\n      <kbd>H</kbd>\n      <span class=\'sound\'>ride</span>\n    </div>\n    <div data-key=\'74\' class=\'key\'>\n      <kbd>J</kbd>\n      <span class=\'sound\'>snare</span>\n    </div>\n    <div data-key=\'75\' class=\'key\'>\n      <kbd>K</kbd>\n      <span class=\'sound\'>tom</span>\n    </div>\n    <div data-key=\'76\' class=\'key\'>\n      <kbd>L</kbd>\n      <span class=\'sound\'>tink</span>\n    </div>\n  </div>\n\n  <audio data-key=\'65\' src=\'sounds/clap.wav\'></audio>\n  <audio data-key=\'83\' src=\'sounds/hihat.wav\'></audio>\n  <audio data-key=\'68\' src=\'sounds/kick.wav\'></audio>\n  <audio data-key=\'70\' src=\'sounds/openhat.wav\'></audio>\n  <audio data-key=\'71\' src=\'sounds/boom.wav\'></audio>\n  <audio data-key=\'72\' src=\'sounds/ride.wav\'></audio>\n  <audio data-key=\'74\' src=\'sounds/snare.wav\'></audio>\n  <audio data-key=\'75\' src=\'sounds/tom.wav\'></audio>\n  <audio data-key=\'76\' src=\'sounds/tink.wav\'></audio>\n\n<script>\n  let divKey = document.getElementsByClassName(\'key\');\n  function addEffect(letter){\n    for(el of divKey){\n      let elLetter = el.firstElementChild.textContent.toLowerCase();\n      let elSound = el.lastElementChild.textContent;\n      let selectSound = document.querySelector(`audio[src=\'sounds/${elSound}.wav\']`);\n      if(elLetter === letter) {\n        el.classList.add(\'playing\');\n        selectSound.currentTime = 0;\n        selectSound.play();\n        setTimeout(() => removeEffect(letter), 70);\n      }\n    }\n  }\n  function removeEffect(letter) {\n    for(el of divKey){\n      let elLetter = el.firstElementChild.textContent.toLowerCase();\n      if(elLetter === letter) el.classList.remove(\'playing\');\n    }\n  }\n  window.onkeydown = event => addEffect(event.key.toLowerCase());\n</script>\n\n\n</body>\n</html>",
          description: [
            {bullet: "Drum Kit. Press the keys and hear the drums playing."},
            {bullet: "Vanilla JavaScript, CSS, HTML."},
            {bullet: "Similar project in the Vue section."}
          ],
          highlights: [
            {fact: "Play the drums from your keyboard. (2018-05)"},
            {fact: "Why was it built?\nGood practice for Javascript and CSS"},
            {fact: "Interesting fact: I built the same project in Vue.js too"},
          ],
          language: "Vanilla",
          images: [
            {image: ""},
            {image: ""},
            {image: ""},
          ],
          video_url: "https://youtube.com/embed/gHnogNy7aSk",
          id: "drumKitVanilla",
          bgImage: {
            backgroundImage: "",
            boxShadow: ""
          }
        },

        {
          key: 10,
          title: "addEventListener.xyz",
          url: "http://addEventListener.xyz",
          code_url: "YOU NEED TO ADD A COPY OF THE CODE. YOU NEED TO ADD IMAGES. YOU NEED TO ADD VIDEO FOOTAGE",
          git: "https://github.com/papostolopoulos/portfolio",
          code: "/*jshint esversion: 6 */\n// MAIN VUE INSTANCE\nlet app = new Vue({\n    el: \"#divContainer\",\n    data: {\n      active: [ //defines which page to render - see div with it divTransform in html\n          {Vanilla: true},\n          {Vue: false},\n          {jQuery: false}\n      ],\n      imagePath: \"assets/images/img-\",\n      videoPath: \"assets/videos/vid-\",\n      textPath: \"assets/txt_files/code-\",\n\n      sections: [\n        {id: 1, text: \"Vanilla\", active: true},\n        {id:2, text: \"Vue\", active: false},\n        {id: 3, text: \"jQuery\", active: false}\n      ],\n\n      updateStyle: {\n        Vanilla: { //This is for the hovering over the vanilla link\n          backgroundColor: \"rgb(250, 220, 52)\",\n          backgroundImage: 'url(\"assets/images/logo-javascript.png\")',\n          boxShadow: \"inset 100vw 100vh rgba(250, 220, 52, .5)\",\n          transition: \"all .3s\"\n        },\n        Vue: { //This is for the hovering over the Vue link\n          backgroundColor: \"rgba(66, 184, 131, .0001)\",\n          backgroundImage: 'url(\"assets/images/logo-vue.png\")',\n          boxShadow: \"inset 100vw 100vh rgba(66, 184, 131, .5)\",\n          transition: \"all .3s\"\n        },\n        jQuery: { //This is for the hovering over the jQuery link\n          backgroundColor: \"rgba(18, 26, 38, .0001)\",\n          backgroundImage: 'url(\"assets/images/logo-jquery.png\")',\n          boxShadow: \"inset 100vw 100vh rgba(18, 26, 38, .5)\",\n          transition: \"all .3s\"\n        },\n        clean: { //This is for the mousing out of the Vanilla, Vue or jQuery links in header\n          backgroundColor: \"\",\n          backgroundImage: '',\n          boxShadow: \"\",\n          transition: \"all .3s\"\n        },\n        expandCodeModal: {\n          position: \"fixed\",\n          zIndex: 2,\n          left: 0,\n          top: 0,\n          width: \"100vw\",\n          height: \"100vh\"\n        },\n        codeModalClose: {\n          position: \"static\",\n          zIndex: 1,\n          width: \"32vw\",\n          height: \"96vh\"\n        }\n      },  //End of updateStyle\n\n      activeModals: \"Vanilla\",\n      counter: 0, //This is for the image and text transition inside each modal\n      modalDisplay: \"none\", //This is for the image and text transition\n\n      projects: [\n        {\n          key: 1,\n          title: \"listMe.xyz\",\n          url: \"http://listme.xyz\",\n          git: \"https://github.com/papostolopoulos/listme\",\n          code_url: \"\",\n          code: \"\",\n          description: [\n            {bullet: \"Full stack CRUD to-do list.\"},\n            {bullet: \"Create, read, update and delete lists of todo items.\"},\n            {bullet: \"Create, update or delete user account.\"},\n            {bullet: \"Node, Express, knex, psql, JQuery, handlebars, CSS.\"}\n          ],\n          highlights: [\n            {fact: \"Customized to-do lists. (2017-03)\"},\n            {fact: \"Why was it built?\nI helped a colleague with his capstone project by creating the backend, database logic, backend - frontend connectivity\"},\n            {fact: \"Interesting fact: The user can update and customize the lists.\"},\n          ],\n          language: \"jQuery\",\n          images: [\n            {image: \"\"},\n            {image: \"\"},\n            {image: \"\"},\n          ],\n          video_url: \"https://youtube.com/embed/QI_-P_XE8fo\",\n          id: \"listMejQuery\",\n          bgImage: {\n            backgroundImage: \"\",\n            boxShadow: \"\"\n          }\n        },\n\n        {\n          key: 2,\n          title: \"writeit.pro\",\n          url: \"http://writeit.pro\",\n          git: \"https://github.com/papostolopoulos/writeit\",\n          code_url: \"\",\n          code: \"\",\n          description:\n          [\n            {bullet: \"Full stack blog.\"},\n            {bullet: \"WYSIWYG text editor.\"},\n            {bullet: \"Image, video upload.\"},\n            {bullet: \"Responsive / mobile.\"},\n            {bullet: \"Node, Express, psql, JavaScript, handlebars, html, CSS\"}\n          ],\n          highlights: [\n            {fact: \"Blog with a WYSIWYG editor. (2017-02)\"},\n            {fact: \"Why was it built?\nIt was my capstone project. I liked the idea of creating something that would allow people to save thoughts\"},\n            {fact: \"Interesting fact: Ability to upload images, video and modify the display of text\"},\n          ],\n          language: \"Vanilla\",\n          images: [\n            {image: \"\"},\n            {image: \"\"},\n            {image: \"\"},\n          ],\n          video_url: \"https://youtube.com/embed/DB0xETCAt4E\",\n          id: \"writeItVanilla\",\n          bgImage: {\n            backgroundImage: \"\",\n            boxShadow: \"\"\n          }\n        },\n\n        {\n          key: 3,\n          title: \"CSS Tutorial\",\n          url: \"https://papostolopoulos.github.io/css-exploration/index-vanilla.html\",\n          git: \"https://github.com/papostolopoulos/css-exploration\",\n          code_url: \"\",\n          code: \"\",\n          description: [\n            {bullet: \"CSS tutorial with basic aspects of CSS.\"},\n            {bullet: \"Reset, Specificity, the Box Model, Positioning, Typography, Backgrounds, Responsive Design.\"},\n            {bullet: \"Responsive, mobile.\"},\n            {bullet: \"HTML, Vanilla CSS.\"}\n          ],\n          highlights: [\n            {fact: \"Basic CSS tutorial. (2016-12)\"},\n            {fact: \"Why was it built?\nIt was some kind of homework for my coding school\"},\n            {fact: \"Interesting fact: As you progress through the pages, you will see more CSS being added.\"},\n          ],\n          language: \"Vanilla\",\n          images: [\n            {image: \"\"},\n            {image: \"\"},\n            {image: \"\"},\n          ],\n          video_url: \"https://youtube.com/embed/k-3_nybOPAQ\",\n          id: \"cssTutorialVanilla\",\n          bgImage: {\n            backgroundImage: \"\",\n            boxShadow: \"\"\n          }\n        },\n\n        {\n          key: 4,\n          title: \"Spotify Discography Search\",\n          url: \"https://git.io/vyfiO\",\n          git: \"https://github.com/papostolopoulos/spotify\",\n          code_url: \"\",\n          code: \"\",\n          description: [\n            {bullet: \"API calls to the Spotify API.\"},\n            {bullet: \"Search for artists' discographies.\"},\n            {bullet: \"Review the song titles and album covers\"},\n            {bullet: \"JavaScript, Ajax calls, CSS, HTML\"}\n          ],\n          highlights: [\n            {fact: \"See the discography of your favorite artist. (2017-01)\"},\n            {fact: \"Why was it built?\nIt was built as a school assignment. I wanted to learn on API calls\"},\n            {fact: \"Interesting fact: Different API calls in spotify with promises.\"},\n          ],\n          language: \"Vanilla\",\n          images: [\n            {image: \"\"},\n            {image: \"\"},\n            {image: \"\"},\n          ],\n          video_url: \"\",\n          id: \"spotifyDiscographyVanilla\",\n          bgImage: {\n            backgroundImage: \"\",\n            boxShadow: \"\"\n          }\n        },\n\n        {\n          key: 5,\n          title: \"Image filtering\",\n          url: \"https://goo.gl/s9sHDS\",\n          git: \"https://github.com/papostolopoulos/image_filtering\",\n          code_url: \"\",\n          code: \"\",\n          description: [\n            {bullet: \"Image editing and filters application.\"},\n            {bullet: \"Open images from the hard drive or online sources.\"},\n            {bullet: \"Filters for brightness, contrast, transparency, grayscale, blur etc.\"},\n            {bullet: \"Save in a different image formats.\"},\n            {bullet: \"Node, JavaScript, CSS, HTML\"}\n          ],\n          highlights: [\n            {fact: \"Image filters through algo calculations. (2016-11)\"},\n            {fact: \"Why was it built?\nClass project. I wanted to learn some techniques on loading and editing images online.\"},\n            {fact: \"Interesting fact: Images can be saved in different formats\"},\n          ],\n          language: \"Vanilla\",\n          images: [\n            {image: \"\"},\n            {image: \"\"},\n            {image: \"\"},\n          ],\n          video_url: \"https://youtube.com/embed/RYklsgi93uA\",\n          id: \"imageEditingVanilla\",\n          bgImage: {\n            backgroundImage: \"\",\n            boxShadow: \"\"\n          }\n        },\n\n        {\n          key: 6,\n          title: \"SportyTourist.com\",\n          url: \"http://sportytourist.com\",\n          git: \"https://github.com/papostolopoulos/sportytourist\",\n          code_url: \"\",\n          code: \"\",\n          description: [\n            {bullet: \"Sports news aggregator.\"},\n            {bullet: \"News API calls\"},\n            {bullet: \"JavaScript, AJAX, CSS, HTML\"}\n          ],\n          highlights: [\n            {fact: \"Sports news highlights from different sources. (2016-08)\"},\n            {fact: \"Why was it built?\nI wanted to learn on api calls\"},\n            {fact: \"Interesting fact: All the api calls are done from one source.\"},\n          ],\n          language: \"Vanilla\",\n          images: [\n            {image: \"\"},\n            {image: \"\"},\n            {image: \"\"},\n          ],\n          video_url: \"https://youtube.com/embed/85MEVokytgs\",\n          id: \"sportyTouristVanilla\",\n          bgImage: {\n            backgroundImage: \"\",\n            boxShadow: \"\"\n          }\n        },\n\n        {\n          key: 7,\n          title: \"hangman.pro\",\n          url: \"http://hangman.pro\",\n          git: \"https://github.com/papostolopoulos/hangman\",\n          code_url: \"\",\n          code: \"\",\n          description: [\n            {bullet: \"Game of hangman.\"},\n            {bullet: \"Random word pick and play.\"},\n            {bullet: \"JQuery, AJAX, CSS, HTML\"}\n          ],\n          highlights: [\n            {fact: \"Play hangman online. (2016-08)\"},\n            {fact: \"Why was it built?\nThis was my first online project.\"},\n            {fact: \"Interesting fact: You can cheat by looking at the developer tools.\"},\n          ],\n          language: \"jQuery\",\n          images: [\n            {image: \"\"},\n            {image: \"\"},\n            {image: \"\"},\n          ],\n          video_url: \"https://youtube.com/embed/hpI6RAwc0g0\",\n          id: \"hangmanjQuery\",\n          bgImage: {\n            backgroundImage: \"\",\n            boxShadow: \"\"\n          }\n        },\n\n        {\n          key: 8,\n          title: \"Clock\",\n          url: \"https://papostolopoulos.github.io/js30/02-clock/index-vanilla.html\",\n          git: \"https://github.com/papostolopoulos/js30/tree/master/02-clock\",\n          code_url: \"\",\n          code: \"\",\n          description: [\n            {bullet: \"A clock.\"},\n            {bullet: \"Updates automatically by firing interval calls.\"},\n            {bullet: \"JavaScript, CSS, HTML.\"}\n          ],\n          highlights: [\n            {fact: \"Working clock displaying computer time. (2018-09)\"},\n            {fact: \"Why was it built?\nGood practice for CSS transforms and timeouts\"},\n            {fact: \"Interesting fact: transforms happen through a timeout function\"},\n          ],\n          language: \"Vanilla\",\n          images: [\n            {image: \"\"},\n            {image: \"\"},\n            {image: \"\"},\n          ],\n          video_url: \"https://youtube.com/embed/qc0xtBvhYE8\",\n          id: \"clockVanilla\",\n          bgImage: {\n            backgroundImage: \"\",\n            boxShadow: \"\"\n          }\n        },\n\n        {\n          key: 9,\n          title: \"Drum Kit - Vanilla\",\n          url: \"https://papostolopoulos.github.io/js30/01-drum_kit/index-vanilla.html\",\n          git: \"https://github.com/papostolopoulos/js30/tree/master/01-drum_kit\",\n          code_url: \"\",\n          code: \"\",\n          description: [\n            {bullet: \"Drum Kit. Press the keys and hear the drums playing.\"},\n            {bullet: \"Vanilla JavaScript, CSS, HTML.\"},\n            {bullet: \"Similar project in the Vue section.\"}\n          ],\n          highlights: [\n            {fact: \"Play the drums from your keyboard. (2018-05)\"},\n            {fact: \"Why was it built?\nGood practice for Javascript and CSS\"},\n            {fact: \"Interesting fact: I built the same project in Vue.js too\"},\n          ],\n          language: \"Vanilla\",\n          images: [\n            {image: \"\"},\n            {image: \"\"},\n            {image: \"\"},\n          ],\n          video_url: \"https://youtube.com/embed/gHnogNy7aSk\",\n          id: \"drumKitVanilla\",\n          bgImage: {\n            backgroundImage: \"\",\n            boxShadow: \"\"\n          }\n        },\n\n        {\n          key: 10,\n          title: \"addEventListener.xyz\",\n          url: \"http://addEventListener.xyz\",\n          code_url: \"YOU NEED TO ADD A COPY OF THE CODE. YOU NEED TO ADD IMAGES. YOU NEED TO ADD VIDEO FOOTAGE\",\n          git: \"https://github.com/papostolopoulos/portfolio\",\n          code: \"\",\n          description: [\n            {bullet: \"Single page application\"},\n            {bullet: \"A Personal web page with a list of all the coding projects\"},\n            {bullet: \"Multiple class transitions, CSS transformations and interactive display through a single Vue instance.\"},\n            {bullet: \"Vue, CSS, HTML.\"}\n          ],\n          highlights: [\n            {fact: \"My coding projects list. (2019-01)\"},\n            {fact: \"Why was it built?\nThis is the place where I am showcasing all of my coding work\"},\n            {fact: \"Interesting fact: After building the core of this single page app, updating the content happens very easily.\"},\n          ],\n          language: \"Vue\",\n          images: [\n            {image: \"\"},\n            {image: \"\"},\n            {image: \"\"},\n          ],\n          video_url: \"https://youtube.com/embed/X2GlA4nhJb4\",\n          id: \"addEventListenerVue\",\n          bgImage: {\n            backgroundImage: \"\",\n            boxShadow: \"\"\n          }\n        },\n\n        {\n          key: 11,\n          title: \"JSON files copy-paste viewer\",\n          url: \"https://papostolopoulos.github.io/xPathDataExtraction/copypaste/copypaste4.html\",\n          code_url: \"\",\n          git: \"https://github.com/papostolopoulos/xPathDataExtraction/copypaste\",\n          code: \"\",\n          description: [\n            {bullet: \"This is a project that was done for internal company work. It doesn't work with random files.\"},\n            {bullet: \"The user can paste a JSON file from an internal work tool and view the results as per array element.\"},\n            {bullet: \"He can filter the results as needed.\"},\n            {bullet: \"Vue, HTML, CSS.\"}\n          ],\n          highlights: [\n            {fact: \"JSON file viewer. (2018-12)\"},\n            {fact: \"Why was it built?\nI wanted something that would help me confirm if strings of text were accurately matching with extracted images.\"},\n            {fact: \"Interesting fact: There is a lot of string manipulation in order to clean up a large JSON string and remain with the important components of it.\"},\n          ],\n          language: \"Vue\",\n          images: [\n            {image: \"\"},\n            {image: \"\"},\n            {image: \"\"},\n          ],\n          video_url: \"https://youtube.com/embed/FEzatw3eGjk\",\n          id: \"jsonCopyPasteVue\",\n          bgImage: {\n            backgroundImage: \"\",\n            boxShadow: \"\"\n          }\n        },\n\n        {\n          key: 12,\n          title: \"A Vue tutorial\",\n          url: \"https://papostolopoulos.github.io/tutorials/vue/vue_website_tutorial/000-vue_introduction.html\",\n          code_url: \"\",\n          git: \"https://github.com/papostolopoulos/tutorials/tree/master/vue/vue_website_tutorial\",\n          code: \"\",\n          description: [\n            {bullet: \"Vue tutorial and exercises based on vuejs.org\"},\n            {bullet: \"Vue, CSS, HTML.\"},\n            {bullet: \"Similar project in the Vanilla section.\"}\n          ],\n          highlights: [\n            {fact: \"Several practice exercises and coding examples. (2018-09)\"},\n            {fact: \"Why was it built?\nIt has been useful for me to text my aquired knowledge by keeping my notes and by creating my own exercises\"},\n            {fact: \"Interesting fact: New Vue instances are created for every section of the tutorial\"},\n          ],\n          language: \"Vue\",\n          images: [\n            {image: \"\"},\n            {image: \"\"},\n            {image: \"\"},\n          ],\n          video_url: \"https://youtube.com/embed/4PPgpb3XgfI\",\n          id: \"vueTutorialVue\",\n          bgImage: {\n            backgroundImage: \"\",\n            boxShadow: \"\"\n          }\n        },\n\n        {\n          key: 13,\n          title: \"Drum Kit - Vue\",\n          url: \"https://papostolopoulos.github.io/js30/01-drum_kit/index-vue.html\",\n          code_url: \"\",\n          git: \"https://github.com/papostolopoulos/js30/tree/master/01-drum_kit\",\n          code: \"\",\n          description: [\n            {bullet: \"Drum Kit. Press the keys and hear the drums playing.\"},\n            {bullet: \"Vue, CSS, HTML.\"},\n            {bullet: \"Similar project in the Vanilla section.\"}\n          ],\n          highlights: [\n            {fact: \"Play drums from your keyboard. (2018-07)\"},\n            {fact: \"Why was it built?\nGood practice of vue and css skills\"},\n            {fact: \"Interesting fact: There is a Vanilla js version for the same project\"},\n          ],\n          language: \"Vue\",\n          images: [\n            {image: \"\"},\n            {image: \"\"},\n            {image: \"\"},\n          ],\n          video_url: \"https://youtube.com/embed/HNRwOGbi2sU\",\n          id: \"drumKitVue\",\n          bgImage: {\n            backgroundImage: \"\",\n            boxShadow: \"\"\n          }\n        },\n\n        {\n          key: 14,\n          title: \"Street View Image Modal\",\n          url: \"https://git.io/vppLs\",\n          git: \"https://github.com/papostolopoulos/streetViewModal\",\n          code_url: \"\",\n          code: \"\",\n          description: [\n            {bullet: \"Modal that displays static Google Street View image.\"},\n            {bullet: \"Camera rotation and zooming.\"},\n            {bullet: \"Google maps API call.\"},\n            {bullet: \"Vanilla JavaScript, Vanilla CSS.\"}\n          ],\n          highlights: [\n            {fact: \"Enter coordinates, see Google Street View Image. (2018-06)\"},\n            {fact: \"Why was it built?\nIt was interesting for me to see if I could make something that would be matched with the Open Street Maps project.\"},\n            {fact: \"Interesting fact: This was easier than I thought. the API call was straighforward but if a lot of users start using this, then there is a fee for getting data from Google.\"},\n          ],\n          language: \"Vanilla\",\n          images: [\n            {image: \"\"},\n            {image: \"\"},\n            {image: \"\"},\n          ],\n          video_url: \"https://youtube.com/embed/Ce009inkFAA\",\n          id: \"streetViewModalVanilla\",\n          bgImage: {\n            backgroundImage: \"\",\n            boxShadow: \"\"\n          }\n        },\n\n        {\n          key: 15,\n          title: \"CSS Tutorial - Vue\",\n          url: \"https://papostolopoulos.github.io/css-exploration/index.html\",\n          git: \"https://github.com/papostolopoulos/css-exploration\",\n          code_url: \"\",\n          code: \"\",\n          description: [\n            {bullet: \"Project is still in the works.\"},\n            {bullet: \"CSS tutorial built with Vue components.\"},\n            {bullet: \"Single page application with viewable content based on the user's browsing pattern.\"},\n            {bullet: \"The user can enter HTML and CSS in practice textareas and see the result of his code in real time\"},\n            {bullet: \"Vue, Vanilla CSS.\"}\n          ],\n          highlights: [\n            {fact: \"Learn CSS and practice in a WYSIWYG environment. (2018-10)\"},\n            {fact: \"Why was it built?\nIt helps me understand some CSS principles and ti can create my own examples that other folks can later use\"},\n            {fact: \"Interesting fact: Reusable vue components make the process of building this project very interesting.\"},\n          ],\n          language: \"Vue\",\n          images: [\n            {image: \"\"},\n            {image: \"\"},\n            {image: \"\"},\n          ],\n          video_url: \"https://youtube.com/embed/weG_SlyUaXM\",\n          id: \"cssTutorialVue\",\n          bgImage: {\n            backgroundImage: \"\",\n            boxShadow: \"\"\n          }\n        },\n\n\n        {\n          key: 16,\n          title: \"xPath Generator\",\n          url: \"https://papostolopoulos.github.io/xPathDataExtraction/copypaste/xPathGenerator.html\",\n          git: \"https://github.com/papostolopoulos/copypaste\",\n          code_url: \"\",\n          code: \"\",\n          description: [\n            {bullet: \"Single page application\"},\n            {bullet: \"Allows the user to create and modify xPath rules\"},\n            {bullet: \"The user has the option to update the rules even when they are created.\"},\n            {bullet: \"Different page components allow the user to modify the different rule components through the model updates.\"},\n            {bullet: \"Vue, Vanilla CSS.\"}\n          ],\n          highlights: [\n            {fact: \"Create xPath rules without the worry of spelling errors. (2019-04)\"},\n            {fact: \"I thought it would be fun to build something that others can use.\"},\n            {fact: \"Interesting fact: The vue models make it easy to modify input data as the rule is being built.\"},\n          ],\n          language: \"Vue\",\n          images: [\n            {image: \"\"},\n            {image: \"\"},\n            {image: \"\"},\n          ],\n          video_url: \"https://www.youtube.com/embed/YRh_VZG0TJ4\",\n          id: \"xPathGeneratorVue\",\n          bgImage: {\n            backgroundImage: \"\",\n            boxShadow: \"\"\n          }\n        },\n\n\n    ], //end of projects\n\n\n    }, //End of data\n    methods: {\n\n      // CHANGE THE CLASS OF THE BACKGROUND AND THE SELECTED NAV ELEMENT FROM HEADERS\n      headersClassChange(event) {\n        let attrName = event.target.getAttribute(\"name\");\n        this.classChange(attrName);\n      },\n\n\n      // CHANGE THE CLASS OF THE BACKGROUND AND THE SELECTED NAV ELEMENT\n      classChange(attr){\n        //Change the activePage property. This one will define which images will be\n        //displayed in the carousel\n        // this.activePage = attr;\n\n        //Change the property \"active\" for each object element in the \"sections\" array\n        this.sections.forEach((el) => el.text === attr ? el.active = true : el.active = false);\n\n        //Change the properties in the \"active\" array (within data in the Vue instance)\n        this.active.forEach((el) => {\n          for (let key in el) key === attr ? el[key] = true : el[key] = false;\n        });\n\n        //This is for changing the active class of the <divTransform> tag\n        this.activeModals = attr;\n      },\n\n\n      //CHANGE PAGES FROM ARROWS\n      changePage(event){\n        let targetDiv = window[\"divTransform\"];\n        let arrowId = event.target.id.replace(/(div)?Arrow/i, \"\").toLowerCase();\n        let arr = this.sections;\n\n        for (let i = 0; i < arr.length; i++) {\n          if (arr[i].active) {\n            if (arr[i].id === 3 && arrowId === \"right\" && arr[i].active === true) {\n              this.classChange(arr[0].text);\n              this.addStyle(targetDiv, this.updateStyle[arr[0].text]);\n              break;\n            }\n            else if (arr[i].id === 1 && arrowId === \"left\" && arr[i].active === true) {\n              this.classChange(arr[2].text);\n              this.addStyle(targetDiv, this.updateStyle[arr[2].text]);\n              break;\n            }\n            else {\n              arrowId === \"right\" ?\n              (this.classChange(arr[i + 1].text), this.addStyle(targetDiv, this.updateStyle[arr[i + 1].text])) :\n              (this.classChange(arr[i - 1].text), this.addStyle(targetDiv, this.updateStyle[arr[i - 1].text]));\n              break;\n            }\n          }\n        }\n\n        this.sections.forEach((el, idx, arr)=>{\n\n        });\n      },\n\n\n      // EFFECT THAT ACTIVATES THE TRANSITION WHEN MOUSING OVER\n      classTransitionOver(event) {\n        let attr = event.target.getAttribute(\"name\");\n        let targetDiv = window[\"divTransform\"];\n        this.addStyle(targetDiv, this.updateStyle[attr]);\n      },\n\n\n      // EFFECT THAT DEACTIVATES THE TRANSITION WHEN THE MOUSE LEAVES\n      classTransitionOut(event) {\n        let targetDiv = window[\"divTransform\"];\n        this.addStyle(targetDiv, this.updateStyle.clean);\n      },\n\n\n      // LOOP THAT UPDATES THE INLINE STYLE OF THE ELEMENT THAT IS MOUSED OVER (FOR TRANSITION)\n      addStyle(el, styles) {\n        for (let key in styles){\n          el.style[key] = styles[key];\n        }\n      },\n\n\n      //CREATES THE PATHS FOR ALL THE IMAGES IN THE PROJECTS ARRAY INSIDE \"DATA\"\n      //ADDS THE BACKGROUND IMAGE IN MODALS\n      //ADDS THE BOX SHADOW IN MODALS\n      //CREATES THE PATHS FOR ALL THE VIDEOS IN THE PROJECTS ARRAY INSIDE DATA\n      pathCreate() {\n        let self = this;\n        let projectsArr = this.projects;\n        let codePath = \"\";\n\n        projectsArr.forEach((el) => {\n\n\n          //Add path in projects[i].images.image\n          el.images.forEach((ele, idx) => ele.image = self.imagePath + el.id + (idx+1) + \".jpg\");\n\n\n          // DEACTIVATED IT - TRYING TO SEE IF IT LOOKS BETTER WITHOUT A BG IMAGE IN MODAL\n          //Add path in projects[i].bgImage.backgroundImage\n          // backgroundImage: 'url(\"assets/images/logo-vue.png\")'\n          // el.bgImage.backgroundImage = \"url(\" + el.images[0].image + \")\"\n\n\n          // DEACTIVATED IT. SEE ABOVE COMMENT\n          //Add attribute value for boxShadow for each modal\n          // el.language === \"Vanilla\" ? el.bgImage.boxShadow = \"inset 100vw 100vh rgba(250, 220, 52, .5)\" :\n          // el.language === \"Vue\" ? el.bgImage.boxShadow = \"inset 100vw 100vh rgba(66, 184, 131, .5)\" :\n          // el.language === \"jQuery\" ? el.bgImage.boxShadow = \"inset 100vw 100vh rgba(18, 26, 38, .5)\" :\n          // null;\n\n\n          //DEACTIVATED TO SEE IF THE YOUTUBE LINKS WORK BETTER\n          // Add path in projects[i].video_url\n          // el.video_url = self.videoPath + el.id + \".mp4\";\n\n\n          //Add path in projects[i].code_url textPath: \"assets/txt_files/code-\"\n          el.code_url = self.textPath + el.id + \".json\";\n        });\n      },\n\n      //OPEN THE MODAL\n      modalOpen() {\n        var getModalId = event.target.id.replace(\"aModalOpen\", \"modal\");\n        window[getModalId].className += \" activeModal\";\n\n        //This is for the image and the text in the modal\n        this.modalDisplay = \"flex\";\n        this.changeCounterValue(); //This is for toggling through the images\n      },\n\n      //CLOSE THE MODAL FROM THE X ICON\n      modalClose(event) {\n        var getModalId = event.composedPath()[1].id.replace(\"divCloseModal\", \"modal\");\n        window[getModalId].className = window[getModalId].className.replace(/ activeModal/, \"\");\n\n        this.modalDisplay = \"none\";\n        this.counter = 0;\n      },\n\n      imageModalOpen(event){\n        //Get the id from the \"imageScreenshot\". Change the name to match that of the modal\n        let divImageId = event.target.id.replace(\"imageScreenshot\", \"divImageModal\");\n        \n        // window[divImageId].className += \" activeImageModal\"\n        //Change the display from \"none\" to \"flex\"\n        window[divImageId].style.display=\"flex\";\n      },\n\n      imageModalClose(event){\n        // event.composedPath()[2].className = event.composedPath()[2].className.replace(\" activeImageModal\", \"\");\n        event.composedPath()[2].style.display = \"none\";\n      },\n\n      //EXPAND THE CODE MODAL TO FULL SCREEN\n      expandCodeModal(event){\n        if(event.composedPath()[3].className.includes(\"divModalLeftExpand\")) return;\n\n        event.composedPath()[3].className += \" divModalLeftExpand\"\n        // this.addStyle(event.composedPath()[3], this.updateStyle.expandCodeModal);\n        event.composedPath()[3].children[1].className += \" divModalCloseVisible\";\n      },\n\n      //MINIMIZE THE CODE MODAL TO THE LEFT SIDE OF THE SCREEN BY CLICKING THE X BUTTON\n      codeModalClose(event){\n        event.composedPath()[2].className = event.composedPath()[2].className.replace(\" divModalLeftExpand\", \"\");\n        event.composedPath()[1].className = event.composedPath()[1].className.replace(/ divModalCloseVisible/, \"\");\n        // this.addStyle(event.composedPath()[2], this.updateStyle.codeModalClose);\n        // event.composedPath()[1].style.display = \"none\";\n      },\n\n      //MINIMIZE THE CODE MODAL BY CLICKING IN THE BODY OF THE SCREEN\n      divCodeModalClose(event){\n        if (event.target.localName === \"pre\" &&\n            event.composedPath()[2].className === \"divModalLeft\" &&\n            event.composedPath()[2].style.position === \"fixed\") {\n              event.composedPath()[2].children[1].style.display = \"none\";\n              this.addStyle(event.composedPath()[2], this.updateStyle.codeModalClose);\n            }\n      },\n\n\n      //CHANGE THE VALUE OF THE COUNTER SO THAT THE IMAGES CHANGE IN THE MODAL DISPLAY\n      changeCounterValue() {\n        let self = this;\n        let intervalId = setInterval(function(){\n          if (self.modalDisplay !== \"flex\") clearInterval(intervalId);\n          self.counter < 2 ? self.counter++ : self.counter = 0;\n          \n        }, 5000);\n      }\n\n    }, //End of methods\n    beforeMount(){\n      this.pathCreate();\n    },\n    computed: {\n    } //End of computed properties\n  }\n);",
          description: [
            {bullet: "Single page application"},
            {bullet: "A Personal web page with a list of all the coding projects"},
            {bullet: "Multiple class transitions, CSS transformations and interactive display through a single Vue instance."},
            {bullet: "Vue, CSS, HTML."}
          ],
          highlights: [
            {fact: "My coding projects list. (2019-01)"},
            {fact: "Why was it built?\nThis is the place where I am showcasing all of my coding work"},
            {fact: "Interesting fact: After building the core of this single page app, updating the content happens very easily."},
          ],
          language: "Vue",
          images: [
            {image: ""},
            {image: ""},
            {image: ""},
          ],
          video_url: "https://youtube.com/embed/X2GlA4nhJb4",
          id: "addEventListenerVue",
          bgImage: {
            backgroundImage: "",
            boxShadow: ""
          }
        },

        {
          key: 11,
          title: "JSON files copy-paste viewer",
          url: "https://papostolopoulos.github.io/xPathDataExtraction/copypaste/copypaste4.html",
          code_url: "",
          git: "https://github.com/papostolopoulos/xPathDataExtraction/copypaste",
          code: "<!DOCTYPE html>\n<html lang=\'en\' dir=\'ltr\'>\n  <head>\n    <meta charset=\'utf-8\'>\n    <link rel=\'stylesheet\' href=\'https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\' integrity=\'sha384-WskhaSGFgHYWDcbwN70/dfYBj47jz9qbsMId/iRN3ewGhXQFZCSftd1LZCfmhktB\' crossorigin=\'anonymous\'>\n    <script src=\'https://cdn.jsdelivr.net/npm/vue/dist/vue.js\'></script>\n    <title>Copy Paste!!!</title>\n\n    <style media=\'screen\'>\n      body{\n\n      }\n\n      #container{\n        display: grid;\n        grid-template-columns: 100vw;\n        grid-template-rows: 95vh 5vh;\n        grid-template-areas:\n        \'mainArea\'\n        \'footerArea\';\n      }\n\n      #mainArea{\n        grid-area: mainArea;\n        padding: 20px;\n      }\n\n      #footerArea{\n        grid-area: footerArea;\n        background: rgb(0,0,0);\n        line-height: 5vh;\n        text-align: center;\n        font-size: 1.4rem;\n        border-top: 3px solid black;\n        color: white;\n      }\n\n      #footerArea a{\n        color: white;\n      }\n\n      #sectionCopyPasteArea{\n        display: grid;\n        grid-template-columns: 3fr 5fr 2fr;\n        grid-template-rows: 1fr 1fr;\n        grid-template-areas:\n        \'divInstructionsArea divTextArea divFilterArea\'\n        \'divRadioButtonsArea divTextArea divFilterArea\';\n        grid-column-gap: 10px;\n        margin-bottom: 20px;\n      }\n\n      #divInstructionsArea{\n        grid-area: divInstructionsArea;\n      }\n\n      #divRadioButtonsArea{\n        grid-area: divRadioButtonsArea;\n      }\n\n      #divTextArea{\n        grid-area: divTextArea;\n      }\n\n      #divFilterArea{\n        grid-Area: divFilterArea;\n      }\n\n      article{\n        border-top: 2px solid black;\n      }\n\n      div[class*=\'media\']{\n        margin: 20px;\n      }\n\n      img {\n        max-width: 800px;\n      }\n    </style>\n\n  </head>\n\n\n\n\n\n\n\n  <body>\n    <div id=\'container\'>\n      <main id=\'mainArea\'>\n        <section id=\'sectionCopyPasteArea\'>\n          <div id=\'divInstructionsArea\'>\n            <h3>Instructions</h3>\n            <ol>\n              <li>Go to \'preview\'.</li>\n              <li>In the view option, select \'raw\'.</li>\n              <li>Copy the JSON formated text.</li>\n              <li>Paste it at the textarea.</li>\n              <li>Use the filters to filter through the results if needed.</li>\n            </ol>\n          </div>\n\n\n\n\n          <!-- <div id=\'divRadioButtonsArea\'>\n            <h3>Which task?</h3>\n            <form id=\'formScarlettTasks\' name=\'formScarlettTasks\' @click=\'changeTypeOfPaste($event)\'>\n              <input id=\'inputGenericCoupons\' type=\'radio\' name=\'inputCouponsSelect\' value=\'genericCoupons\'>\n              <label for=\'inputGenericCoupons\'>Manual Coupons</label> |\n\n              <input id=\'inputLinkbaseCoupons\' type=\'radio\' name=\'inputCouponsSelect\' value=\'linkbaseCoupons\'>\n              <label for=\'inputLinkbaseCoupons\'>Linkbase coupons</label> <br>\n\n              <input id=\'inputAirplaneTickets\' type=\'radio\' name=\'inputCouponsSelect\' value=\'airplaneTickets\'>\n              <label for=\'inputAirplaneTickets\'>Tickets</label> |\n\n              <input id=\'inputInvoices\' type=\'radio\' name=\'inputCouponsSelect\' value=\'invoices\'>\n              <label for=\'inputInvoices\'>Invoices</label>\n            </form>\n          </div> -->\n\n\n\n\n          <div id=\'divTextArea\'>\n            <h3>Paste the JSON file</h3>\n            <textarea\n            name=\'textareaCoupons\'\n            id=\'textareaCoupons\'\n            rows=\'10\' cols=\'80\'\n            placeholder=\'Paste JSON text here\'\n            v-model=\'startStr\'\n            v-once\n            ></textarea>\n          </div>\n\n\n\n\n          <div id=\'divFilterArea\'>\n            <h3>Filters</h3>\n            <h6>RegEx source:</h6>\n            <input type=\'text\' name=\'\' value=\'\'\n            v-model=\'regExSource\'\n            placeholder=\'Enter RegEx string\'\n            >\n\n            <h6>RegEx flags:</h6>\n            <template class=\'\'>\n              <label for=\'inputRegExg\' title=\'global: Don\'t return after first match\'>\n                g: <input id=\'inputRegExg\' type=\'checkbox\' value=\'g\' v-model=\'g\'>\n              </label>\n              <label for=\'inputRegExm\' title=\'multi line: ^ and $ match start / end of line\'>\n                m: <input id=\'inputRegExm\' type=\'checkbox\' value=\'m\' v-model=\'m\'>\n              </label>\n              <label for=\'inputRegExi\' title=\'insensitive: Case insensitive match\'>\n                i: <input id=\'inputRegExi\' type=\'checkbox\' value=\'i\' v-model=\'i\'>\n              </label>\n              <label for=\'inputRegExx\' title=\'extended: ignore whitespace\'>\n                x: <input id=\'inputRegExx\' type=\'checkbox\' value=\'x\' v-model=\'x\'>\n              </label>\n              <label for=\'inputRegExX\' title=\'extra: Disallow meaningless escapes\'>\n                X: <input id=\'inputRegExX\' type=\'checkbox\' value=\'X\' v-model=\'X\'>\n              </label>\n              <label for=\'inputRegExs\' title=\'single line: Dot matches newline\'>\n                s: <input id=\'inputRegExs\' type=\'checkbox\' value=\'s\' v-model=\'s\'>\n              </label>\n              <label for=\'inputRegExu\' title=\'unicode: Match with full unicode\'>\n                u: <input id=\'inputRegExu\' type=\'checkbox\' value=\'u\' v-model=\'u\'>\n              </label>\n              <label for=\'inputRegExU\' title=\'ungreedy: Make quantifiers lazy\'>\n                U: <input id=\'inputRegExU\' type=\'checkbox\' value=\'U\' v-model=\'U\'>\n              </label>\n              <label for=\'inputRegExA\' title=\'Anchored: Anchor to start of pattern\'>\n                A: <input id=\'inputRegExA\' type=\'checkbox\' value=\'A\' v-model=\'A\'>\n              </label>\n              <label for=\'inputRegExj\' title=\'jchanged: Allow duplicate subpattern\'>\n                j: <input id=\'inputRegExj\' type=\'checkbox\' value=\'j\' v-model=\'j\'>\n              </label>\n              <label for=\'inputRegExD\' title=\'Dollar end only: $ matches only end of pattern\'>\n                D: <input id=\'inputRegExD\' type=\'checkbox\' value=\'D\' v-model=\'D\'>\n              </label>\n            </template>\n            <hr>\n\n            <h6>Number of characters in description:</h6>\n            Min: <input type=\'text\' name=\'\' value=\'\'\n            maxlength=\'4\' size=\'4\'\n            v-model=\'minCharacters\' placeholder=\'0\'>\n            Max: <input type=\'text\' name=\'\' value=\'\'\n            maxlength=\'4\' size=\'4\'\n            v-model=\'maxCharacters\' placeholder=\'0\'>\n            <hr>\n\n\n          </div>\n        </section>\n\n\n        <section id=\'sectionDebugArea\' style=\'display: none;\'>\n          <h1>startStr</h1>\n          <p style=\'white-space: pre\'>{{startStr}}</p>\n          <h1>magic</h1>\n          <p style=\'white-space: pre\'>{{magic}}</p>\n        </section>\n\n\n\n        <section id=\'sectionExtractionArea\'>\n          <article\n          class=\'media\'\n          v-for=\'(item, idx) in mainArray\'\n          v-show=\'(regExSource === \'\' || item.description.match(new RegExp(regExSource, regExFlags))) &&\n          (minCharacters === \'\' || item.description.length >= minCharacters) &&\n          (maxCharacters === \'\' || item.description.length <= maxCharacters)\'\n          >\n\n            <div class=\'media-left media-middle\'>\n              <a :href=\'item.url\' target=\'_blank\'>\n                <img class=\'media-object\' :src=\'item.imageUrl\' alt=\'No image pulled for this item\'>\n              </a>\n            </div>\n\n            <div class=\'media-body\'>\n              <h2>{{item.description}}</h2>\n              <ul>\n                <li>Currency and price: {{item.priceCurrency}} {{item.offerPrice}}</li>\n                <li>Valid through: {{item.validThrough}}</li>\n                <li>Original price: {{item.originalPrice}}</li>\n                <li>Valid from: {{item.validFrom}}</li>\n                <li>Organization: {{item.organization}}</li>\n                <li>url: <a :href=\'item.url\' :title=\'item.url\'>Link - Think before you click!</a></li>\n              </ul>\n            </div>\n\n          </article>\n\n        </section>\n\n\n      </main>\n\n      <footer id=\'footerArea\'>\n        Copy Paste JSON |\n        <a href=\'http://addeventlistener.xyz\' target=\'_blank\'>@papostolopoulos</a> |\n        2018\n      </footer>\n    </div> <!-- End of main and footer -->\n\n  </body>\n\n\n\n\n  <script>\n  var app = new Vue({\n    el: \'#container\',\n    data: {\n      startStr: \'\',\n      typeOfPaste: \'\',\n      regExSource: \'\',\n      minCharacters: \'\',\n      maxCharacters: \'\',\n      g: \'\',\n      m: \'\',\n      i: \'\',\n      x: \'\',\n      X: \'\',\n      s: \'\',\n      u: \'\',\n      U: \'\',\n      A: \'\',\n      j: \'\',\n      D: \'\',\n      mainArray: []\n  }, //End of data\n  methods:{\n    changeTypeOfPaste: function(event) {  //this is for the radio buttons\n      this.typeOfPaste = event.target.value;\n    },\n    matchString: function(event) {\n      console.log(this.regExSource);\n      this.regExSource = event.target.value;\n      console.log(this.regExSource);\n    }\n  }, //End of methods\n  computed: {\n    regExFlags: function() {\n      let flags = \'gmixXsuUAjD\';\n      let flagStr = \'\';\n      for (var i = 0; i < flags.length; i++) {\n        if(this[flags[i]] === true) flagStr += flags[i]\n      }\n      return flagStr;\n    },\n    magic: function() {\n\n      // 1. Clean up the mainArray where all the object elements will be pasted\n      this.mainArray = [];\n\n\n\n      //2. remove unecessary symbols and text\n      var replacements = [\n        {oldStr:/[\@\\'\\'\[\]\{\}]/g, newStr:\'\'},\n        {oldStr:/graph:\s+/, newStr:\'\'},\n        {oldStr:/id:\s_:[\w-]+,\s+/g, newStr:\'\'},\n        {oldStr:/type:\s[A-z}]+,\s+/g, newStr:\'\'},\n        {oldStr:/\s+,/g, newStr:\',\'},\n        // {oldStr:/image:\s+url:\s+value/g, newStr:\'~~~imageUrl\'},\n        {oldStr:/image:\s+url(:\s+value)?/g, newStr:\'~~~imageUrl\'}, //This is for linkbase and generic. The above line only generic. You can remove it if both are working\n        {oldStr:/url:\s+(value)?/g, newStr:\'~~~url\'}, //both generic and linkbased (value parameter is included in generic)\n        {oldStr:/broker:\s+name/g, newStr:\'SPLIT~~~organization\'},\n        {oldStr:/description/g, newStr:\'~~~description\'},\n        {oldStr:/offerPrice:\s+value/g, newStr:\'~~~offerPrice\'},\n        {oldStr:/originalPrice:\s+value/g, newStr:\'~~~originalPrice\'},\n        {oldStr:/priceCurrency/g, newStr:\'~~~priceCurrency\'},\n        {oldStr:/validFrom/g, newStr:\'~~~validFrom\'},\n        {oldStr:/validThrough/g, newStr:\'~~~validThrough\'},\n        {oldStr:/,\s+SPLIT~~~/g, newStr:\'SPLIT~~~\'},\n        {oldStr:/,\s+~~~/g, newStr:\'~~~\'},\n        {oldStr:/http:\/\/schema\.org\/([A-z]+)?,\s/g, newStr:\'\'},\n        {oldStr:/id:\s+container:\sset,?\s+/g, newStr:\'\'},\n        {oldStr:/\s+vocab:/g, newStr:\'\'},\n        {oldStr:/\s+graph:/g, newStr:\'\'},\n        {oldStr:/,\s+context:\s+identifier:\s+contactPoint:\s+category:\s+sameAs:/g, newStr:\'\'},\n      ];\n\n\n      for(var el of replacements){\n        this.startStr = this.startStr.replace(el.oldStr, el.newStr);\n      }\n\n      this.startStr = this.startStr.trim();\n\n\n      // 4. Create an array from the existing string. Remove first element\n      this.startStr = this.startStr.slice(0, this.startStr.length-1).split(\'SPLIT\');\n      if(this.startStr[0] === \'\') this.startStr.shift();\n\n\n\n\n      //5. Evaluate the text of each element. Slice the text wherever needed and\n      // create an object that will be pushed to the mainArray.\n      var self = this;\n      this.startStr.forEach(function(el) {\n\n\n        //Create new object with all the expected keys for rendering in the page.\n        var newObj = {\n          organization: \'\',\n          description: \'\',\n          imageUrl: \'\',\n          url: \'\',\n          offerPrice: \'\',\n          originalPrice: \'\',\n          priceCurrency: \'\',\n          validFrom: \'\',\n          validThrough: \'\'\n        }\n\n        //Find the match of the key inside the element and slice\n        for(var key in newObj){\n          if (el.indexOf(key) !== -1) {\n            newObj[key] = el.slice(el.indexOf(key));\n            newObj[key] = newObj[key]\n            .replace(/~~~.*/,\'\')\n            .replace([key]+\': \', \'\')\n            .trim();\n            if (newObj[key][newObj[key].length - 1] === \',\') newObj[key].slice(0, newObj[key].length - 2);\n          }\n        }\n\n        self.mainArray.push(newObj);\n\n      });\n\n      return this.mainArray;\n\n\n    } //End of magic function\n  } //end of computed properties\n});\n\n  </script>\n\n</html>\n",
          description: [
            {bullet: "This is a project that was done for internal company work. It doesn't work with random files."},
            {bullet: "The user can paste a JSON file from an internal work tool and view the results as per array element."},
            {bullet: "He can filter the results as needed."},
            {bullet: "Vue, HTML, CSS."}
          ],
          highlights: [
            {fact: "JSON file viewer. (2018-12)"},
            {fact: "Why was it built?\nI wanted something that would help me confirm if strings of text were accurately matching with extracted images."},
            {fact: "Interesting fact: There is a lot of string manipulation in order to clean up a large JSON string and remain with the important components of it."},
          ],
          language: "Vue",
          images: [
            {image: ""},
            {image: ""},
            {image: ""},
          ],
          video_url: "https://youtube.com/embed/FEzatw3eGjk",
          id: "jsonCopyPasteVue",
          bgImage: {
            backgroundImage: "",
            boxShadow: ""
          }
        },

        {
          key: 12,
          title: "A Vue tutorial",
          url: "https://papostolopoulos.github.io/tutorials/vue/vue_website_tutorial/000-vue_introduction.html",
          code_url: "",
          git: "https://github.com/papostolopoulos/tutorials/tree/master/vue/vue_website_tutorial",
          code: "<!DOCTYPE html>\n<html lang=\'en\'>\n<head>\n  <meta charset=\'UTF-8\'>\n  <meta name=\'viewport\' content=\'width=device-width, initial-scale=1.0\'>\n  <meta http-equiv=\'X-UA-Compatible\' content=\'ie=edge\'>\n  <script type=\'text/javascript\' src=\'./vue.js\'></script>\n  <link rel=\'stylesheet\' href=\'https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\' integrity=\'sha384-WskhaSGFgHYWDcbwN70/dfYBj47jz9qbsMId/iRN3ewGhXQFZCSftd1LZCfmhktB\' crossorigin=\'anonymous\'>\n  <link rel=\'stylesheet\' href=\'styles.css\'>\n\n  <title>007 - Event Handling - Vue website tutorial</title>\n</head>\n<body>\n\n  <a href=\'https://vuejs.org/v2/guide/events.html\'><h3>Source</h3></a>\n\n  <h1>7 - Event Handling</h1>\n\n\n  <div id=\'eventHandling1\'>\n    <h2>Listening to events</h2>\n    <p>\n      The <code>v-on</code> directive can be used to listen to DOM events. JavaScript\n      can be implemented with these events.\n    </p>\n\n    <div class=\'jumbotron\'>\n      <h4>Example</h4>\n      <p>\n        In the following example, we can do basic arithmetic calculations based\n        on the entry in the <code>input</code> tag and the button we click on.\n      </p>\n      <input type=\'text\' name=\'\' value=\'\' v-model=\'counter\'>\n      <button type=\'button\' name=\'button\' @click=\'result += Number(counter)\'>Add</button>\n      <button type=\'button\' name=\'button\' @click=\'result -= Number(counter)\'>Subtract</button>\n      <button type=\'button\' name=\'button\' @click=\'result *= Number(counter)\'>Multiply</button>\n      <button type=\'button\' name=\'button\' @click=\'result /= Number(counter)\'>Divide</button>\n      <button type=\'button\' name=\'button\' @click=\'result = 0\'>Make zero</button>\n      <p>The result is: {{result}}</p>\n      <hr>\n      <h6>The code for the html is:</h6>\n      <code>\n          &lt;input type=\'text\' name=\'\' value=\'\' v-model=\'counter\'&gt;\n          &lt;button type=\'button\' name=\'button\' @click=\'result += Number(counter)\'&gt;Add&lt;/button&gt;\n          &lt;button type=\'button\' name=\'button\' @click=\'result -= Number(counter)\'&gt;Subtract&lt;/button&gt;\n          &lt;button type=\'button\' name=\'button\' @click=\'result *= Number(counter)\'&gt;Multiply&lt;/button&gt;\n          &lt;button type=\'button\' name=\'button\' @click=\'result /= Number(counter)\'&gt;Divide&lt;/button&gt;\n          &lt;button type=\'button\' name=\'button\' @click=\'result = 0\'&gt;Make zero&lt;/button&gt;\n      </code>\n      <h6>The code for the script is</h6>\n      <code>\n          el: \'#eventHandling1\',\n          data: {\n            result: 0,\n            counter: 0\n          }\n      </code>\n    </div>\n  </div>\n\n  <script>\n    var eventHandling1 = new Vue({\n      el: \'#eventHandling1\',\n      data: {\n        result: 0,\n        counter: 0\n      }\n    });\n  </script>\n\n\n\n\n\n\n\n  <div id=\'eventHandling2\'>\n    <h2>Methods in Event Handlers</h2>\n      <p>\n        Even though the event handlers are effective in managing small snippets\n        of code and return some results on the page, they might not be so effective\n        in managing the code within the html tag since the code might be too long\n        in size. Event handlers can easily get methods attached to them and invoke\n        results that are based on lengthier sizes of code.\n      </p>\n      <div class=\'jumbotron\'>\n        <h4>Example</h4>\n        <p>\n          In the following example, the <code>greet</code> method is attached on\n          the event handler. As you can see below, the code written for this\n          page behavior was big so it was better that it was added inside a method.\n        </p>\n        <button type=\'button\' name=\'button\' @click=\'greet($event)\'>When was I last clicked?</button>\n        <hr>\n        <h6>html code</h6>\n        <code>\n          &lt;button type=\'button\' name=\'button\' @click=\'greet($event)\'&gt;When was I last clicked?&lt;/button&gt;\n        </code>\n        <h6>Vue code</h6>\n        <code>\n  var eventHandling2 = new Vue({\n    el: \'#eventHandling2\',\n    data: {\n      timeStamp: 0\n    },\n    methods: {\n      greet(event){\n        var timeStamp = 0;\n        alert(`${messages(this)}\n          Just now it was clicked at ${Math.round(event.timeStamp / 1000)} seconds.`);\n          this.timeStamp = Math.round(event.timeStamp / 1000);\n\n          function messages(self) {\n            return self.timeStamp === 0?\n            `This button was not clicked before.`:\n            `This button was clicked before at ${self.timeStamp} seconds.`\n          }\n      }\n    }\n  });\n          </code>\n      </div>\n  </div>\n\n  <script>\n    var eventHandling2 = new Vue({\n      el: \'#eventHandling2\',\n      data: {\n        timeStamp: 0\n      },\n      methods: {\n        greet(event){\n          var timeStamp = 0;\n          alert(`${messages(this)}\n            Just now it was clicked at ${Math.round(event.timeStamp / 1000)} seconds.`);\n            this.timeStamp = Math.round(event.timeStamp / 1000);\n\n            function messages(self) {\n              return self.timeStamp === 0?\n              `This button was not clicked before.`:\n              `This button was clicked before at ${self.timeStamp} seconds.`\n            }\n        }\n      }\n    });\n  </script>\n\n\n\n\n\n\n\n\n\n\n  <div id=\'eventHandling3\'>\n    <h2>Methods in Inline handlers</h2>\n    <p>\n      The methods that are binded in the event handlers can also have parameters\n      passed to them as inline arguments. The arguments can either be built in\n      variables (ex: <code>$event</code>) or arguments that are connected to the\n      user\'s interaction to the page.\n    </p>\n    <div class=\'jumbotron\'>\n      <h4>Example</h4>\n      <p>\n        Write something, anything and I will alert it for you.\n      </p>\n      <input type=\'text\' name=\'\' value=\'\'>\n      <button type=\'button\' name=\'button\' @click=\'alertMe($event)\'>Do it!</button>\n\n      <hr>\n      <h6>html code</h6>\n      <code>\n        &lt;button type=\'button\' name=\'button\' @click=\'alertMe($event)\'&gt;Do it!&lt;/button&gt;\n      </code>\n      <h6>Vue code</h6>\n      <code>\n        var eventHandling3 = new Vue({\n          el: \'#eventHandling3\',\n          data: {\n            message: \'\'\n          },\n          methods: {\n            alertMe(event){\n              alert(event.target.previousElementSibling.value === \'\' ?\n                \'Enter some text will you?\' :\n                event.target.previousElementSibling.value);\n            }\n          }\n        });\n      </code>\n    </div>\n\n  </div>\n\n  <script>\n    var eventHandling3 = new Vue({\n      el: \'#eventHandling3\',\n      data: {\n        message: \'\'\n      },\n      methods: {\n        alertMe(event){\n          alert(event.target.previousElementSibling.value === \'\' ?\n            \'Enter some text will you?\' :\n            event.target.previousElementSibling.value);\n        }\n      }\n    });\n  </script>\n\n\n\n\n\n\n\n\n\n\n\n  <style media=\'screen\'>\n    .outer {\n      border: 2px solid black;\n      padding: 20px;\n      background-color: white;\n      width: 200px;\n      height: 200px;\n      margin-bottom: 10px;\n    }\n\n    .outer-clicked{\n      background-color: gray;\n    }\n\n    .middle {\n      padding: 20px;\n      background-color: red;\n      width: auto;\n      height: 100%;\n    }\n\n    .middle-clicked{\n      background-color: pink;\n    }\n\n    .inner{\n      padding: 20px;\n      background-color: green;\n      width: auto;\n      height: 100%;\n    }\n\n    .inner-clicked{\n      background-color: lime;\n    }\n\n    .code, .square{\n      display: inline-block;\n      padding: 0 10px;\n    }\n\n\n  </style>\n\n  <div id=\'eventHandling4\'>\n    <h2>Event modifiers</h2>\n    <p>\n      Vue has modifiers that replicate JavaScript\'s built in modifiers and can be\n      attached on the event modifier, instead of running the JavaScript Modifiers\n      inside the run function. For example, instead of invoking\n      <code>event.preventDefault()</code>, we can use\n      <code>v-on:click.<b>prevent</b></code>.\n    </p>\n    <p>\n      All the modifiers are postfixes denoted by a dot.\n      <ul>\n        <li>\n          <code><b>.stop</b></code> - Similar to: <code>Event.stopPropagation()</code> <br>\n          No propagation of the current event allowed in the capturing or bubbling phases\n        </li>\n        <li>\n          <code><b>.prevent</b></code>  - Similar to: <code>Event.preventDefault()</code> <br>\n          Prevents the default action should not be handled as it would normaly\n          be. For example, a form will not refresh a page on submit or a checkbox\n          will not be selected.\n        </li>\n        <li>\n          <code><b>.capture</b> </code> - Similar to:\n          <code>target.(add or remove)EventListener(type, listener, {capture: true});</code> <br>\n          Bubbling phase disabled. Only capture phase enabled.\n        </li>\n        <li>\n          <code><b>.self</b></code> - Similar to: <br>\n          Triggers handle if the <code>event.target</code> is the element itself.\n          So if I click on a different handle, the event will not propagate at the\n          specific element (but it will bubble up to other elements that have event\n          listeners).\n        </li>\n        <li>\n          <code> <b>.once</b> </code> - Similar to:\n          <code>target.(add or remove)EventListener(type, listener, {once: true});</code> <br>\n          Triggers the event only once and then it is done. After the first trigger,\n          the event listener will not do anything else. Alternatively one could use\n          the <code>removeEventListener</code> but that results into having to remember\n          the name of the element in order to call the method.\n        </li>\n        <li>\n          <code><b>.passive</b> </code> - Similar to:\n          <code>target.(add or remove)EventListener(type, listener, {passive: true});</code> <br>\n          Does not allow <code>preventDefault</code> to kick in when expensive\n          JavaScript is running, resulting into the prevention of expected Browser\n          behavior (ex: scrolling would be prevented if the page does not fully load)\n        </li>\n      </ul>\n      Since the order of executing the modifiers is happening in the way they are\n      written, the order matters. For example, <code>v-on:click.prevent.self</code>\n      will prevent the default action and <code>.self</code> will never execute.\n      On the other hand, <code>v-on:click.self.prevent</code> will allow <code>self</code>\n      to execute first and then <code>prevent</code> will execute.\n    </p>\n\n    <div class=\'jumbotron\'>\n      <h4>Example</h4>\n      <h5>Classic bubble</h5>\n      <p>\n        The following set of squares imitates the behavior of all the events\n        bubbling out. This is set with a timeout so that it can present how the\n        bubbling behavior would execute, but in a slower motion.\n      </p>\n      <div class=\'square\'>\n        <div class=\'outer\' id=\'outerBubble\' @click=\'bubble($event)\'>\n          <div class=\'middle\' id=\'middleBubble\' @click=\'bubble($event)\'>\n            <div class=\'inner\' id=\'innerBubble\' @click=\'bubble($event)\'>\n            </div>\n          </div>\n        </div>\n      </div>\n\n        <div class=\'code\'>\n          <hr>\n          <h6>html code</h6>\n          <code>\n&lt;div class=\'outer\' id=\'outerBubble\' @click=\'bubble($event)\'&gt;\n  &lt;div class=\'middle\' id=\'middleBubble\' @click=\'bubble($event)\'&gt;\n    &lt;div class=\'inner\' id=\'innerBubble\' @click=\'bubble($event)\'&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n           </code>\n          <h6>Vue code</h6>\n          <code>\nbubble(event){\n  for (let i = 1; i &lt; 4; i++) {\n    setTimeout(function() {\n      if (!event.composedPath()[i-1].className.includes(\'-clicked\')) {\n        event.composedPath()[i-1].className += \' \' + event.composedPath()[i-1].className +\'-clicked\';\n      }\n    }, i*1000);\n  }\n}  </code>\n        </div>\n\n\n        <h5>Capture</h5>\n        <p>\n          The following set of squares imitates the behavior of all the events\n          happening with <code>capture: true</code>. This is set with a timeout\n          so that it can present how the behavior would execute,\n          but in a slower motion.\n        </p>\n        <p>\n          For this code, even though entered, the <code>.capture</code> is\n          not working because the <code>setTimeout</code> manages the capture phase\n          instead. The <code>setTimeout</code> was entered to better display\n          what the <code>.capture</code> modifier does.\n        </p>\n        <div class=\'square\'>\n          <div ref=\'outer\' class=\'outer\' id=\'outerBubbleCapture\' @click.capture=\'capture($event)\'>\n            <div ref=\'middle\' class=\'middle\' id=\'middleBubbleCapture\' @click.capture=\'capture($event)\'>\n              <div ref=\'inner\' class=\'inner\' id=\'innerBubbleCapture\' @click.capture=\'capture($event)\'>\n              </div>\n            </div>\n          </div>\n        </div>\n\n          <div class=\'code\'>\n            <hr>\n            <h6>html code</h6>\n            <code>\n&lt;div ref=\'outer\' class=\'outer\' id=\'outerBubbleCapture\' @click.capture=\'capture($event)\'&gt;\n  &lt;div ref=\'middle\' class=\'middle\' id=\'middleBubbleCapture\' @click.capture=\'capture($event)\'&gt;\n    &lt;div ref=\'inner\' class=\'inner\' id=\'innerBubbleCapture\' @click.capture=\'capture($event)\'&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;  </code>\n            <h6>Vue code</h6>\n            <code>\ncapture(event){\n  let two = 0, one = 0, zero = 0;\n  for (let i = 2; i &gt;= 0; i--) {\n    two === 0 ? two = i : one === 0 ? one = i + 1 : zero = i + 2;\n    setTimeout(function() {\n      if (!event.composedPath()[i].className.includes(\'-clicked\')) {\n        event.composedPath()[i].className += \' \' + event.composedPath()[i].className +\'-clicked\';\n      }\n    }, (two + one + zero)*500);\n  }\n}\n             </code>\n          </div>\n\n          <h5>self</h5>\n          <p>\n            When you click on the inner box, you will see that there is an <code>alert</code>\n            that is triggered only twice. Once for the inner box and once for the\n            outer box. That is because the middle box has a <code>.self</code>\n            modifier that prevents it from firing at the click event of other nodes.\n            Unless the middle box is clicked, the <code>alert</code> will not trigger.\n          </p>\n          <div class=\'square\'>\n            <div class=\'outer\' id=\'outerSelf\' @click=\'self($event)\'>\n              <div class=\'middle\' id=\'middleSelf\' @click.self=\'self($event)\'>\n                <div class=\'inner\' id=\'innerSelf\' @click=\'self($event)\'>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\'code\'>\n            <h6>html code</h6>\n            <code>\n              &lt;div class=\'outer\' id=\'outerBubble\' @click=\'self($event)\'&gt;\n  &lt;div class=\'middle\' id=\'middleBubble\' @click.self=\'self($event)\'&gt;\n    &lt;div class=\'inner\' id=\'innerBubble\' @click=\'self($event)\'&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n            </code>\n            <h6>Vue code</h6>\n            <code>\nself(event){\n  this.selfClick += 1;\n  if(this.selfClick === 3) this.selfClick = 1;\n  alert(\'I clicked the box. This is the alert No \' + this.selfClick);\n  if (!event.target.className.includes(\'-clicked\')) {\n    event.target.className += \' \' + event.target.className +\'-clicked\';\n  }\n}           </code>\n          </div>\n\n\n    </div>\n  </div>\n\n  <script>\n  var eventHandling4 = new Vue({\n    el: \'#eventHandling4\',\n    data: {\n      selfClick: 0\n    }, //End of data\n    methods: {\n      bubble(event){\n        for (let i = 1; i < 4; i++) {\n          setTimeout(function() {\n            if (!event.composedPath()[i-1].className.includes(\'-clicked\')) {\n              event.composedPath()[i-1].className += \' \' + event.composedPath()[i-1].className +\'-clicked\';\n            }\n          }, i*1000);\n        }\n      },\n      capture(event){\n        let two = 0, one = 0, zero = 0;\n\n        for (let i = 2; i >= 0; i--) {\n          two === 0 ? two = i : one === 0 ? one = i + 1 : zero = i + 2;\n          setTimeout(function() {\n            if (!event.composedPath()[i].className.includes(\'-clicked\')) {\n              event.composedPath()[i].className += \' \' + event.composedPath()[i].className +\'-clicked\';\n            }\n          }, (two + one + zero)*500);\n        }\n\n      },\n      self(event){\n        this.selfClick += 1;\n        if(this.selfClick === 3) this.selfClick = 1;\n        alert(\'I clicked the box. This is the alert No \' + this.selfClick);\n        if (!event.target.className.includes(\'-clicked\')) {\n          event.target.className += \' \' + event.target.className +\'-clicked\';\n        }\n      }\n    } //End of methods\n  });\n\n  </script>\n\n\n\n\n\n  <div id=\'eventHandling5\'>\n    <h2>Key modifiers</h2>\n    <p>\n      The <code>v-on</code> listener can also accept key modifiers and click modifiers.\n      Hence, we can activate the listeners depending on the keys we set for the\n      event listener to be activated, or based on the click events we are doing with\n      our mouse.\n    </p>\n    <p>\n      We can identify the different <code>keyCode</code> identifiers by logging\n      the <code>event.keyCode</code> events of a <code>keyup</code> or a <code>keydown</code>\n      event. For example, the Event Handler <code>@keydown.65=\'activateMethod\'</code>\n      is going to activate the method when the key \'a\' is pressed.\n    </p>\n    <p>\n      Moreover, there are preset key modifiers for which there is no need to know\n      the key code. The key modifier aliases are:\n      <ul>\n        <code>\n          <li>.enter</li>\n          <li>.tab</li>\n          <li>.delete / both for delete and backspace keys</li>\n          <li>.esc</li>\n          <li>.space</li>\n          <li>.up</li>\n          <li>.down</li>\n          <li>.left</li>\n          <li>.right</li>\n        </code>\n      </ul>\n    </p>\n    <h3>Automatic Key Modifiers</h3>\n    <p>\n      Instead of key codes, we can also use valid key names that are exposed during\n      the keyboard event by identifying the property of <code>KeyboardEvent.key</code>.\n      The only detail is that for event keys that are two words like <code>ArrowDown</code>\n      we need to enter the modifier with a kebab-case.\n    </p>\n    <div class=\'jumbotron\'>\n      <h4>Example</h4>\n      <p>\n        Enter in the following input field different keys and see the <code>keyCode</code>\n        and the <code>key</code> being displayed on the screen.\n      </p>\n      <input type=\'text\' name=\'\' value=\'\' @keyup=\'showEvent\'>\n      <p>\n        You pressed the key <b>{{key}}</b> that has a key code <b>{{keyCode}}</b>.\n      </p>\n    </div>\n  </div>\n\n\n  <script>\n    var eventHandling5 = new Vue({\n      el: \'#eventHandling5\',\n      data: {\n        keyCode: \'\',\n        key: \'\'\n      }, //End of data\n      methods: {\n        showEvent(){\n          this.keyCode = event.keyCode;\n          this.key = event.key;\n        }\n      }\n    });\n  </script>\n\n\n\n\n\n  <div id=\'eventHandling6\'>\n    <h2>System Modifier Keys</h2>\n    <p>\n      The following modifier keys can be used to trigger keyboard or mouse event\n      listeners only when the corresponding modifier keys are pressed.\n      <code>\n        <li>.ctrl</li>\n        <li>.alt</li>\n        <li>.shift</li>\n        <li>.meta (The Mac home key ⌘ or the windows home key ⊞ etc)</li>\n      </code>\n    </p>\n\n    <div class=\'jumbotron\'>\n      <h4>Example</h4>\n      <p>\n        The following button will trigger the event only if the <code>shift</code>\n        key is pressed when clicked.\n      </p>\n      <button type=\'button\' name=\'button\' @click.shift=\'modifierClick\'>shift Click me</button>\n      <h6>html code</h6>\n      <code>&lt;button type=\'button\' name=\'button\' @click.shift=\'modifierClick\'&gt;shift Click me&lt;/button&gt;</code>\n    </div>\n\n    <h3><code>.exact</code> Modifier </h3>\n    <p>\n      The <code>.exact</code> modifier allows for the exact combination of Modifiers\n      to be applied in order to trigger an event.\n    </p>\n    <div class=\'jumbotron\'>\n      <h4>Example</h4>\n      <p>\n        Even though Shift is the modifier, this will fire even if Alt or Ctrl are\n        pressed at the same time.\n      </p>\n      <button type=\'button\' name=\'button\' @click.shift=\'modifierClick\'>Shift and any other key and click</button>\n      <code>&lt;button type=\'button\' name=\'button\' @click.shift=\'modifierClick\'&gt;shift Click me&lt;/button&gt;</code>\n      <p>\n        This will only fire when the Shift key is clicked but nothing else.\n      </p>\n      <button type=\'button\' name=\'button\' @click.shift.exact=\'modifierClick\'>Shift and no other key and click</button>\n      <code>&lt;button type=\'button\' name=\'button\' @click.shift.exact=\'modifierClick\'&gt;Shift and no other key and click&lt;/button&gt;</code>\n      <p>\n        This will only fire when no modifier keys are pressed.\n      </p>\n      <button type=\'button\' name=\'button\' @click.exact=\'modifierClick\'>Click with no modifier keys</button>\n      <code>&lt;button type=\'button\' name=\'button\' @click.exact=\'modifierClick\'&gt;Click with no modifier keys&lt;/button&gt;</code>\n    </div>\n\n    <h3>Mouse Button Modifiers</h3>\n    <p>\n      These modifiers restrict the handler to events that are triggered only when\n      a specific mouse button is clicked.\n      <ul>\n        <code>\n          <li>.left</li>\n          <li>.right</li>\n          <li>.middle</li>\n        </code>\n      </ul>\n    </p>\n  </div>\n\n  <script>\n    var eventHandling6 = new Vue({\n      el: \'#eventHandling6\',\n      data: {\n\n      }, //End of data\n      methods: {\n        modifierClick(){\n          alert(\'Sucess!\')\n        }\n      }\n    });\n  </script>\n\n\n  <a href=\'./006-list_rendering.html\'>Previous - List Rendering</a> <a href=\'./008-form_input_bindings.html\'>Next - Form Input Bindings</a>\n\n</body>\n</html>\n",
          description: [
            {bullet: "Vue tutorial and exercises based on vuejs.org"},
            {bullet: "Vue, CSS, HTML."},
            {bullet: "Similar project in the Vanilla section."}
          ],
          highlights: [
            {fact: "Several practice exercises and coding examples. (2018-09)"},
            {fact: "Why was it built?\nIt has been useful for me to text my aquired knowledge by keeping my notes and by creating my own exercises"},
            {fact: "Interesting fact: New Vue instances are created for every section of the tutorial"},
          ],
          language: "Vue",
          images: [
            {image: ""},
            {image: ""},
            {image: ""},
          ],
          video_url: "https://youtube.com/embed/4PPgpb3XgfI",
          id: "vueTutorialVue",
          bgImage: {
            backgroundImage: "",
            boxShadow: ""
          }
        },

        {
          key: 13,
          title: "Drum Kit - Vue",
          url: "https://papostolopoulos.github.io/js30/01-drum_kit/index-vue.html",
          code_url: "",
          git: "https://github.com/papostolopoulos/js30/tree/master/01-drum_kit",
          code: "<!DOCTYPE html>\n<html lang=\'en\' dir=\'ltr\'>\n  <head>\n    <meta charset=\'utf-8\'>\n    <title>Drum kit in Vue.js</title>\n    <script src=\'vue.js\'></script>\n\n    <style media=\'screen\'>\n      html {\n        margin: 0;\n        padding: 0;\n        font-family: arial;\n        font-size: 150%;\n        background: url(./drummer-vue.jpg);\n        background-size: cover;\n      }\n      h1 {\n        margin: auto;\n      }\n      .units {\n        display: inline-block;\n        border: 5px solid black;\n        background-color: rgba(255, 0, 0, .5);\n        margin: 10px;\n        padding: 5px;\n        min-width: 90px;\n        width: 12vh;\n        text-align: center;\n        transition: all 0.07s ease;\n      }\n      .units_play {\n        transform: scale(1.3);\n        border-color: rgb(255, 0, 0);\n        color: rgb(255, 0, 0);\n        background-color: rgba(0, 0, 0, .5);\n      }\n      #boxes{\n        /* This is from the tutorial */\n        /* display: flex;\n        flex: 1;\n        min-height: 100vh;\n        align-items: center;\n        justify-content: center; */\n        width: 100%;\n        margin: auto;\n        text-align: center;\n        position: absolute;\n        transform: translate(-50%, -50%);\n        top: 50%;\n        left: 50%;\n      }\n    </style>\n\n  </head>\n  <body>\n\n    <div id=\'boxes\'>\n\n      <unit\n      v-for=\'el in letters\'\n      :letter=\'el\'\n      :key=\'el.id\'\n      :class=\'[\'units\' , {units_play: playing}]\'>\n      </unit>\n\n\n      <sound\n      v-for=\'el in letters\'\n      :drum=\'el\' :key=\'el.id\'\n      :data-key=\'el.dataKey\'\n      :src=\'\'sounds/\'+el.sound+\'.wav\'\'>\n      </sound>\n    </div>\n\n\n\n\n\n    <script>\n      Vue.component(\'unit\', {\n        props: [\'letter\'],\n        template:\n        `<div :data-key=\'letter.dataKey\'>\n          <h1>\n            {{letter.text}}\n          </h1>\n          <span>{{letter.sound}}</span>\n          </div>\n        `\n      });\n      Vue.component(\'sound\', {\n        props: [\'drum\'],\n        template: `<audio></audio>`\n      });\n      new Vue({\n        el: \'#boxes\',\n        data: {\n          letters: [\n            {\n              text: \'A\',\n              dataKey: 65,\n              sound: \'clap\'\n            },\n            {\n              text: \'S\',\n              dataKey: 83,\n              sound: \'hihat\'\n            },\n            {\n              text: \'D\',\n              dataKey: 68,\n              sound: \'kick\'\n            },\n            {\n              text: \'F\',\n              dataKey: 70,\n              sound: \'openhat\'\n            },\n            {\n              text: \'G\',\n              dataKey: 71,\n              sound: \'boom\'\n            },\n            {\n              text: \'H\',\n              dataKey: 72,\n              sound: \'ride\'\n            },\n            {\n              text: \'J\',\n              dataKey: 74,\n              sound: \'snare\'\n            },\n            {\n              text: \'K\',\n              dataKey: 75,\n              sound: \'tom\'\n            },\n            {\n              text: \'L\',\n              dataKey: 76,\n              sound: \'tink\'\n            }\n          ],\n          playing: false\n        },\n        mounted: function() {\n           //Create array with keys\' numeric value\n          var vm = this;\n          var dataKeys = vm.letters.map((el)=>el.dataKey);\n          // Add an event listener at the global level to monitor the key presses\n          window.addEventListener(\'keydown\', function(e) {\n            if (dataKeys.includes(e.keyCode)) {\n              //Animation\n              var animDiv = document.querySelector(`div[data-key=\'${e.keyCode}\']`);\n              setTimeout(function() {\n                animDiv.classList.remove(\'units_play\');\n              }, 50);\n              //Sound play\n              var playSound = document.querySelector(`audio[data-key=\'${e.keyCode}\']`);\n              animDiv.classList.add(\'units_play\');\n              playSound.currentTime = 0;\n              playSound.play();\n            }\n          });\n        }\n      });\n    </script>\n\n  </body>\n</html>",
          description: [
            {bullet: "Drum Kit. Press the keys and hear the drums playing."},
            {bullet: "Vue, CSS, HTML."},
            {bullet: "Similar project in the Vanilla section."}
          ],
          highlights: [
            {fact: "Play drums from your keyboard. (2018-07)"},
            {fact: "Why was it built?\nGood practice of vue and css skills"},
            {fact: "Interesting fact: There is a Vanilla js version for the same project"},
          ],
          language: "Vue",
          images: [
            {image: ""},
            {image: ""},
            {image: ""},
          ],
          video_url: "https://youtube.com/embed/HNRwOGbi2sU",
          id: "drumKitVue",
          bgImage: {
            backgroundImage: "",
            boxShadow: ""
          }
        },

        {
          key: 14,
          title: "Street View Image Modal",
          url: "https://git.io/vppLs",
          git: "https://github.com/papostolopoulos/streetViewModal",
          code_url: "",
          code: "// LIST OF VARIABLES USED\nvar buttonCoordinates = document.getElementById(\'buttonCoordinates\');\nvar buttonCoordinatesModal = document.getElementById(\'buttonCoordinatesModal\');\nvar inputCoordinates = document.getElementById(\'inputCoordinates\');\nvar inputCoordinatesModal = document.getElementById(\'inputCoordinatesModal\');\nvar divIdModal = document.getElementById(\'divIdModal\');\nvar spanIdModalClose = document.getElementById(\'spanIdModalClose\');\nvar imgIdModalPhoto = document.getElementById(\'imgIdModalPhoto\');\nvar imageSrc = {\n  lat: 37.482882,\n  lon: -122.150222,\n  fov: 90,\n  heading: 35,\n  pitch: 10,\n  apiKey: \'AIzaSyCByGoevYZ0kuKlll1voldyKUZZ3gQ4mD8\',\n  url: function() {\n    return `https://maps.googleapis.com/maps/api/streetview?size=800x800\n    &location=${this.lat},${this.lon}\n    &fov=${this.fov}\n    &heading=${this.heading}\n    &pitch=${this.pitch}\n    &key=${this.apiKey}`.match(/\S/g).join(\'\');\n  }\n};\nvar iIdUpIcon = document.getElementById(\'iIdUpIcon\');\nvar idDownIcon = document.getElementById(\'iIdDownIcon\');\nvar idLeftIcon = document.getElementById(\'iIdLeftIcon\');\nvar idRightIcon = document.getElementById(\'iIdRightIcon\');\nvar idPlusIcon = document.getElementById(\'iIdPlusIcon\');\nvar idMinusIcon = document.getElementById(\'iIdMinusIcon\');\n\n\n// FUNCTIONS\nfunction updateImage(event) {\n  event.preventDefault();\n  var coordinatesArr = divIdModal.style.display === \'block\' ? inputCoordinatesModal.value.split(\',\') : inputCoordinates.value.split(\',\');\n  imageSrc.lat = coordinatesArr[0].trim();\n  imageSrc.lon = coordinatesArr[1].trim();\n\n  imgIdModalPhoto.src = imageSrc.url();\n  divIdModal.style.display = \'block\';\n}\n\n//DISPLAY MODAL ON CLICK OF SUBMIT BUTTON\nbuttonCoordinates.onclick = updateImage;\nbuttonCoordinatesModal.onclick = updateImage;\n\n//CLOSE MODAL WINDOW WHEN CLICKING AROUND CONTENT\nwindow.onclick = ()=&gt;{\n  if (event.target === divIdModal) divIdModal.style.display = \'none\';\n};\n\n//CLOSE MODAL WINDOW WHEN CLICKING ON X\nspanIdModalClose.onclick = () =&gt; divIdModal.style.display = \'none\';\n\n// CLOSE MODAL WINDOW WHEN HITING ESCAPE\nwindow.onkeyup = (event)=&gt;{\n  if (divIdModal.style.display === \'block\' && event.key === \'Escape\') divIdModal.style.display = \'none\';\n  // if (divIdModal.style.display === \'none\' &&\n  //  event.key === \'Enter\' &&\n  //  inputCoordinates.value.length !==0) updateImage;\n}\n\n// ADJUST IMAGE BASED ON KEY PRESSES\nwindow.onkeydown = (event)=&gt;{\n  // console.log(event);\n  // console.log(event.key);\n  if (event.key === \'ArrowRight\' && divIdModal.style.display === \'block\') imageSrc.heading += 5;\n  if (event.key === \'ArrowLeft\' && divIdModal.style.display === \'block\') imageSrc.heading -= 5;\n  if (event.key === \'ArrowUp\' && divIdModal.style.display === \'block\') imageSrc.pitch += 5;\n  if (event.key === \'ArrowDown\' && divIdModal.style.display === \'block\') imageSrc.pitch -= 5;\n  if (event.key === \'z\' && divIdModal.style.display === \'block\') imageSrc.fov -= 5;\n  if (event.key === \'x\' && divIdModal.style.display === \'block\') imageSrc.fov += 5;\n\n  imgIdModalPhoto.src = imageSrc.url();\n  console.log(imgIdModalPhoto.src);\n};\n\n// ADJUST IMAGE BASED ON ICON CLICK\niIdRightIcon.onclick = ()=&gt;{imageSrc.heading += 5; imgIdModalPhoto.src = imageSrc.url();}\niIdLeftIcon.onclick = ()=&gt; {imageSrc.heading -= 5; imgIdModalPhoto.src = imageSrc.url();}\niIdUpIcon.onclick = ()=&gt; {imageSrc.pitch += 5; imgIdModalPhoto.src = imageSrc.url();}\niIdDownIcon.onclick = ()=&gt; {imageSrc.pitch -=5; imgIdModalPhoto.src = imageSrc.url();}\niIdPlusIcon.onclick = ()=&gt; {imageSrc.fov -=5; imgIdModalPhoto.src = imageSrc.url();}\niIdMinusIcon.onclick = ()=&gt; {imageSrc.fov +=5; imgIdModalPhoto.src = imageSrc.url();}",
          description: [
            {bullet: "Modal that displays static Google Street View image."},
            {bullet: "Camera rotation and zooming."},
            {bullet: "Google maps API call."},
            {bullet: "Vanilla JavaScript, Vanilla CSS."}
          ],
          highlights: [
            {fact: "Enter coordinates, see Google Street View Image. (2018-06)"},
            {fact: "Why was it built?\nIt was interesting for me to see if I could make something that would be matched with the Open Street Maps project."},
            {fact: "Interesting fact: This was easier than I thought. the API call was straighforward but if a lot of users start using this, then there is a fee for getting data from Google."},
          ],
          language: "Vanilla",
          images: [
            {image: ""},
            {image: ""},
            {image: ""},
          ],
          video_url: "https://youtube.com/embed/Ce009inkFAA",
          id: "streetViewModalVanilla",
          bgImage: {
            backgroundImage: "",
            boxShadow: ""
          }
        },

        {
          key: 15,
          title: "CSS Tutorial - Vue",
          url: "https://papostolopoulos.github.io/css-exploration/index.html",
          git: "https://github.com/papostolopoulos/css-exploration",
          code_url: "",
          code: "var exampleArea = Vue.component(\"example-area\",{\n  template: `\n  <div>\n    <div class=\"divExample\">\n      <textarea\n      class=\"textAreaPracticeHtml\"\n      placeholder=\"Add your html\"\n      v-model=\"textAreaPracticeHtml\"\n      @keyup=\"htmlCssCombine($event)\"\n      ></textarea>\n      <textarea\n      class=\"textAreaPracticeCss\"\n      placeholder=\"Add your css\"\n      v-model = \"textAreaPracticeCss\"\n      @keyup=\"htmlCssCombine($event)\"\n      ></textarea>\n      <iframe src=\"\" width=\"\" height=\"\" class=\"iFramePractice\" id=\"testFrame\"></iframe>\n    </div>\n    <span class=\"spanExampleArea\"><slot></slot></span>\n    <div class=\"buttonExampleArea\">\n    <button type=\"button\" @click=\"resetContent\">Reset</button>\n    </div>\n  </div>\n  `,\n  data: function() {\n    return {\n      textAreaPracticeHtml: \"\",\n      textAreaPracticeCss: \"\",\n    }\n  },\n  computed: {\n    iframeContentUpdate() {\n      return \"<style>\" + this.textAreaPracticeCss + \"</style>\" + this.textAreaPracticeHtml;\n    }\n  },\n  methods: {\n    htmlCssCombine(event){\n      event.composedPath()[1].children[2].contentDocument.body.innerHTML = this.iframeContentUpdate;\n    },\n    preSetContent(){ //Content extracted from the <span> <slot>\n      this.textAreaPracticeCss =\n      this.$el.children[1].innerHTML\n      .split(\"</span>\")[0]\n      .replace(\"<span>\", \"\")\n      .replace(/\s[^\S]/g, \"\")\n      .replace(/\{/g, \"{\n\t\")\n      .replace(/;[^\}\*]/g, \";\n\t\")\n      .replace(/(\*\/)[^\}]/g, \"$1\n\t\")\n      .replace(/\}/g, \"}\n\n\")\n      .trim();\n\n      this.textAreaPracticeHtml =\n      this.$el.children[1].innerHTML\n      .split(\"</span>\")[1]\n      .replace(/(\s){2,}/gm, \" \")\n      .replace(/(<\/\w+>)/g, \"\n$1\")\n      .replace(/(<\w+>)/g, \"\n$1\n\t\")\n      .trim();\n    },\n    preSetiFrameContent(){ //Content that is being pre-loaded from the computed property\n      this.$el.children[0].children[2].contentDocument.body.innerHTML =\n      \"<style>\" + this.textAreaPracticeCss + \"</style>\" + this.textAreaPracticeHtml;\n    },\n    resetContent(){\n      this.preSetContent();\n      this.preSetiFrameContent();\n    }\n  },\n  beforeMount(){\n  },\n  mounted() {\n    this.preSetContent();\n    this.preSetiFrameContent();\n  }\n});\n\n\n\n\nvar practiceArea = Vue.component(\"practice-area\",{\n  template: `\n  <div>\n    <div class=\"divPractice\">\n      <textarea\n      class=\"textAreaPracticeHtml\"\n      placeholder=\"Add your html\"\n      v-model=\"textAreaPracticeHtml\"\n      @keyup=\"htmlCssCombine($event)\"\n      ></textarea>\n      <textarea\n      class=\"textAreaPracticeCss\"\n      placeholder=\"Add your css\"\n      v-model = \"textAreaPracticeCss\"\n      @keyup=\"htmlCssCombine($event)\"\n      ></textarea>\n      <iframe src=\"\" width=\"\" height=\"\" class=\"iFramePractice\"></iframe>\n    </div>\n    <span class=\"spanSolutionArea\"><slot></slot></span>\n    <div class=\"buttonExampleArea\">\n      <button @click=\"solutionContentExecute\">Solution</button>\n      <button @click=\"yourEdits\">Your edits</button>\n    </div>\n  </div>\n  `,\n  data: function() {\n    return {\n      textAreaPracticeHtml: \"\",\n      textAreaPracticeCss: \"\",\n      iFrameUserContent: \"\",\n    }\n  },\n  computed: {\n    iframeContentUpdate() {\n      return \"<style>\" + this.textAreaPracticeCss + \"</style>\" + this.textAreaPracticeHtml;\n    }\n  },\n  methods: {\n    //Updates the iFrame content on the keyUp events.\n    htmlCssCombine(event){\n      event.composedPath()[1].children[2].contentDocument.body.innerHTML = this.iframeContentUpdate;\n    },\n\n    //content loaded from the <span> <slot> tag when click on \"solution\" button\n    solutionContent(){\n      this.iFrameUserContent = \"<style>\" + this.textAreaPracticeCss + \"</style>\" + this.textAreaPracticeHtml;\n\n      this.textAreaPracticeCss =\n      this.$el.children[1].innerHTML\n      .split(\"</span>\")[0]\n      .replace(\"<span>\", \"\")\n      .replace(/(\s){2,}/gm, \" \")\n      .replace(/\s[^\S]/g, \"\")\n      .replace(/\{/g, \"{\n\t\")\n      .replace(/;[^\}\*]/g, \";\n\t\")\n      .replace(/(\*\/)[^\}]/g, \"$1\n\t\")\n      .replace(/\}/g, \"}\n\n\")\n      .trim();\n\n      this.textAreaPracticeHtml =\n      this.$el.children[1].innerHTML\n      .split(\"</span>\")[1]\n      .replace(/\s{2,}/gm, \"\")\n      .replace(/(<\/\w+>)/g, \"\n$1\")\n      .replace(/(<\w+>)/g, \"\n$1\n\t\")\n      .trim();\n    },\n    solutioniFrameContent(){\n      this.$el.children[0].children[2].contentDocument.body.innerHTML =\n      \"<style>\" + this.textAreaPracticeCss + \"</style>\" + this.textAreaPracticeHtml;\n    },\n    yourEdits(){\n      this.$el.children[0].children[2].contentDocument.body.innerHTML = this.iFrameUserContent;\n\n      this.textAreaPracticeCss =\n      this.iFrameUserContent\n      .split(\"</style>\")[0]\n      .replace(\"<style>\", \"\")\n      .replace(/\s[^\S]/g, \"\")\n      .replace(/\{/g, \"{\n\t\")\n      .replace(/;[^\}\*]/g, \";\n\t\")\n      .replace(/(\*\/)[^\}]/g, \"$1\n\t\")\n      .replace(/\}/g, \"}\n\n\")\n      .trim();\n\n      this.textAreaPracticeHtml =\n      this.iFrameUserContent\n      .split(\"</style>\")[1]\n      .replace(/(\s){2,}/gm, \" \")\n      .replace(/(<\/\w+>)/g, \"\n$1\")\n      .replace(/(<\w+>)/g, \"\n$1\n\t\")\n      .trim();\n    },\n    solutionContentExecute(){\n      this.solutionContent();\n      this.solutioniFrameContent();\n    },\n  }, //End of methods\n\n  mounted() {\n    // this.solutionContent();\n    // this.solutioniFrameContent();\n  }\n});\n\n\n\n\n\nvar app = new Vue({\n  el: \"#container\",\n  data: {\n    chapters: [],\n    activePage: \"Introduction\",\n    indexPage: \"\",\n    activeSection: \"\",\n  }, //End of data\n  methods: {\n\n    //UPDATES THE DISPLAY OF THE <SECTION> ELEMENTS - DISPLAYS THE ONE THAT IS\n    //CURRENTLY CLICKED FROM THE <ASIDE> LINKS\n    //CHANGES THE FORMAT / DISPLAY OF THE HEADINGS IN THE <ASIDE> TAG\n    activeTag(event){\n\n      //Updates the display of all sections. Makes the active section visible and the others not\n      let sectionActive = \"section\" + this.modifyActivePage;\n      let sections = document.querySelectorAll(\"section\");\n      for (let i = 0; i < sections.length; i++) {\n        sectionActive === sections[i].id ?\n        sections[i].style.display = \"block\" :\n        sections[i].style.display = \"none\";\n      }\n\n\n      //Updates the styling of the aside tags h1 headings to bold\n      let asideAnchors = document.querySelectorAll(\"aside a\");\n      let starter = -Infinity;\n\n      for (let i = 0; i < asideAnchors.length; i++) {\n\n        //Remove the bolding from the anchor that has a parent that is h1\n        asideAnchors[i].className = asideAnchors[i].className.replace(/\s?anchorActiveTag/, \"\");\n\n        //Remove all the classes from the list elements\n        asideAnchors[i].parentNode.parentNode.className = asideAnchors[i].parentNode.parentNode.className.replace(/\s?anchor(Active|Inactive)(Tag|Heading)/g, \"\");\n\n        //Hide all the <li> elements that do not nest an h1\n        if (asideAnchors[i].parentNode.localName !== \"h1\") asideAnchors[i].parentNode.parentNode.className += \" anchorInactiveHeading\";\n\n        //For starting the while loop at the position right after the h1 that represents the displayed section\n        if (asideAnchors[i].className.includes(\"anchor\" + this.modifyActivePage)) starter = i + 1;\n      }\n\n      //That is for h2 - h3 aside headings to be visible\n      while(asideAnchors[starter].parentNode.localName !== \"h1\"){\n        asideAnchors[starter].parentNode.parentNode.className = \"anchorActiveHeading\";\n        starter ++;\n      }\n\n      //Give to the (h1 --> anchor) a class that makes it bold\n      document.querySelector(\"a.anchor\" + this.modifyActivePage).className += \" anchorActiveTag\";\n    }, //End of activeTag method\n\n\n    //CREATES ALL THE \"HEADINGS\" OBJECT ELEMENTS FOR THE \"CHAPTERS\" DATA PROPERTY.\n    //THEN THE DATA IN THE \"CHAPTERS\" PROPERTY ARE USED FOR THE FORMATION OF THE\n    //HEADINGS IN THE ASIDE TAG\n    headingsFormation(){\n      let hList = document.querySelectorAll(\"h1,h2,h3,h4,h5,h6\");\n      let sectionName = \"Introduction\"\n\n      hList.forEach((el, idx)=>{\n        let newHeading = {};\n\n        //If statement so that the headings in the <aside> tag are disregarded OR\n        //If they are inside a <span> in the example area\n        if (!el.innerText.includes(\"chapter.text\")) {\n          if (!el.parentElement.className.includes(\"exampleArea\")) {\n            newHeading.heading = el.localName;\n            newHeading.text = el.innerText;\n\n            if (el.localName === \"h1\") sectionName = el.innerText.replace(/\s/g, \"\");\n            newHeading.sectionName = sectionName;\n\n            this.chapters.push(newHeading);\n          }\n        }\n      });\n    }, //End of headingsFormation method\n\n\n    //CREATES IDS FOR ALL THE HEADING TAGS THAT DO NOT BELONG IN THE ASIDE TAG\n    makeId(){\n      let hList = document.querySelectorAll(\"h1,h2,h3,h4,h5,h6\");\n\n      for(let i = 0; i < hList.length; i++){\n        if (hList[i].parentNode.className === \"spanSolutionArea\") continue;\n\n        if (hList[i].parentNode.localName !== \"li\"){\n          if (hList[i].parentNode.className === \"divExampleContainer\" || hList[i].parentNode.className === \"divPracticeContainer\") {\n            hList[i].id =\n            hList[i].localName + \"_\" +\n            hList[i].innerText.replace(/\s/g, \"-\") +\n            \"(\" + hList[i].parentNode.parentNode.id + \")\";\n          }\n          else {\n            hList[i].id = hList[i].localName + \"_\" + hList[i].innerText.replace(/\s/g, \"-\");\n          }\n        }\n      }\n    } //End of makeId method\n  }, //End of methods\n\n  computed: {\n    modifyActivePage() {\n      return this.activePage.replace(/[^A-z]/g, \"\");\n    }\n  },\n\n  beforeMount(){\n    this.headingsFormation();\n  },\n  mounted(){\n    this.makeId();\n    this.activeTag();\n  }\n});\n",
          description: [
            {bullet: "CSS tutorial built with Vue components."},
            {bullet: "Single page application with viewable content based on the user's browsing pattern."},
            {bullet: "The user can enter HTML and CSS in practice textareas and see the result of his code in real time"},
            {bullet: "Vue, Vanilla CSS."}
          ],
          highlights: [
            {fact: "Learn CSS and practice in a WYSIWYG environment. (2018-10)"},
            {fact: "Why was it built?\nIt helps me understand some CSS principles and ti can create my own examples that other folks can later use"},
            {fact: "Interesting fact: Reusable vue components make the process of building this project very interesting."},
          ],
          language: "Vue",
          images: [
            {image: ""},
            {image: ""},
            {image: ""},
          ],
          video_url: "https://youtube.com/embed/weG_SlyUaXM",
          id: "cssTutorialVue",
          bgImage: {
            backgroundImage: "",
            boxShadow: ""
          }
        },


        {
          key: 16,
          title: "xPath Generator",
          url: "https://papostolopoulos.github.io/xPathDataExtraction/copypaste/xPathGenerator.html",
          git: "https://github.com/papostolopoulos/copypaste",
          code_url: "",
          code: "<!DOCTYPE html>\n<html lang=\'en\' dir=\'ltr\'>\n  <head>\n    <meta charset=\'utf-8\'>\n    <link rel=\'stylesheet\' href=\'https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\' integrity=\'sha384-WskhaSGFgHYWDcbwN70/dfYBj47jz9qbsMId/iRN3ewGhXQFZCSftd1LZCfmhktB\' crossorigin=\'anonymous\'>\n    <script src=\'https://cdn.jsdelivr.net/npm/vue/dist/vue.js\'></script>\n    <title>xPath Generator</title>\n\n\n    <style media=\'screen\'>\n\n      *{\n        box-sizing: border-box;\n      }\n\n      .divContainer{\n        display: grid;\n        grid-template-rows: 85vh 15vh;\n        grid-template-columns: 60vw 40vw;\n        grid-template-areas:\n\n        \'sectionOptions sectionElements\'\n        \'sectionResult sectionResult\';\n      }\n\n      .sectionOptions{\n        grid-area: sectionOptions;\n        display: grid;\n        grid-template-columns: 45% 55%;\n        grid-template-rows: 60% 3% 17% 20%;\n        grid-template-areas:\n        \'branches functions\'\n        \'brackets functions\'\n        \'brackets operators\'\n        \'attributes parameters\';\n        font-size: 0.85em;\n      }\n\n      .branches, .functions, .brackets, .operators, .attributes, .parameters{\n        padding: 10px;\n      }\n\n      .branches{\n        grid-area: branches;\n        border-right: 2px solid rgb(0,0,128);\n        border-top: 2px solid rgb(0,0,128);\n      }\n\n      .branches:hover{\n        background: rgba(0,0,128,.1);\n      }\n\n      .branches h3{\n        color: rgb(0,0,128);\n      }\n\n      .branches hr{\n        margin: 3%;\n      }\n\n      .divBranchesAbsoluteRelative{\n        display: flex;\n        justify-content: space-around;\n      }\n\n      .divBranchesInputs{\n        display: flex;\n        flex-flow: column wrap;\n        height: 80%;\n        align-content: space-around;\n      }\n\n      .divBranchesInputs input:focus + span{\n        color: rgb(0,0,128);\n      }\n\n      .brackets{\n        grid-area: brackets;\n        border-right: 2px solid rgb(0,100,0);\n        border-top: 2px solid rgb(0,100,0);\n      }\n\n      .brackets:hover{\n        background-color: rgba(0,100,0,.1);\n      }\n\n      .brackets h3{\n        color: rgb(0,100,0); /*Dark green*/\n      }\n\n      .divBracketsInputs{\n        height: 80%;\n        display: flex;\n        justify-content: center;\n        align-content: center;\n      }\n\n      .divBracketsInputs label{\n        margin: 0;\n      }\n\n      .divBracketsInputs input:focus + span{\n        color: rgb(0,100,0);\n      }\n\n      .divBracketsInputs table{\n        width: 100%;\n      }\n\n      .divBracketsInputs table td{\n        text-align: center;\n        vertical-align: middle;\n        padding: 0;\n      }\n\n      .operators{\n        grid-area: operators;\n        border-top: 2px solid rgb(255,140,0);\n        border-right: 2px solid rgb(255,140,0);\n      }\n\n      .operators:hover{\n        background-color: rgba(255,140,0,.1);\n      }\n\n      .operators h3{\n        color: rgb(255,140,0);\n      }\n\n      .divOperatorsInputs{\n        display: flex;\n        flex-flow: column wrap;\n        height: 80%;\n        align-content: space-around;\n      }\n\n      .divOperatorsInputs input:focus + span{\n        color: rgb(255,140,0);\n      }\n\n      .functions{\n        grid-area: functions;\n        border-right: 2px solid rgb(128,0,32);\n        border-top: 2px solid rgb(128,0,32);\n      }\n\n      .functions:hover{\n        background-color: rgba(128,0,32,.1);\n      }\n\n      .functions h3{\n        color: rgb(128,0,32);\n      }\n\n      .divFunctionsInputs{\n        display: flex;\n        flex-flow: column wrap;\n        height: 90%;\n        align-content: space-around;\n        font-size: .79rem;\n        padding: 1px;\n      }\n\n      .divFunctionsInputs input:focus + span{\n        color: rgb(128,0,32);\n      }\n\n      .functionSpansFontSize{\n        color: red;\n      }\n\n      .attributes{\n        grid-area: attributes;\n        border-top: 2px solid rgb(184,134,11);\n        border-right: 2px solid rgb(184,134,11);\n      }\n\n      .attributes:hover{\n        background-color: rgba(184,134,11, .1);\n      }\n\n      .attributes h3{\n        color: rgb(184,134,11);\n      }\n\n      .divAttributesInputs{\n        display: flex;\n        align-content: space-around;\n        justify-content: space-between;\n        flex-wrap: wrap;\n      }\n\n      .divAttributesInputs label{\n        margin-right: 2px;\n      }\n\n      .divAttributesInputs input:focus + span{\n        color: rgb(184,134,11);\n      }\n\n      .parameters{\n        grid-area: parameters;\n        display: grid;\n        grid-template-columns: 100%;\n        grid-template-rows: 30% 30% 40%;\n        grid-template-areas:\n        \'gridParamsHeading\'\n        \'gridParamsLevel1\'\n        \'gridParamsLevel2\';\n        border-top: 2px solid rgb(128,0,128); /*purple*/\n        border-right: 2px solid rgb(128,0,128);\n      }\n\n      .parameters:hover{\n        background-color: rgba(128,0,128, .1);\n      }\n\n      .parameters h3{\n        color: rgb(128,0,128);\n      }\n\n      .gridParamsHeading{\n        grid-area: gridParamsHeading\n      }\n\n      .gridParamsLevel1{\n        grid-area: gridParamsLevel1;\n        display: flex;\n        justify-content: center;\n      }\n\n      .gridParamsLevel1 label{\n        margin-right: 10px;\n      }\n\n      .gridParamsLevel1 input:focus + span{\n        color: rgb(128,0,128);\n      }\n\n      .gridParamsLevel2{\n        grid-area: gridParamsLevel2;\n        display: flex;\n        justify-content: center;\n      }\n\n      h3, h4{\n        text-align: center;\n      }\n\n      label:hover{\n        font-weight: bold;\n        cursor: pointer;\n      }\n\n      input:focus + span{\n        font-weight: bold;\n      }\n\n      .sectionOptions span::after {\n        display: block;\n        content: attr(data-bold);\n        font-weight: bold;\n        height: 0;\n        overflow: hidden;\n        visibility: hidden;\n      }\n\n      .sectionElements{\n        grid-area: sectionElements;\n        display: grid;\n        grid-template-columns: 100%;\n        grid-template-rows: 40% 15% 45%;\n        grid-template-areas:\n        \'divFunctionsSequenceArrElements\'\n        \'divFunctionConcatenation\'\n        \'divPathArrayElements\';\n        background-color: rgb(245,245,245);\n      }\n\n      .sectionElements input{\n        margin: 5px;\n        padding: 5px 0 5px 5px;\n      }\n\n      .divFunctionsSequenceArrElements,\n      .divFunctionConcatenation,\n      .divPathArrayElements{\n        padding: 10px;\n      }\n\n      .divFunctionsSequenceArrElements{\n        grid-area: divFunctionsSequenceArrElements;\n        display: grid;\n        grid-template-columns: 100%;\n        grid-template-rows: 10% 75% 15%;\n        grid-template-areas:\n        \'divFunctionsSequenceArrHeader\'\n        \'divFunctionsSequenceArrInputs\'\n        \'divFunctionsConcatButton\';\n        line-height: 1;\n        border-top: 2px solid rgb(128,0,32);\n        border-right: 2px solid rgb(128,0,32);\n      }\n\n      .divFunctionsSequenceArrElements h3{\n        color: rgb(128,0,32);\n      }\n\n      .spanActiveFunctionTitle{\n        font-weight: bold;\n        font-size: 1.3rem;\n        min-width: 450px;\n        width: 450px;\n        color: rgb(128,0,32);\n      }\n\n      .divFunctionsSequenceArrInputs{\n        grid-area: divFunctionsSequenceArrInputs;\n        overflow: auto;\n        position: relative;\n      }\n\n      .divFunctionsSequenceArrInputs label input{\n        border: 2px solid rgb(128,0,32); /*Burgundy*/\n        border-radius: 5%;\n        margin: 2px;\n      }\n\n      .divFunctionsSequenceArrInputs label input:hover{\n        background-color: rgba(255,0,255, .2); /*Magenda*/\n      }\n\n      .divFunctionsSequenceArrInputs label input:focus{\n        background-color: rgba(255, 0, 255, .4);\n        color: rgb(128,0,32);\n        outline: none;\n      }\n\n      .divFunctionsConcatButton{\n        display: flex;\n        justify-content: flex-end;\n        align-content: flex-end;\n      }\n\n      #buttonConcatAxes{\n        padding: 3px;\n        font-weight: bold;\n        color: rgb(128,0,32);\n        border: 2px solid rgb(128,0,32);\n        margin: 0;\n      }\n\n      #buttonConcatAxes:hover{\n        cursor: pointer;\n        background-color: rgba(128,0,32, .2);\n      }\n\n      #buttonConcatAxes:active{\n        background-color: rgb(128,0,32);\n        color: white;\n      }\n\n      #buttonConcatAxes:focus{\n        outline: none;\n      }\n\n      .divFunctionConcatenation{\n        grid-area: divFunctionConcatenation;\n        word-wrap: break-word;\n        overflow: auto;\n        border-top: 2px solid rgb(47,79,79); /*dark slate gray*/\n        border-right: 2px solid rgb(47,79,79);\n      }\n\n      .divFunctionConcatenation h3{\n        color: rgb(47,79,79);\n      }\n\n      .divPathArrayElements{\n        grid-area: divPathArrayElements;\n        overflow: auto;\n        border-top: 2px solid rgb(0,0,128); /*Navy blue*/\n        border-right: 2px solid rgb(0,0,128); /*Navy blue*/\n      }\n\n      .divPathArrayElements h3{\n        color: rgb(0,0,128);\n      }\n\n      .divPathArrayElements label input{\n        border: 2px solid rgb(0,0,128); /*Navy blue*/\n        border-radius: 5%\n      }\n\n      .divPathArrayElements label input:hover{\n        background-color: rgba(0,255,255, .2); /*aqua*/\n      }\n\n      .divPathArrayElements label input:focus{\n        background-color: rgba(0,255,255, .4);\n        color: rgb(0,0,128);\n        outline: none;\n      }\n\n      .sectionResult{\n        grid-area: sectionResult;\n        display: grid;\n        grid-template-columns: 18vw 82vw;\n        grid-template-rows: 100%;\n        grid-template-areas:\n        \'divFooter divResult\'\n      }\n\n      .divFooter{\n        background-color: black;\n        color: white;\n        text-align: center;\n        display: flex;\n        justify-content: center;\n        flex-flow: column wrap;\n      }\n\n      .divFooter a{\n        color: white;\n      }\n\n      .divResult{\n        border: 2px solid black;\n        display: grid;\n        grid-template-columns: 100%;\n        grid-template-rows: 20% 80%;\n        grid-template-areas:\n        \'divResultHeader\'\n        \'divResultTextArea\';\n        background-color: rgb(220, 220, 220);\n      }\n\n      #textAreaFullPath{\n        width: 100%;\n        height: 100%;\n        padding: 5px;\n      }\n\n      .divResultTextArea{\n        padding: 10px;\n        position: relative;\n      }\n\n      #buttonCopyxPath{\n        position: absolute;\n        right: 10px;\n        bottom: 10px;\n        border: 2px solid black;\n        font-weight: bold;\n      }\n\n      #buttonCopyxPath:hover{\n        pointer: cursor;\n        background-color: rgba(0,0,0, .4);\n      }\n\n      #buttonCopyxPath:active{\n        background-color: black;\n        color: white;\n      }\n\n      #buttonCopyxPath:focus{\n        outline: none;\n      }\n\n      .divBranchesInputs label{\n        position: relative;\n      }\n\n      .spanBubble{\n        position: absolute;\n        width: 150px;\n        font-size: .8em;\n        font-weight: bold;\n        padding: 5px;\n        color: white;\n        border-radius: 7%;\n        font-family: arial;\n        /* margin-top: 10px;\n        margin-left: -5px; */\n        z-index: 0;\n        opacity: 0;\n        visibility: 0;\n        transition: opacity 0.3s;\n      }\n\n      .branches .spanBubble{\n        background-color: rgba(0,0,128, .8);\n      }\n\n      .functions .spanBubble{\n        background-color: rgba(128,0,32, .8);\n      }\n\n      .brackets .spanBubble{\n        background-color: rgba(0,100,0, .8);\n      }\n\n      .operators .spanBubble{\n        background-color: rgba(255,140,0, .8);\n      }\n\n      .attributes .spanBubble{\n        background-color: rgba(184,134,11, .8);\n      }\n\n      .parameters .spanBubble{\n        background-color: rgba(128,0,128, .8);\n      }\n\n      .divLabelContainer{\n        position: relative;\n      }\n\n      .divLabelContainer label{\n        display: inline-block;\n      }\n\n      .divFooter .spanBubble{\n        position: absolute;\n        bottom: 30%;\n        left: 30%;\n        border: 2px solid black;\n        width: auto;\n        border-radius: 0;\n        background-color: white;\n        z-index: -1;\n      }\n\n      .spanBubble code{\n        color: yellow;\n        font-size: 1em;\n      }\n\n      label:hover + .spanBubble, h3:hover + .spanBubble{\n        visibility: visible;\n        opacity: 1;\n        z-index: 1;\n      }\n\n    </style>\n\n  </head>\n\n\n\n\n\n\n\n  <body>\n    <main id=\'mainSlot\'>\n      <div class=\'divContainer\'>\n\n        <section class=\'sectionOptions\'>\n          <div class=\'branches\'>\n            <h3>Axes / Node</h3>\n\n\n            <div class=\'divBranchesAbsoluteRelative\'>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'absoluteRelativeAxis\' v-model=\'absoluteRelativeAxis\' value=\'absolute\'>\n                  <span data-bold=\'---Absolute path\'>Absolute path</span>\n                </label>\n                <span class=\'spanBubble\'>Path starts from the root element (<code>/</code> at the front)</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'absoluteRelativeAxis\' v-model=\'absoluteRelativeAxis\' value=\'relative\'>\n                  <span data-bold=\'---Relative path\'>Relative path</span>\n                </label>\n                <span class=\'spanBubble\'>Path starts from position relative to the current node (.)</span>\n              </div>\n            </div>\n            <hr>\n            <div class=\'divBranchesInputs\'>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' value=\'\' name=\'axisOption\' v-model=\'axis\'>\n                  <span data-bold=\'---None\'>None</span>\n                </label>\n                <span class=\'spanBubble\'>No path expression selected</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' value=\'/self::\' name=\'axisOption\' v-model=\'axis\' @click=\'node = \'node()\'\'>\n                  <span data-bold=\'---. (/self::node())\'>. (/self::node())</span>\n                </label>\n                <span class=\'spanBubble\'>Use <code>.</code> if you want to shortcut your xPath</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' value=\'/parent::\' name=\'axisOption\' v-model=\'axis\' @click=\'node = \'node()\'\'>\n                  <span data-bold=\'---.. (/parent::node())\'>.. (/parent::node())</span>\n                </label>\n                <span class=\'spanBubble\'>Select parent node. Use <code>..</code> if you want to shortcut your xPath</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' value=\'//\' name=\'axisOption\' v-model=\'axis\'>\n                  <span data-bold=\'---// (descendant-or-self::)\'>// (descendant-or-self::)</span>\n                </label>\n                <span class=\'spanBubble\'>Select descendants or existing node. Use <code>//</code> if you want to shortcut your xPath</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' value=\'/ancestor::\' name=\'axisOption\' v-model=\'axis\'>\n                  <span data-bold=\'---/ancestor::\'>/ancestor::</span>\n                </label>\n                <span class=\'spanBubble\'>Select the ancestors of the current node (parents, grandparents etc)</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' value=\'/ancestor-or-self::\' name=\'axisOption\' v-model=\'axis\'>\n                  <span data-bold=\'---/ancestor-or-self::\'>/ancestor-or-self::</span>\n                </label>\n                <span class=\'spanBubble\'>Select the ancestors of the current node (parents, grandparents etc) or the node itself</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' value=\'/attribute::\' name=\'axisOption\' v-model=\'axis\'>\n                  <span data-bold=\'/attribute:: (@)\'>/attribute:: (@)</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  Select an attribute of the existing node. Use <code>@</code> to\n                  shortcut your xpath. Use the Attributes section.\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' value=\'/child::\' name=\'axisOption\' v-model=\'axis\'>\n                  <span data-bold=\'---/child::\'>/child::</span>\n                </label>\n                <span class=\'spanBubble\'>Select any of the immediate children of the current node</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' value=\'/descendant::\' name=\'axisOption\' v-model=\'axis\'>\n                  <span data-bold=\'---/descendant::\'>/descendant::</span>\n                </label>\n                <span class=\'spanBubble\'>Select the descendants of the current node (children, grandchildren etc)</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' value=\'/descendant-or-self::\' name=\'axisOption\' v-model=\'axis\'>\n                  <span data-bold=\'---/descendant-or-self::\'>/descendant-or-self::</span>\n                </label>\n                <span class=\'spanBubble\'>Select the descendants of the current node (children, grandchildren etc) or the node itself</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' value=\'/following::\' name=\'axisOption\' v-model=\'axis\'>\n                  <span data-bold=\'---/following::\'>/following::</span>\n                </label>\n                <span class=\'spanBubble\'>Select the nodes that are following the current node (siblings or other branches in the document)</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' value=\'/following-sibling::\' name=\'axisOption\' v-model=\'axis\'>\n                  <span data-bold=\'---/following-sibling::\'>/following-sibling::</span>\n                </label>\n                <span class=\'spanBubble\'>Select the immediate siblings that follow the current node</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' value=\'/namespace::\' name=\'axisOption\' v-model=\'axis\'>\n                  <span data-bold=\'---/namespace::\'>/namespace::</span>\n                </label>\n                <span class=\'spanBubble\'>Select the namespace nodes of the current node</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' value=\'/parent::\' name=\'axisOption\' v-model=\'axis\'>\n                  <span data-bold=\'---/parent::\'>/parent::</span>\n                </label>\n                <span class=\'spanBubble\'>Select the parent of the current node</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' value=\'/preceding::\' name=\'axisOption\' v-model=\'axis\'>\n                  <span data-bold=\'---/preceding::\'>/preceding::</span>\n                </label>\n                <span class=\'spanBubble\'>Select all preceding nodes of the current node (parent, grandparents etc)</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' value=\'/preceding-sibling::\' name=\'axisOption\' v-model=\'axis\'>\n                  <span data-bold=\'---/preceding-sibling::\'>/preceding-sibling::</span>\n                </label>\n                <span class=\'spanBubble\'>Select the preceding siblings of the current node</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' value=\'/self::\' name=\'axisOption\' v-model=\'axis\'>\n                  <span data-bold=\'---/self::\'>/self::</span>\n                </label>\n                <span class=\'spanBubble\'>Select the current node itself</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'text\' name=\'addNode\' v-model=\'node\' @keyup.enter=\'addBranch($event)\' size=\'12\'>\n                  <span data-bold=\'---Node\'>Node</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  Enter the node\'s name. Press \'enter\' when done. <br>\n                   - If you want, you can use this input field to enter other xPath elements.\n                </span>\n              </div>\n            </div>\n          </div>\n\n\n\n\n          <div class=\'brackets\'>\n            <h3>Predicates / Parenthesis</h3>\n            <div class=\'divBracketsInputs\'>\n              <table>\n                <tr>\n                  <td>&nbsp;</td>\n                  <td>Open</td>\n                  <td>Close</td>\n                  <td>None</td>\n                </tr>\n                <tr>\n                  <td>Brackets</td>\n                  <td>\n                    <div class=\'divLabelContainer\'>\n                      <label>\n                        <input type=\'radio\' name=\'brackets\' value=\'[\' v-model=\'brackets\' @click=\'addBrackets($event)\'>\n                        <span data-bold=\'---[\'>[</span>\n                      </label>\n                      <span class=\'spanBubble\'>Open square bracket <code>[</code></span>\n                    </div>\n                  </td>\n                  <td>\n                    <div class=\'divLabelContainer\'>\n                      <label>\n                        <input type=\'radio\' name=\'brackets\' value=\']\' v-model=\'brackets\' @click=\'addBrackets($event)\'>\n                        <span data-bold=\'---]\'>]</span>\n                      </label>\n                      <span class=\'spanBubble\'>Close square bracket <code>]</code></span>\n                    </div>\n                  </td>\n                  <td rowspan=\'2\'>\n                    <div class=\'divLabelContainer\'>\n                      <label>\n                        <input type=\'radio\' name=\'brackets\' value=\'\' v-model=\'brackets\'>\n                      </label>\n                      <span class=\'spanBubble\'>No option selected</span>\n                    </div>\n                  </td>\n                </tr>\n                <tr>\n                  <td>Parenthesis</td>\n                  <td>\n                    <div class=\'divLabelContainer\'>\n                      <label>\n                        <input type=\'radio\' name=\'brackets\' value=\'(\' v-model=\'brackets\' @click=\'addBrackets($event)\'>\n                        <span data-bold=\'---(\'>(</span>\n                      </label>\n                      <span class=\'spanBubble\'>Open parenthesis <code>(</code></span>\n                    </div>\n                  </td>\n                  <td>\n                    <div class=\'divLabelContainer\'>\n                      <label>\n                        <input type=\'radio\' name=\'brackets\' value=\')\' v-model=\'brackets\' @click=\'addBrackets($event)\'>\n                        <span data-bold=\'---)\'>)</span>\n                      </label>\n                      <span class=\'spanBubble\'>Close parenthesis <code>)</code></span>\n                    </div>\n                  </td>\n                </tr>\n              </table>\n            </div>\n          </div>\n\n\n\n\n          <div class=\'functions\'>\n            <h3>Functions</h3>\n            <div class=\'divFunctionsInputs\'>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'\' v-model=\'activeFunction\' disabled>\n                  <span data-bold=\'---None\'>None</span>\n                </label>\n                <span class=\'spanBubble\'>No function selected</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'boolean\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---boolean()\'>boolean()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The boolean function evaluates an expression and returns true or false. | <code>boolean(expression)</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'ceiling\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---ceiling()\'>ceiling()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The ceiling function evaluates a decimal number and returns the\n                  smallest integer greater than or equal to the decimal number.\n                  | <code>ceiling(number)</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'choose\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---choose()\'>choose()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The choose function returns one of the specified objects based\n                  on a boolean parameter. | <code>choose(boolean , object1, object2)</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'concat\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---concat()\'>concat()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The concat function concatenates two or more strings and returns\n                  the resulting string. | <code>concat(string1 ,string2 [,stringn]*)</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'contains\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---contains()\'>contains()</span>\n                </label>\n                <span class=\'spanBubble\'>The contains function determines whether\n                  the first argument string contains the second argument string\n                  and returns boolean true or false. | <code>contains(haystack, needle)</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'count\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---count()\'>count()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The count function counts the number of nodes in a node-set and\n                  returns an integer. | <code>count(node-set)</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'current\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---current()\'>current()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The current function can be used to get the context node in an\n                  XSLT instruction. | <code>current()</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'document\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---document()\'>document()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The document finds a node-set in an external document, or multiple\n                  external documents, and returns the resulting node-set. |\n                  <code>document(URI [,node-set])</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'element-available\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---element-available()\'>element-available()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The element-available function determines if an element is available\n                  and returns true or false. | <code>element-available(QName)</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'false\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---false()\'>false()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The false function returns boolean false. | <code>false()</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'floor\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---floor()\'>floor()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The floor function evaluates a decimal number and returns the\n                  largest integer less than or equal to the decimal number. |\n                  <code>floor(number)</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'format-number\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---format-number()\'>format-number()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The format-number function evaluates a number and returns a string\n                  representing the number in a given format. |\n                  <code>format-number(number ,pattern [,decimal-format])</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'function-available\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---function-available()\'>function-available()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The function-available function determines if a given function\n                  is available and returns boolean true or false. |\n                  <code>function-available(name)</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'generate-id\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---generate-id()\'>generate-id()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The generate-id function generates a unique id for the first node\n                  in a given node-set and returns a string containing that id. |\n                  <code>generate-id( [node-set])</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'key\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---key()\'>key()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The key function returns a node-set of nodes that have the given\n                  value for the given key. | <code>key(keyname ,value)</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'lang\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---lang()\'>lang()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The lang function determines whether the context node matches\n                  the given language and returns boolean true or false. |\n                  <code>lang(string)</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'last\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---last()\'>last()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The last function returns a number equal to the context size\n                  from the expression evaluation context. | <code>last()</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'local-name\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---local-name()\'>local-name()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The local-name function returns a string representing the local\n                  name of the first node in a given node-set. |\n                  <code>local-name( [node-set])</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'name\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---name()\'>name()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The name function returns a string representing the QName of the\n                  first node in a given node-set. | <code>name([node-set])</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'namespace-url\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---namespace-url()\'>namespace-url()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The namespace-uri function returns a string representing the\n                  namespace URI of the first node in a given node-set. |\n                  <code>namespace-uri([node-set])</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'normalize-space\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---normalize-space()\'>normalize-space()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The normalize-space function strips leading and trailing white-space\n                  from a string, replaces sequences of whitespace characters by a\n                  single space, and returns the resulting string. |\n                  <code>normalize-space([string])</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'not\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---not()\'>not()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The not function evaluates a boolean expression and returns the\n                  opposite value. | <code>not(expression)</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'number\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---number()\'>number()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The number function converts an object to a number and returns the\n                  number. | <code>number([object])</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'position\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---position()\'>position()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The position function returns a number equal to the context position\n                  from the expression evaluation context. | <code>position()</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'round\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---round()\'>round()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The round function returns a number that is the nearest integer to\n                  the given number. | <code>round(decimal)</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'starts-with\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---starts-with()\'>starts-with()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The starts-with checks whether the first string starts with the\n                  second string and returns true or false. |\n                  <code>starts-with(haystack, needle)</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'string\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---string()\'>string()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The string function converts the given argument to a string. |\n                  <code>string([object])</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'string-length\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---string-length()\'>string-length()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The string-length function returns a number equal to the number\n                  of characters in a given string. | <code>string-length([string])</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'substring\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---substring()\'>substring()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The substring function returns a part of a given string. |\n                  <code>substring(string ,start [,length])</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'substring-after\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---substring-after()\'>substring-after()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The substring-after function returns a string that is the rest of\n                  a given string after a given substring. |\n                  <code>substring-after(haystack ,needle)</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'substring-before\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---substring-before()\'>substring-before()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The substring-before function returns a string that is the part of\n                  a given string before a given substring. |\n                  <code>substring-before(haystack ,needle)</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'sum\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---sum()\'>sum()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The sum function returns a number that is the sum of the numeric\n                  values of each node in a given node-set. | <code>sum(node-set)</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'system-property\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---system-property()\'>system-property()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The system-property function returns an object representing the\n                  given system-property. | <code>system-property(name)</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'translate\' v-model=\'activeFunction\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---translate()\'>translate()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The translate function evaluates a string and a set of characters\n                  to translate and returns the translated string. |\n                  <code>translate(string, abc, XYZ)</code>\n                </span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'activeFunction\' value=\'true\' @click=\'addFunction($event)\'>\n                  <span data-bold=\'---true()\'>true()</span>\n                </label>\n                <span class=\'spanBubble\'>\n                  The true function returns a boolean value of true. | <code>true()</code>\n                </span>\n              </div>\n            </div>\n          </div>\n\n\n\n\n          <div class=\'operators\'>\n            <h3>Operators</h3>\n            <div class=\'divOperatorsInputs\'>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'inputOperator\' value=\'\' v-model=\'operator\'>\n                  None\n                </label>\n                <span class=\'spanBubble\'>No operator selected.</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'inputOperator\' value=\'and\' v-model=\'operator\' @click=\'addOperators($event)\'>\n                  <span data-bold=\'---and\'>and</span>\n                </label>\n                <span class=\'spanBubble\'>Boolean. Two conditions need to be true.</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'inputOperator\' value=\'or\' v-model=\'operator\' @click=\'addOperators($event)\'>\n                  <span data-bold=\'---or\'>or</span>\n                </label>\n                <span class=\'spanBubble\'>Boolean. One of two conditions need to be true.</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'inputOperator\' value=\'|\' v-model=\'operator\' @click=\'addOperators($event)\'>\n                  <span data-bold=\'---|\'>|</span>\n                </label>\n                <span class=\'spanBubble\'>Two node sets are computed.</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'inputOperator\' value=\'=\' v-model=\'operator\' @click=\'addOperators($event)\'>\n                  <span data-bold=\'---=\'>=</span>\n                </label>\n                <span class=\'spanBubble\'>Boolean. Contition needs to be equal to a value.</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'inputOperator\' value=\'!=\' v-model=\'operator\' @click=\'addOperators($event)\'>\n                  <span data-bold=\'---!=\'>!=</span>\n                </label>\n                <span class=\'spanBubble\'>Not equal. Condition needs to not be equal to a value.</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'inputOperator\' value=\'+\' v-model=\'operator\' @click=\'addOperators($event)\'>\n                  <span data-bold=\'---+\'>+</span>\n                </label>\n                <span class=\'spanBubble\'>Addition.</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'inputOperator\' value=\'-\' v-model=\'operator\' @click=\'addOperators($event)\'>\n                  <span data-bold=\'----\'>-</span>\n                </label>\n                <span class=\'spanBubble\'>Subtraction.</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'inputOperator\' value=\'*\' v-model=\'operator\' @click=\'addOperators($event)\'>\n                  <span data-bold=\'---*\'>*</span>\n                </label>\n                <span class=\'spanBubble\'>Multiplication.</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'inputOperator\' value=\'div\' v-model=\'operator\' @click=\'addOperators($event)\'>\n                  <span data-bold=\'---div\'>div</span>\n                </label>\n                <span class=\'spanBubble\'>Division</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'inputOperator\' value=\'<\' v-model=\'operator\' @click=\'addOperators($event)\'>\n                  <span data-bold=\'---&lt;\'>&lt;</span>\n                </label>\n                <span class=\'spanBubble\'>Boolean. Smaller than.</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'inputOperator\' value=\'<=\' v-model=\'operator\' @click=\'addOperators($event)\'>\n                  <span data-bold=\'---&lt;=\'>&lt;=</span>\n                </label>\n                <span class=\'spanBubble\'>Boolean. Smaller or equal than.</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'inputOperator\' value=\'>\' v-model=\'operator\' @click=\'addOperators($event)\'>\n                  <span data-bold=\'---&gt;\'>&gt;</span>\n                </label>\n                <span class=\'spanBubble\'>Boolean. Greater than.</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'inputOperator\' value=\'>=\' v-model=\'operator\' @click=\'addOperators($event)\'>\n                  <span data-bold=\'---&gt;=\'>&gt;=</span>\n                </label>\n                <span class=\'spanBubble\'>Boolean. Greater or equal than.</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'inputOperator\' value=\'mod\' v-model=\'operator\' @click=\'addOperators($event)\'>\n                  <span data-bold=\'---mod\'>mod</span>\n                </label>\n                <span class=\'spanBubble\'>Modulus</span>\n              </div>\n            </div><!-- End of divOperatorsInputs -->\n          </div><!-- End of operators section -->\n\n\n\n\n          <div class=\'attributes\'>\n            <h3>Attributes</h3>\n            <div class=\'divAttributesInputs\'>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'attribute\' value=\'\' v-model=\'attribute\'>\n                  <span data-bold=\'---None\'>None</span>\n                </label>\n                <span class=\'spanBubble\'>No attribute selected</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'attribute\' value=\'@alt\' v-model=\'attribute\' @click=\'addAttributes($event)\'>\n                  <span data-bold=\'---@alt\'>@alt</span>\n                </label>\n                <span class=\'spanBubble\'>Attribute alt</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'attribute\' value=\'@class\' v-model=\'attribute\' @click=\'addAttributes($event)\'>\n                  <span data-bold=\'---@class\'>@class</span>\n                </label>\n                <span class=\'spanBubble\'>Attribute class</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'attribute\' value=\'@href\' v-model=\'attribute\' @click=\'addAttributes($event)\'>\n                  <span data-bold=\'---@href\'>@href</span>\n                </label>\n                <span class=\'spanBubble\'>Attribute href</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'attribute\' value=\'@id\' v-model=\'attribute\' @click=\'addAttributes($event)\'>\n                  <span data-bold=\'---@id\'>@id</span>\n                </label>\n                <span class=\'spanBubble\'>Attribute id</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'attribute\' value=\'@name\' v-model=\'attribute\' @click=\'addAttributes($event)\'>\n                  <span data-bold=\'---@name\'>@name</span>\n                </label>\n                <span class=\'spanBubble\'>Attribute name</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'attribute\' v-model=\'attribute\' value=\'@src\' @click=\'addAttributes($event)\'>\n                  <span data-bold=\'---@src\'>@src</span>\n                </label>\n                <span class=\'spanBubble\'>Attribute src</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'attribute\' v-model=\'attribute\' value=\'@style\' @click=\'addAttributes($event)\'>\n                  <span data-bold=\'---@style\'>@style</span>\n                </label>\n                <span class=\'spanBubble\'>Attribute style</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'attribute\' value=\'@title\' v-model=\'attribute\' @click=\'addAttributes($event)\'>\n                  <span data-bold=\'---@title\'>@title</span>\n                </label>\n                <span class=\'spanBubble\'>Attribute title</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'radio\' name=\'attribute\' value=\'@value\' v-model=\'attribute\' @click=\'addAttributes($event)\'>\n                  <span data-bold=\'---@value\'>@value</span>\n                </label>\n                <span class=\'spanBubble\'>Attribute value</span>\n              </div>\n              <div class=\'divLabelContainer\'>\n                <label>\n                  <input type=\'text\' name=\'attribute\' value=\'\' v-model=\'attribute\' @keyup.enter=\'addAttributes($event)\' size=\'8\'>\n                  <span data-bold=\'---Other\'>Other</span>\n                </label>\n                <span class=\'spanBubble\'>Enter other attribute.</span>\n              </div>\n            </div>\n          </div>\n\n\n\n\n          <div class=\'parameters\'>\n            <div class=\'gridParamsHeading\'>\n              <h3>{{activeFunctionArr[activeFunctionArr.length - 1]}} Parameters</h3>\n            </div>\n\n\n            <div class=\'gridParamsLevel1\'>\n              <div class=\'divCheckboxParams\'>\n                <div class=\'divLabelContainer\'>\n                  <label v-show=\'showNumberInput\'>\n                    <input type=\'checkbox\' name=\'numberEntry\' value=\'\' v-model=\'numberEntry\'>\n                    <span data-bold=\'---Number entry\'>Number entry</span>\n                  </label>\n                  <span class=\'spanBubble\'>\n                    Select this option if the value entered needs to be a number\n                  </span>\n                </div>\n                <div class=\'divLabelContainer\'>\n                  <label v-show=\'showTranslateInput\'>\n                    <input type=\'checkbox\' name=\'translateString\' v-model=\'translateString\'>\n                    <span data-bold=\'---Both Upper and lowercase\'>Both Upper and lowercase</span>\n                  </label>\n                  <span class=\'spanBubble\'>\n                    Select this option if you want the string to be translated\n                  </span>\n                </div>\n              </div>\n              <div class=\'divStringParam\'>\n                <div class=\'divLabelContainer\'>\n                  <label  v-show=\'showParamInput\'>\n                    <input type=\'text\' name=\'parameterString\' v-model=\'parameterString\'  @keyup.enter=\'addParameters($event)\'>\n                    <span data-bold=\'---Value\'>Value</span>\n                  </label>\n                  <span class=\'spanBubble\'>\n                    Enter your parameter value. Press \'enter\' when done.\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            <div class=\'gridParamsLevel2\'>\n              <div class=\'divAlert\'>\n                {{paramAlert}}\n              </div>\n            </div>\n          </div>\n\n        </section>\n        <!-- End of section Options -->\n\n\n        <section class=\'sectionElements\'>\n          <div class=\'divFunctionsSequenceArrElements\'>\n            <div class=\'divFunctionsSequenceArrHeader\'>\n            <h3>Active Functions</h3>\n            </div>\n\n            <div class=\'divFunctionsSequenceArrInputs\'>\n              <span v-for=\'(element, idx) in functionsSequenceArr\' :key=\'element.id\'>\n                <span v-if=\'functionsSequenceArr[idx].toString().includes(\'(\') && !functionsSequenceArr[idx].toString().includes(\'/\')\'>\n                  <br>\n                  <label>\n                    <span v-once class=\'spanActiveFunctionTitle\'>\n                      {{element.replace(/(\((.*)?\)?)/g, \'\')}}:\n                    </span>\n                    <input type=\'text\' :name=\'idx\'  :size=\'functionsSequenceArr[idx].toString().length + 1\' v-model=\'functionsSequenceArr[idx]\' @keyup=\'checkAndPushToPathArray()\'>\n                  </label>\n                </span>\n\n\n                <label v-else>\n                  <input type=\'text\' :name=\'idx\'  :size=\'functionsSequenceArr[idx].toString().length + 1\' v-model=\'functionsSequenceArr[idx]\' @keyup=\'checkAndPushToPathArray()\'>\n                </label>\n\n              </span>\n            </div>\n\n            <div class=\'divFunctionsConcatButton\'>\n              <input class=\'buttonForAction\' id=\'buttonConcatAxes\' type=\'button\' name=\'\' value=\'Concat last two axes\' @click=\'concatFunctionElements()\'>\n            </div>\n          </div>\n\n          <div class=\'divFunctionConcatenation\'>\n            <h3>Concatenated Function elements</h3>\n            {{functionsSequenceArrJoin}}\n          </div>\n\n          <div class=\'divPathArrayElements\'>\n            <h3>All elements</h3>\n            <label v-for=\'(element, idx) in pathArray\'>\n              <input type=\'text\' :name=\'idx\' :size=\'pathArray[idx].toString().length\' v-model=\'pathArray[idx]\'>\n            </label>\n          </div>\n        </section>\n        <!-- End of section Elements -->\n\n        <section class=\'sectionResult\'>\n\n          <div class=\'divFooter\'>\n            <div class=\'divFooterHeader\'>\n              <h3>xPath Generator</h3>\n              <span class=\'spanBubble\'>\n                <img src=\'http://infohost.nmt.edu/tcc/help/pubs/xslt/axes.jpg\' alt=\'xPath Chart\'>\n              </span>\n            </div>\n            <h5><a href=\'http://addeventlistener.xyz\' target=\'_blank\'>@papostolopoulos</a> - 2019</h5>\n          </div>\n\n          <div class=\'divResult\'>\n            <div class=\'divResultHeader\'>\n              <h3>xPath Result</h3>\n            </div>\n\n            <div class=\'divResultTextArea\'>\n              <textarea name=\'textAreaFullPath\' id=\'textAreaFullPath\' :value=\'fullPath\'></textarea>\n              <br>\n              <label for=\'\'>\n                <input type=\'button\' name=\'buttonCopyxPath\' id=\'buttonCopyxPath\' value=\'Copy xPath\' @click=\'copyxPath()\'>\n              </label>\n            </div>\n\n          </div>\n\n        </section>\n        <!-- End of section Result -->\n\n\n      </div><!-- End of divContainer -->\n    </main>\n\n  </body>\n\n\n\n\n\n\n\n\n\n  <script>\n\n    var app = new Vue({\n      el: \'#mainSlot\',\n      data: {\n        axis:\'\',\n        node: \'\', //The node that is added after the axis\n        brackets: \'\', // If new brackets are opening or not\n        operator: \'\', //or, and, and not, not\n        activeFunction: \'\', //populated when a function is selected - convert into array?\n        activeFunctionArr: [],\n        translateString: false, //checkbox for when the \'translate\' option is selected\n        numberEntry: false, //When true, the submited entry will not be in quotes\n        absoluteRelativeAxis: \'absolute\',\n        parameterString: \'\', //populated when a string is entered in the input slot for each function (in parameters)\n        paramAlert: \'\',\n        //Perhaps need to modify this to get multiple values\n        //Not sure if I should use the above\n        attribute: \'\', //Attributes that are inside functions or brackets\n        pathArray: [], //array with full path of all different additions\n        functionsSequenceArr: [], //array of all functions and parameters that are selected\n        //functionsCounter: 0\n\n      }, //End of data\n      methods:{\n        //Adds strings to the pathArray OR\n        //If there are strings in the functionsSequenceArr then it adds to the functionsSequenceArr instead\n        addBranch(event){\n          this.zeroProperties(event.target.name);\n          let axisEventValue = this.absoluteRelativeAxis === \'absolute\' ?\n          this.axis + event.target.value : this.axis.slice(1) + event.target.value\n\n          //Add the string to the function array\n          if (this.functionsCounter > 0) {\n            console.log(\'In functionsCounter\');\n            let functionStr = this.functionsSequenceArr[this.functionsSequenceArr.length-1];\n            // Add a comma if this is not the beginning of the function\n            if(functionStr[functionStr.toString().length-1] !== \'(\') this.functionsSequenceArr.push(\', \');\n\n            this.functionsSequenceArr.push(axisEventValue);\n          }\n          //Add string to the path array\n          else this.pathArray.push(axisEventValue);\n\n          this.node = \'\';\n        }, //End of AddBranch\n\n\n\n        addBrackets(event){\n          this.zeroProperties(event.target.name);\n          if (this.functionsCounter > 0) {\n            this.functionsSequenceArr.push(event.target.value);\n            if (event.target.value === \')\') {\n              //this.functionsCounter --;\n              this.activeFunctionArr.pop();\n              this.activeFunction = this.activeFunctionArr[this.activeFunctionArr.length - 1] || \'\';\n              return this.checkAndPushToPathArray();\n              // this is supposed to be added to the computed properties\n              // if (this.functionsCounter === 0) {\n              //   this.pathArray.push(this.functionsSequenceArr.join(\'\'));\n              //   this.functionsSequenceArr = [];\n              // }\n            }\n            if(event.target.value === \'(\'){\n              //this.functionsCounter ++;\n              this.activeFunctionArr.push(this.activeFunctionArr[this.activeFunctionArr.length - 1]);\n            }\n          }\n          else if(this.pathArray.length > 0 && event.target.value !== \')\'){\n            this.pathArray.push(event.target.value);\n          }\n        }, //End of addBrackets\n\n\n\n        addOperators(event){\n          this.zeroProperties(event.target.name);\n          let operatorsRegex = /and|or|\||=|!=|\+|-|\*|div|<|<=|>|>=|mod/;\n          console.log(\'in addOperator\');\n          console.log(this.functionsSequenceArr[this.functionsSequenceArr.length - 1]);\n          //When the functions counter is larger than 0 or\n          //when the functionsCounter is zero but there are elements in the functionsSequenceArr\n          if ((this.functionsCounter > 0 ||\n          /[a-z]+\(\)$/.test(this.functionsSequenceArr[this.functionsSequenceArr.length - 1])) &&\n          !operatorsRegex.test(this.functionsSequenceArr[this.functionsSequenceArr.length - 1])) {\n            this.functionsSequenceArr.push(event.target.value);\n          }\n          //functionsCounter is 0 and functionsSequenceArr is empty so push in pathArray\n          else if(this.pathArray.length !== 0 &&\n          !operatorsRegex.test(this.pathArray[this.pathArray.length - 1])){\n            console.log(\'else if for pushing operator in the pathArray\');\n            this.pathArray.push(event.target.value);\n          }\n          console.log(\'about to hit zero\', this.operator);\n          this.operator = \'\';\n          console.log(this.operator);\n        },\n\n\n\n        addAttributes(event){\n\n          if (this.functionsCounter === 0 && this.pathArray.length === 0) {\n            this.paramAlert = \'You need to enter a node path or a function first\';\n            return;\n          }\n\n          if (this.functionsCounter > 0 || this.functionsSequenceArr.length > 0) {\n            console.log(\'if statemenet for adding attribute in the functionsSequenceArr\');\n            if (this.functionsSequenceArr[this.functionsSequenceArr.length - 1].includes(\'@\')) {\n              this.paramAlert = \'An attribute already exists in the previous entry.\';\n            }\n            else {\n              //If the previous element in the array is a branch, then push the attribute with a forward\n              //slash, otherwise just push the attribute\n              this.functionsSequenceArr[this.functionsSequenceArr.length - 1].includes(\'::\') ||\n              this.functionsSequenceArr[this.functionsSequenceArr.length - 1].includes(\'//\') ||\n              this.functionsSequenceArr[this.functionsSequenceArr.length - 1] === \'.\' ?\n              this.functionsSequenceArr.push(\'/\' + event.target.value) :\n              this.functionsSequenceArr.push(event.target.value);\n              this.attribute = \'\';\n              return this.zeroProperties(event.target.name);\n            }\n          }\n\n          if(this.pathArray.length !== 0) {\n            if (this.pathArray[this.pathArray.length - 1].includes(\'@\')) {\n              this.paramAlert = \'An attribute already exists in the previous entry.\'\n            }\n            else {\n              console.log(\'else if for adding attribute in the pathArray\');\n              //If the previous element in the array is a branch, then push the attribute with a forward\n              //slash, otherwise just push the attribute\n              this.pathArray[this.pathArray.length - 1].includes(\'::\') ||\n              this.pathArray[this.pathArray.length - 1].includes(\'//\') ||\n              this.pathArray[this.pathArray.length - 1] === \'.\'?\n              this.pathArray.push(\'/\' + event.target.value) :\n              this.pathArray.push(event.target.value);\n              this.attribute = \'\';\n              return this.zeroProperties(event.target.name);\n            }\n          }\n        },\n\n\n\n        //Adds a function name with parenthesis ( in the functionsSequenceArr\n        addFunction(event){\n          this.zeroProperties(event.target.name);\n\n          //Alert the user that the function only takes node sets\n          if (event.target.value === \'count\') {\n            this.paramAlert = \'This function only takes node sets\';\n          }\n\n          //Mark the number entry checkbox as selected\n          if (event.target.value === \'ceiling\' ||\n          event.target.value === \'floor\' ||\n          event.target.value === \'round\') {\n            this.numberEntry = true;\n            this.paramAlert = \'This function only takes a number entry\';\n          }\n\n\n\n          console.log(\'In add function. The counter before the addition is:\', this.functionsCounter);\n\n          //Add a comma before if the previous entry is a parameter and not a function\n          if (this.functionsSequenceArr.length > 0) {\n            let lastElement = this.functionsSequenceArr[this.functionsSequenceArr.length-1];\n            if (!/[\(\)]/.test(lastElement[lastElement.length - 1]) &&\n            !lastElement[lastElement.length - 1].includes(\'node()\')) {\n              this.functionsSequenceArr.push(\',\');\n            }\n          }\n\n          //If the functions do not take any parameters, then open and close the parenthesis\n          if (event.target.value === \'current\' ||\n              event.target.value === \'false\' ||\n              event.target.value === \'last\' ||\n              event.target.value === \'position\' ||\n              event.target.value === \'true\') {\n            this.functionsSequenceArr.push(event.target.value + \'()\'); //Array with all the functions and params\n            return this.checkAndPushToPathArray();\n          }\n          // otherwise just open the parenthesis\n          else {\n            this.functionsSequenceArr.push(event.target.value + \'(\');\n            this.activeFunctionArr.push(event.target.value);\n            //this.functionsCounter ++;\n          }\n        }, //End of addFunction\n\n\n\n        addParameters(event){\n\n          //When a parameter is added in a function\n          if (this.functionsCounter > 0) {\n            console.log(\'functionsCounter larger than 0. It is\', this.functionsCounter);\n            console.log(\'this.numberEntry is\', this.numberEntry, \'and this.translateString is\', this.translateString);\n            //If number entry has been selected\n            if(this.numberEntry) return this.evaluateAndEnterNumberValue(event.target.value, this.functionsSequenceArr);\n            //Translate option has been selected\n            else if (this.translateString) return this.translateAndPush(event.target.value);\n            //The string is pushed in the functionsSequenceArr\n            else{\n              let lastElement = this.functionsSequenceArr[this.functionsSequenceArr.length-1];\n              if (lastElement[lastElement.length - 1] === \'(\') {\n                this.functionsSequenceArr.push(\'\\'\' + event.target.value + \'\\'\')\n              }\n              else {\n                this.functionsSequenceArr.push(\',\');\n                this.functionsSequenceArr.push(\'\\'\' + event.target.value + \'\\'\')\n              }\n\n              this.parameterString = \'\';\n              return this.zeroProperties(event.target.name);\n            }\n          }\n          //When a parameter is added in the functionsSequenceArr\n          else if (this.functionsSequenceArr.length > 0) {\n            console.log(\'functionsCounter 0 but functionsSequenceArr has elements\');\n            if(this.numberEntry) return this.evaluateAndEnterNumberValue(event.target.value, this.functionsSequenceArr);\n            else {\n              this.functionsSequenceArr.push(\'\\'\' + event.target.value + \'\\'\');\n              this.parameterString = \'\';\n              return this.zeroProperties(event.target.name);\n            }\n          }\n          //When a parameter is added in the pathArray\n          else {\n            console.log(\'functionsCounter and functionsSequenceArr are both empty\');\n            //If number entry has been selected\n            if(this.numberEntry) return this.evaluateAndEnterNumberValue(event.target.value, this.pathArray);\n            else {\n              this.pathArray.push(\'\\'\' + event.target.value + \'\\'\');\n              this.parameterString = \'\';\n              return this.zeroProperties(event.target.name);\n            }\n          }\n\n          //When a parameter is added after an operator but not in a function\n          if (this.operator !== \'\') {\n            if(this.numberEntry) return this.evaluateAndEnterNumberValue(event.target.name, this.pathArray)\n            else {\n              this.pathArray.push(\'\\'\' + event.target.value + \'\\'\');\n              this.parameterString = \'\';\n              return this.zeroProperties(event.target.name);\n            }\n          }\n\n      }, //End of addParameters()\n\n\n\n        //Concatenates the last elements that are in the functionsSequenceArr and are separated by a comma\n        concatFunctionElements(){\n          console.log(this.functionsSequenceArr);\n\n          if (this.functionsSequenceArr.length > 3 &&\n          this.functionsSequenceArr[this.functionsSequenceArr.length-2] === \', \' &&\n          this.functionsSequenceArr[this.functionsSequenceArr.length-3][0] === \'/\') {\n            this.functionsSequenceArr[this.functionsSequenceArr.length-3] += this.functionsSequenceArr.pop();\n            this.functionsSequenceArr.pop();\n          }\n          else {\n            this.paramAlert = \'The array is not big enough for concatenation or the element for concatenation is not an axis\';\n          }\n        }, //End of concat Function Elements\n\n\n\n        evaluateAndEnterNumberValue(eventValue, arr){\n          if (!Number(eventValue)) {\n            this.parameterString = \'\';\n            this.numberEntry = false;\n            this.paramAlert = \'Invalid number entry\';\n          }\n          else {\n            arr.push(Number(eventValue));\n            this.paramAlert = \'\';\n            this.parameterString = \'\';\n            this.zeroProperties(event.target.name)\n          }\n        },\n\n\n\n        translateAndPush(eventValue){\n          console.log(\'In translate\', this.functionsSequenceArr[this.functionsSequenceArr.length - 1]);\n          if (this.functionsSequenceArr[this.functionsSequenceArr.length - 1].endsWith(\'(\')) {\n            this.paramAlert = \'You need to enter an attribute or an axis before the string parameter\';\n            return;\n          }\n          else {\n            let translateStringElements = \'\';\n            for (let i = 0; i < this.parameterString.length; i++) {\n              if(!translateStringElements.includes(this.parameterString[i].toLowerCase()) && /\w/.test(this.parameterString[i]))\n              translateStringElements += this.parameterString[i].toLowerCase();\n            }\n            this.functionsSequenceArr.push(\`translate(${this.functionsSequenceArr.pop()}, \'${translateStringElements.toUpperCase()}\', \'${translateStringElements}\'), \'${eventValue.toLowerCase()}\'\`);\n            console.log(\'close to zero\', event.target.name);\n            this.parameterString = \'\';\n            this.zeroProperties(event.target.name);\n          }\n        }, //End of translateAndPush\n\n\n\n        //Zero all the properties of the data object\n        zeroProperties(eventName){\n          if(eventName !== \'addNode\') this.axis = \'\';\n          if(eventName !== \'brackets\') this.brackets = \'\';\n          if(eventName !== \'inputOperator\') this.operator = \'\';\n          // this.activeFunction = \'\';\n          this.translateString = false;\n          this.numberEntry = false;\n          this.paramAlert = \'\';\n          if(eventName !== \'attribute\') this.attribute = \'\';\n          if(eventName !== \'parameterString\') this.parameterString = \'\';\n        }, //End of zero properties\n\n\n\n        adjustLabelSize(){\n          let labels = document.getElementsByClassName(\'divFunctionsInputs\')[0].children;\n          for (var i = 0; i < labels.length; i++) {\n            let spanText = labels[i].children[1].textContent;\n            if (spanText.length > 15) labels[i].className += \'functionSpansFontSize\';\n          }\n        },\n\n\n\n        updateFunctionsSequenceArr(event){\n          console.log(\'in function\');\n          console.log(event.target.value);\n          console.log(event.target.name);\n        },\n\n\n\n\n        checkAndPushToPathArray(){\n          console.log(\'In checkAndPushToPathArray\');\n          if (this.functionsCounter === 0) {\n            this.pathArray.push(this.functionsSequenceArr.join(\'\'));\n            this.functionsSequenceArr = [];\n          }\n        },\n\n\n\n        copyxPath(){\n          document.getElementById(\'textAreaFullPath\').select();\n          document.execCommand(\'copy\');\n        }\n\n\n      }, //End of methods\n      computed: {\n        fullPath(){\n          let fullPath = this.pathArray.join(\'\');\n          let replaceStrArr = [\n            {oldStr: /\)or/g, newStr: \'or\n\'},\n            {oldStr: /\|/g, newStr: \'\n|\n\'}\n          ];\n\n          replaceStrArr.forEach(function(el){\n            fullPath = fullPath.replace(el.oldStr, el.newStr);\n          });\n\n          return fullPath;\n        },\n\n        functionsSequenceArrJoin(){\n          return this.functionsSequenceArr.join(\'\');\n        },\n\n\n        //For displaying the Number checkbox\n        showNumberInput(){\n          return this.activeFunction === \'boolean\' ||\n          this.activeFunction === \'ceiling\' ||\n          this.activeFunction === \'choose\' ||\n          this.activeFunction === \'floor\' ||\n          this.activeFunction === \'position\' ||\n          this.activeFunction === \'round\' ||\n          this.activeFunction === \'sum\' ||\n          this.activeFunction === \'\'\n          this.operator !== \'\'\n          ? true : false;\n        },\n\n\n        //For displaying the translate checkbox\n        showTranslateInput(){\n          return this.activeFunction === \'contains\' ? true : false;\n        },\n\n        showParamInput(){\n          return this.activeFunction !== \'count\'\n        },\n\n        functionsCounter(){\n          return this.functionsSequenceArr.join(\'\').replace(/[^\(]/g,\'\').length -\n          this.functionsSequenceArr.join(\'\').replace(/[^\)]/g,\'\').length;\n        }\n      }, //end of computed properties\n      mounted() {\n        // this.adjustLabelSize();\n      }\n    });\n\n\n  </script>\n\n</html>\n",
          description: [
            {bullet: "Single page application"},
            {bullet: "Allows the user to create and modify xPath rules"},
            {bullet: "The user has the option to update the rules even when they are created."},
            {bullet: "Different page components allow the user to modify the different rule components through the model updates."},
            {bullet: "Vue, Vanilla CSS."}
          ],
          highlights: [
            {fact: "Create xPath rules without the worry of spelling errors. (2019-04)"},
            {fact: "I thought it would be fun to build something that others can use."},
            {fact: "Interesting fact: The vue models make it easy to modify input data as the rule is being built."},
          ],
          language: "Vue",
          images: [
            {image: ""},
            {image: ""},
            {image: ""},
          ],
          video_url: "https://www.youtube.com/embed/YRh_VZG0TJ4",
          id: "xPathGeneratorVue",
          bgImage: {
            backgroundImage: "",
            boxShadow: ""
          }
        },


    ], //end of projects


    }, //End of data
    methods: {

      // CHANGE THE CLASS OF THE BACKGROUND AND THE SELECTED NAV ELEMENT FROM HEADERS
      headersClassChange(event) {
        let attrName = event.target.getAttribute("name");
        this.classChange(attrName);
      },


      // CHANGE THE CLASS OF THE BACKGROUND AND THE SELECTED NAV ELEMENT
      classChange(attr){
        //Change the activePage property. This one will define which images will be
        //displayed in the carousel
        // this.activePage = attr;

        //Change the property "active" for each object element in the "sections" array
        this.sections.forEach((el) => el.text === attr ? el.active = true : el.active = false);

        //Change the properties in the "active" array (within data in the Vue instance)
        this.active.forEach((el) => {
          for (let key in el) key === attr ? el[key] = true : el[key] = false;
        });

        //This is for changing the active class of the <divTransform> tag
        this.activeModals = attr;
      },


      //CHANGE PAGES FROM ARROWS
      changePage(event){
        let targetDiv = window["divTransform"];
        let arrowId = event.target.id.replace(/(div)?Arrow/i, "").toLowerCase();
        let arr = this.sections;

        for (let i = 0; i < arr.length; i++) {
          if (arr[i].active) {
            if (arr[i].id === 3 && arrowId === "right" && arr[i].active === true) {
              this.classChange(arr[0].text);
              this.addStyle(targetDiv, this.updateStyle[arr[0].text]);
              break;
            }
            else if (arr[i].id === 1 && arrowId === "left" && arr[i].active === true) {
              this.classChange(arr[2].text);
              this.addStyle(targetDiv, this.updateStyle[arr[2].text]);
              break;
            }
            else {
              arrowId === "right" ?
              (this.classChange(arr[i + 1].text), this.addStyle(targetDiv, this.updateStyle[arr[i + 1].text])) :
              (this.classChange(arr[i - 1].text), this.addStyle(targetDiv, this.updateStyle[arr[i - 1].text]));
              break;
            }
          }
        }

        this.sections.forEach((el, idx, arr)=>{

        });
      },


      // EFFECT THAT ACTIVATES THE TRANSITION WHEN MOUSING OVER
      classTransitionOver(event) {
        let attr = event.target.getAttribute("name");
        let targetDiv = window["divTransform"];
        this.addStyle(targetDiv, this.updateStyle[attr]);
      },


      // EFFECT THAT DEACTIVATES THE TRANSITION WHEN THE MOUSE LEAVES
      classTransitionOut(event) {
        let targetDiv = window["divTransform"];
        this.addStyle(targetDiv, this.updateStyle.clean);
      },


      // LOOP THAT UPDATES THE INLINE STYLE OF THE ELEMENT THAT IS MOUSED OVER (FOR TRANSITION)
      addStyle(el, styles) {
        for (let key in styles){
          el.style[key] = styles[key];
        }
      },


      //CREATES THE PATHS FOR ALL THE IMAGES IN THE PROJECTS ARRAY INSIDE "DATA"
      //ADDS THE BACKGROUND IMAGE IN MODALS
      //ADDS THE BOX SHADOW IN MODALS
      //CREATES THE PATHS FOR ALL THE VIDEOS IN THE PROJECTS ARRAY INSIDE DATA
      pathCreate() {
        let self = this;
        let projectsArr = this.projects;
        let codePath = "";

        projectsArr.forEach((el) => {


          //Add path in projects[i].images.image
          el.images.forEach((ele, idx) => ele.image = self.imagePath + el.id + (idx+1) + ".jpg");


          // DEACTIVATED IT - TRYING TO SEE IF IT LOOKS BETTER WITHOUT A BG IMAGE IN MODAL
          //Add path in projects[i].bgImage.backgroundImage
          // backgroundImage: 'url("assets/images/logo-vue.png")'
          // el.bgImage.backgroundImage = "url(" + el.images[0].image + ")"


          // DEACTIVATED IT. SEE ABOVE COMMENT
          //Add attribute value for boxShadow for each modal
          // el.language === "Vanilla" ? el.bgImage.boxShadow = "inset 100vw 100vh rgba(250, 220, 52, .5)" :
          // el.language === "Vue" ? el.bgImage.boxShadow = "inset 100vw 100vh rgba(66, 184, 131, .5)" :
          // el.language === "jQuery" ? el.bgImage.boxShadow = "inset 100vw 100vh rgba(18, 26, 38, .5)" :
          // null;


          //DEACTIVATED TO SEE IF THE YOUTUBE LINKS WORK BETTER
          // Add path in projects[i].video_url
          // el.video_url = self.videoPath + el.id + ".mp4";


          //Add path in projects[i].code_url textPath: "assets/txt_files/code-"
          el.code_url = self.textPath + el.id + ".json";
        });
      },

      //OPEN THE MODAL
      modalOpen() {
        var getModalId = event.target.id.replace("aModalOpen", "modal");
        window[getModalId].className += " activeModal";

        //This is for the image and the text in the modal
        this.modalDisplay = "flex";
        this.changeCounterValue(); //This is for toggling through the images
      },

      //CLOSE THE MODAL FROM THE X ICON
      modalClose(event) {
        console.log("Event composed path", event.composedPath());
        console.log("Event path:", event.path);
        var getModalId = event.composedPath()[1].id.replace("divCloseModal", "modal");
        window[getModalId].className = window[getModalId].className.replace(/ activeModal/, "");

        this.modalDisplay = "none";
        this.counter = 0;
      },

      imageModalOpen(event){
        //Get the id from the "imageScreenshot". Change the name to match that of the modal
        let divImageId = event.target.id.replace("imageScreenshot", "divImageModal");
        console.log(window[divImageId]);
        console.log(window[divImageId].firstElementChild);
        window[divImageId].className += " activeImageModal"
        //Change the display from "none" to "flex"
        // window[divImageId].firstElementChild.style.display="flex"
        // window[divImageId].style.display="flex";
      },

      imageModalClose(event){
        event.composedPath()[2].className = event.composedPath()[2].className.replace(" activeImageModal", "");
        // event.composedPath()[2].style.display = "none";
      },

      //EXPAND THE CODE MODAL TO FULL SCREEN
      expandCodeModal(event){
        if(event.composedPath()[3].className.includes("divModalLeftExpand")) return;

        event.composedPath()[3].className += " divModalLeftExpand"
        // this.addStyle(event.composedPath()[3], this.updateStyle.expandCodeModal);
        event.composedPath()[3].children[1].className += " divModalCloseVisible";
        console.log(event.composedPath()[3].children);
      },

      //MINIMIZE THE CODE MODAL TO THE LEFT SIDE OF THE SCREEN BY CLICKING THE X BUTTON
      codeModalClose(event){
        event.composedPath()[2].className = event.composedPath()[2].className.replace(" divModalLeftExpand", "");
        event.composedPath()[1].className = event.composedPath()[1].className.replace(/ divModalCloseVisible/, "");
        // this.addStyle(event.composedPath()[2], this.updateStyle.codeModalClose);
        // event.composedPath()[1].style.display = "none";
      },

      //MINIMIZE THE CODE MODAL BY CLICKING IN THE BODY OF THE SCREEN
      divCodeModalClose(event){
        if (event.target.localName === "pre" &&
            event.composedPath()[2].className === "divModalLeft" &&
            event.composedPath()[2].style.position === "fixed") {
              event.composedPath()[2].children[1].style.display = "none";
              this.addStyle(event.composedPath()[2], this.updateStyle.codeModalClose);
            }
      },

      //CHANGE THE VALUE OF THE COUNTER SO THAT THE IMAGES CHANGE IN THE MODAL DISPLAY
      changeCounterValue() {
        let self = this;
        let intervalId = setInterval(function(){
          if (self.modalDisplay !== "flex") clearInterval(intervalId);
          self.counter < 2 ? self.counter++ : self.counter = 0;
          console.log(self.counter);
        }, 5000);
      }

    }, //End of methods
    beforeMount(){
      this.pathCreate();
    },
    computed: {
    } //End of computed properties
  }
);

/* DO YOU NEED TO MODIFY THE HTML TAGS IN SOME OF THEM?
clockVanilla: https://github.com/papostolopoulos/js30/blob/master/02-clock/index-vanilla.html
cssTutorialVanilla: https://github.com/papostolopoulos/css-exploration/blob/master/assets/stylesheets/006.css
drumKitVanilla: https://github.com/papostolopoulos/js30/blob/master/01-drum_kit/index-vanilla.html
drumKitVue: https://github.com/papostolopoulos/js30/blob/master/01-drum_kit/index-vue.html
hangmanjQuary: https://papostolopoulos.github.io/hangman/assets/hangman_scripts.js
imageEditingVanilla: https://github.com/papostolopoulos/image_filtering/blob/master/public/js_files/menubar_script.js
listMejQuery: https://github.com/papostolopoulos/listme/blob/master/routes/index.js
writeItVanilla: https://github.com/papostolopoulos/writeit/blob/master/public/javascripts/wysiwyg.js
streetViewModalVanilla: https://github.com/papostolopoulos/streetViewModal/blob/master/assets/javascript/main.js
sportyTouristVanilla: https://github.com/papostolopoulos/sportytourist/blob/master/assets/jsfiles/index.js
spotifyDiscographyVanilla: https://github.com/papostolopoulos/spotify/blob/master/assets/js/script-new.js


vid addEventListenerVue https://youtu.be/X2GlA4nhJb4
vid clockVanilla https://youtu.be/qc0xtBvhYE8
vid cssTutorialVanilla https://youtu.be/k-3_nybOPAQ
vid cssTutorialVue https://youtu.be/weG_SlyUaXM
vid drumKitVanilla https://youtu.be/gHnogNy7aSk
vid drumKitVue https://youtu.be/HNRwOGbi2sU
vid hangmanjQuery https://youtu.be/hpI6RAwc0g0
vid imageEditingBVanilla https://youtu.be/g1mI6SIB9Pc
vid imageEditingVanilla https://youtu.be/RYklsgi93uA
vid jsonCopyPasteVue https://youtu.be/FEzatw3eGjk
vid listMejQuery https://youtu.be/QI_-P_XE8fo
vid sportyTouristVanilla https://youtu.be/85MEVokytgs
vid streetViewModalVanilla https://youtu.be/Ce009inkFAA
vid vueTutorialVue https://youtu.be/4PPgpb3XgfI
vid writeItVanilla https://youtu.be/DB0xETCAt4E
xPathGenerator https://youtu.be/YRh_VZG0TJ4
*/

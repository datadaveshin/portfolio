<!DOCTYPE html>\n<html lang=\'en\' dir=\'ltr\'>\n  <head>\n    <meta charset=\'utf-8\'>\n    <title>Drum kit in Vue.js</title>\n    <script src=\'vue.js\'></script>\n\n    <style media=\'screen\'>\n      html {\n        margin: 0;\n        padding: 0;\n        font-family: arial;\n        font-size: 150%;\n        background: url(./drummer-vue.jpg);\n        background-size: cover;\n      }\n      h1 {\n        margin: auto;\n      }\n      .units {\n        display: inline-block;\n        border: 5px solid black;\n        background-color: rgba(255, 0, 0, .5);\n        margin: 10px;\n        padding: 5px;\n        min-width: 90px;\n        width: 12vh;\n        text-align: center;\n        transition: all 0.07s ease;\n      }\n      .units_play {\n        transform: scale(1.3);\n        border-color: rgb(255, 0, 0);\n        color: rgb(255, 0, 0);\n        background-color: rgba(0, 0, 0, .5);\n      }\n      #boxes{\n        /* This is from the tutorial */\n        /* display: flex;\n        flex: 1;\n        min-height: 100vh;\n        align-items: center;\n        justify-content: center; */\n        width: 100%;\n        margin: auto;\n        text-align: center;\n        position: absolute;\n        transform: translate(-50%, -50%);\n        top: 50%;\n        left: 50%;\n      }\n    </style>\n\n  </head>\n  <body>\n\n    <div id=\'boxes\'>\n\n      <unit\n      v-for=\'el in letters\'\n      :letter=\'el\'\n      :key=\'el.id\'\n      :class=\'[\'units\' , {units_play: playing}]\'>\n      </unit>\n\n\n      <sound\n      v-for=\'el in letters\'\n      :drum=\'el\' :key=\'el.id\'\n      :data-key=\'el.dataKey\'\n      :src=\'\'sounds/\'+el.sound+\'.wav\'\'>\n      </sound>\n    </div>\n\n\n\n\n\n    <script>\n      Vue.component(\'unit\', {\n        props: [\'letter\'],\n        template:\n        `<div :data-key=\'letter.dataKey\'>\n          <h1>\n            {{letter.text}}\n          </h1>\n          <span>{{letter.sound}}</span>\n          </div>\n        `\n      });\n      Vue.component(\'sound\', {\n        props: [\'drum\'],\n        template: `<audio></audio>`\n      });\n      new Vue({\n        el: \'#boxes\',\n        data: {\n          letters: [\n            {\n              text: \'A\',\n              dataKey: 65,\n              sound: \'clap\'\n            },\n            {\n              text: \'S\',\n              dataKey: 83,\n              sound: \'hihat\'\n            },\n            {\n              text: \'D\',\n              dataKey: 68,\n              sound: \'kick\'\n            },\n            {\n              text: \'F\',\n              dataKey: 70,\n              sound: \'openhat\'\n            },\n            {\n              text: \'G\',\n              dataKey: 71,\n              sound: \'boom\'\n            },\n            {\n              text: \'H\',\n              dataKey: 72,\n              sound: \'ride\'\n            },\n            {\n              text: \'J\',\n              dataKey: 74,\n              sound: \'snare\'\n            },\n            {\n              text: \'K\',\n              dataKey: 75,\n              sound: \'tom\'\n            },\n            {\n              text: \'L\',\n              dataKey: 76,\n              sound: \'tink\'\n            }\n          ],\n          playing: false\n        },\n        mounted: function() {\n           //Create array with keys\' numeric value\n          var vm = this;\n          var dataKeys = vm.letters.map((el)=>el.dataKey);\n          // Add an event listener at the global level to monitor the key presses\n          window.addEventListener(\'keydown\', function(e) {\n            if (dataKeys.includes(e.keyCode)) {\n              //Animation\n              var animDiv = document.querySelector(`div[data-key=\'${e.keyCode}\']`);\n              setTimeout(function() {\n                animDiv.classList.remove(\'units_play\');\n              }, 50);\n              //Sound play\n              var playSound = document.querySelector(`audio[data-key=\'${e.keyCode}\']`);\n              animDiv.classList.add(\'units_play\');\n              playSound.currentTime = 0;\n              playSound.play();\n            }\n          });\n        }\n      });\n    </script>\n\n  </body>\n</html>

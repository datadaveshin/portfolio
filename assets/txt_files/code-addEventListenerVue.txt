/*jshint esversion: 6 */\n// MAIN VUE INSTANCE\nlet app = new Vue({\n    el: "#divContainer",\n    data: {\n      active: [ //defines which page to render - see div with it divTransform in html\n          {Vanilla: true},\n          {Vue: false},\n          {jQuery: false}\n      ],\n      imagePath: "assets/images/img-",\n      videoPath: "assets/videos/vid-",\n      textPath: "assets/txt_files/code-",\n\n      sections: [\n        {id: 1, text: "Vanilla", active: true},\n        {id:2, text: "Vue", active: false},\n        {id: 3, text: "jQuery", active: false}\n      ],\n\n      updateStyle: {\n        Vanilla: { //This is for the hovering over the vanilla link\n          backgroundColor: "rgb(250, 220, 52)",\n          backgroundImage: 'url("assets/images/logo-javascript.png")',\n          boxShadow: "inset 100vw 100vh rgba(250, 220, 52, .5)",\n          transition: "all .3s"\n        },\n        Vue: { //This is for the hovering over the Vue link\n          backgroundColor: "rgba(66, 184, 131, .0001)",\n          backgroundImage: 'url("assets/images/logo-vue.png")',\n          boxShadow: "inset 100vw 100vh rgba(66, 184, 131, .5)",\n          transition: "all .3s"\n        },\n        jQuery: { //This is for the hovering over the jQuery link\n          backgroundColor: "rgba(18, 26, 38, .0001)",\n          backgroundImage: 'url("assets/images/logo-jquery.png")',\n          boxShadow: "inset 100vw 100vh rgba(18, 26, 38, .5)",\n          transition: "all .3s"\n        },\n        clean: { //This is for the mousing out of the Vanilla, Vue or jQuery links in header\n          backgroundColor: "",\n          backgroundImage: '',\n          boxShadow: "",\n          transition: "all .3s"\n        },\n        expandCodeModal: {\n          position: "fixed",\n          zIndex: 2,\n          left: 0,\n          top: 0,\n          width: "100vw",\n          height: "100vh"\n        },\n        codeModalClose: {\n          position: "static",\n          zIndex: 1,\n          width: "32vw",\n          height: "96vh"\n        }\n      },  //End of updateStyle\n\n      activeModals: "Vanilla",\n      counter: 0, //This is for the image and text transition inside each modal\n      modalDisplay: "none", //This is for the image and text transition\n\n      projects: [\n        {\n          key: 1,\n          title: "listMe.xyz",\n          url: "http://listme.xyz",\n          git: "https://github.com/papostolopoulos/listme",\n          code_url: "",\n          code: "",\n          description: [\n            {bullet: "Full stack CRUD to-do list."},\n            {bullet: "Create, read, update and delete lists of todo items."},\n            {bullet: "Create, update or delete user account."},\n            {bullet: "Node, Express, knex, psql, JQuery, handlebars, CSS."}\n          ],\n          highlights: [\n            {fact: "Customized to-do lists. (2017-03)"},\n            {fact: "Why was it built?\nI helped a colleague with his capstone project by creating the backend, database logic, backend - frontend connectivity"},\n            {fact: "Interesting fact: The user can update and customize the lists."},\n          ],\n          language: "jQuery",\n          images: [\n            {image: ""},\n            {image: ""},\n            {image: ""},\n          ],\n          video_url: "https://youtube.com/embed/QI_-P_XE8fo",\n          id: "listMejQuery",\n          bgImage: {\n            backgroundImage: "",\n            boxShadow: ""\n          }\n        },\n\n        {\n          key: 2,\n          title: "writeit.pro",\n          url: "http://writeit.pro",\n          git: "https://github.com/papostolopoulos/writeit",\n          code_url: "",\n          code: "",\n          description:\n          [\n            {bullet: "Full stack blog."},\n            {bullet: "WYSIWYG text editor."},\n            {bullet: "Image, video upload."},\n            {bullet: "Responsive / mobile."},\n            {bullet: "Node, Express, psql, JavaScript, handlebars, html, CSS"}\n          ],\n          highlights: [\n            {fact: "Blog with a WYSIWYG editor. (2017-02)"},\n            {fact: "Why was it built?\nIt was my capstone project. I liked the idea of creating something that would allow people to save thoughts"},\n            {fact: "Interesting fact: Ability to upload images, video and modify the display of text"},\n          ],\n          language: "Vanilla",\n          images: [\n            {image: ""},\n            {image: ""},\n            {image: ""},\n          ],\n          video_url: "https://youtube.com/embed/DB0xETCAt4E",\n          id: "writeItVanilla",\n          bgImage: {\n            backgroundImage: "",\n            boxShadow: ""\n          }\n        },\n\n        {\n          key: 3,\n          title: "CSS Tutorial",\n          url: "https://papostolopoulos.github.io/css-exploration/index-vanilla.html",\n          git: "https://github.com/papostolopoulos/css-exploration",\n          code_url: "",\n          code: "",\n          description: [\n            {bullet: "CSS tutorial with basic aspects of CSS."},\n            {bullet: "Reset, Specificity, the Box Model, Positioning, Typography, Backgrounds, Responsive Design."},\n            {bullet: "Responsive, mobile."},\n            {bullet: "HTML, Vanilla CSS."}\n          ],\n          highlights: [\n            {fact: "Basic CSS tutorial. (2016-12)"},\n            {fact: "Why was it built?\nIt was some kind of homework for my coding school"},\n            {fact: "Interesting fact: As you progress through the pages, you will see more CSS being added."},\n          ],\n          language: "Vanilla",\n          images: [\n            {image: ""},\n            {image: ""},\n            {image: ""},\n          ],\n          video_url: "https://youtube.com/embed/k-3_nybOPAQ",\n          id: "cssTutorialVanilla",\n          bgImage: {\n            backgroundImage: "",\n            boxShadow: ""\n          }\n        },\n\n        {\n          key: 4,\n          title: "Spotify Discography Search",\n          url: "https://git.io/vyfiO",\n          git: "https://github.com/papostolopoulos/spotify",\n          code_url: "",\n          code: "",\n          description: [\n            {bullet: "API calls to the Spotify API."},\n            {bullet: "Search for artists' discographies."},\n            {bullet: "Review the song titles and album covers"},\n            {bullet: "JavaScript, Ajax calls, CSS, HTML"}\n          ],\n          highlights: [\n            {fact: "See the discography of your favorite artist. (2017-01)"},\n            {fact: "Why was it built?\nIt was built as a school assignment. I wanted to learn on API calls"},\n            {fact: "Interesting fact: Different API calls in spotify with promises."},\n          ],\n          language: "Vanilla",\n          images: [\n            {image: ""},\n            {image: ""},\n            {image: ""},\n          ],\n          video_url: "",\n          id: "spotifyDiscographyVanilla",\n          bgImage: {\n            backgroundImage: "",\n            boxShadow: ""\n          }\n        },\n\n        {\n          key: 5,\n          title: "Image filtering",\n          url: "https://goo.gl/s9sHDS",\n          git: "https://github.com/papostolopoulos/image_filtering",\n          code_url: "",\n          code: "",\n          description: [\n            {bullet: "Image editing and filters application."},\n            {bullet: "Open images from the hard drive or online sources."},\n            {bullet: "Filters for brightness, contrast, transparency, grayscale, blur etc."},\n            {bullet: "Save in a different image formats."},\n            {bullet: "Node, JavaScript, CSS, HTML"}\n          ],\n          highlights: [\n            {fact: "Image filters through algo calculations. (2016-11)"},\n            {fact: "Why was it built?\nClass project. I wanted to learn some techniques on loading and editing images online."},\n            {fact: "Interesting fact: Images can be saved in different formats"},\n          ],\n          language: "Vanilla",\n          images: [\n            {image: ""},\n            {image: ""},\n            {image: ""},\n          ],\n          video_url: "https://youtube.com/embed/RYklsgi93uA",\n          id: "imageEditingVanilla",\n          bgImage: {\n            backgroundImage: "",\n            boxShadow: ""\n          }\n        },\n\n        {\n          key: 6,\n          title: "SportyTourist.com",\n          url: "http://sportytourist.com",\n          git: "https://github.com/papostolopoulos/sportytourist",\n          code_url: "",\n          code: "",\n          description: [\n            {bullet: "Sports news aggregator."},\n            {bullet: "News API calls"},\n            {bullet: "JavaScript, AJAX, CSS, HTML"}\n          ],\n          highlights: [\n            {fact: "Sports news highlights from different sources. (2016-08)"},\n            {fact: "Why was it built?\nI wanted to learn on api calls"},\n            {fact: "Interesting fact: All the api calls are done from one source."},\n          ],\n          language: "Vanilla",\n          images: [\n            {image: ""},\n            {image: ""},\n            {image: ""},\n          ],\n          video_url: "https://youtube.com/embed/85MEVokytgs",\n          id: "sportyTouristVanilla",\n          bgImage: {\n            backgroundImage: "",\n            boxShadow: ""\n          }\n        },\n\n        {\n          key: 7,\n          title: "hangman.pro",\n          url: "http://hangman.pro",\n          git: "https://github.com/papostolopoulos/hangman",\n          code_url: "",\n          code: "",\n          description: [\n            {bullet: "Game of hangman."},\n            {bullet: "Random word pick and play."},\n            {bullet: "JQuery, AJAX, CSS, HTML"}\n          ],\n          highlights: [\n            {fact: "Play hangman online. (2016-08)"},\n            {fact: "Why was it built?\nThis was my first online project."},\n            {fact: "Interesting fact: You can cheat by looking at the developer tools."},\n          ],\n          language: "jQuery",\n          images: [\n            {image: ""},\n            {image: ""},\n            {image: ""},\n          ],\n          video_url: "https://youtube.com/embed/hpI6RAwc0g0",\n          id: "hangmanjQuery",\n          bgImage: {\n            backgroundImage: "",\n            boxShadow: ""\n          }\n        },\n\n        {\n          key: 8,\n          title: "Clock",\n          url: "https://papostolopoulos.github.io/js30/02-clock/index-vanilla.html",\n          git: "https://github.com/papostolopoulos/js30/tree/master/02-clock",\n          code_url: "",\n          code: "",\n          description: [\n            {bullet: "A clock."},\n            {bullet: "Updates automatically by firing interval calls."},\n            {bullet: "JavaScript, CSS, HTML."}\n          ],\n          highlights: [\n            {fact: "Working clock displaying computer time. (2018-09)"},\n            {fact: "Why was it built?\nGood practice for CSS transforms and timeouts"},\n            {fact: "Interesting fact: transforms happen through a timeout function"},\n          ],\n          language: "Vanilla",\n          images: [\n            {image: ""},\n            {image: ""},\n            {image: ""},\n          ],\n          video_url: "https://youtube.com/embed/qc0xtBvhYE8",\n          id: "clockVanilla",\n          bgImage: {\n            backgroundImage: "",\n            boxShadow: ""\n          }\n        },\n\n        {\n          key: 9,\n          title: "Drum Kit - Vanilla",\n          url: "https://papostolopoulos.github.io/js30/01-drum_kit/index-vanilla.html",\n          git: "https://github.com/papostolopoulos/js30/tree/master/01-drum_kit",\n          code_url: "",\n          code: "",\n          description: [\n            {bullet: "Drum Kit. Press the keys and hear the drums playing."},\n            {bullet: "Vanilla JavaScript, CSS, HTML."},\n            {bullet: "Similar project in the Vue section."}\n          ],\n          highlights: [\n            {fact: "Play the drums from your keyboard. (2018-05)"},\n            {fact: "Why was it built?\nGood practice for Javascript and CSS"},\n            {fact: "Interesting fact: I built the same project in Vue.js too"},\n          ],\n          language: "Vanilla",\n          images: [\n            {image: ""},\n            {image: ""},\n            {image: ""},\n          ],\n          video_url: "https://youtube.com/embed/gHnogNy7aSk",\n          id: "drumKitVanilla",\n          bgImage: {\n            backgroundImage: "",\n            boxShadow: ""\n          }\n        },\n\n        {\n          key: 10,\n          title: "addEventListener.xyz",\n          url: "http://addEventListener.xyz",\n          code_url: "YOU NEED TO ADD A COPY OF THE CODE. YOU NEED TO ADD IMAGES. YOU NEED TO ADD VIDEO FOOTAGE",\n          git: "https://github.com/papostolopoulos/portfolio",\n          code: "",\n          description: [\n            {bullet: "Single page application"},\n            {bullet: "A Personal web page with a list of all the coding projects"},\n            {bullet: "Multiple class transitions, CSS transformations and interactive display through a single Vue instance."},\n            {bullet: "Vue, CSS, HTML."}\n          ],\n          highlights: [\n            {fact: "My coding projects list. (2019-01)"},\n            {fact: "Why was it built?\nThis is the place where I am showcasing all of my coding work"},\n            {fact: "Interesting fact: After building the core of this single page app, updating the content happens very easily."},\n          ],\n          language: "Vue",\n          images: [\n            {image: ""},\n            {image: ""},\n            {image: ""},\n          ],\n          video_url: "https://youtube.com/embed/X2GlA4nhJb4",\n          id: "addEventListenerVue",\n          bgImage: {\n            backgroundImage: "",\n            boxShadow: ""\n          }\n        },\n\n        {\n          key: 11,\n          title: "JSON files copy-paste viewer",\n          url: "https://papostolopoulos.github.io/xPathDataExtraction/copypaste/copypaste4.html",\n          code_url: "",\n          git: "https://github.com/papostolopoulos/xPathDataExtraction/copypaste",\n          code: "",\n          description: [\n            {bullet: "This is a project that was done for internal company work. It doesn't work with random files."},\n            {bullet: "The user can paste a JSON file from an internal work tool and view the results as per array element."},\n            {bullet: "He can filter the results as needed."},\n            {bullet: "Vue, HTML, CSS."}\n          ],\n          highlights: [\n            {fact: "JSON file viewer. (2018-12)"},\n            {fact: "Why was it built?\nI wanted something that would help me confirm if strings of text were accurately matching with extracted images."},\n            {fact: "Interesting fact: There is a lot of string manipulation in order to clean up a large JSON string and remain with the important components of it."},\n          ],\n          language: "Vue",\n          images: [\n            {image: ""},\n            {image: ""},\n            {image: ""},\n          ],\n          video_url: "https://youtube.com/embed/FEzatw3eGjk",\n          id: "jsonCopyPasteVue",\n          bgImage: {\n            backgroundImage: "",\n            boxShadow: ""\n          }\n        },\n\n        {\n          key: 12,\n          title: "A Vue tutorial",\n          url: "https://papostolopoulos.github.io/tutorials/vue/vue_website_tutorial/000-vue_introduction.html",\n          code_url: "",\n          git: "https://github.com/papostolopoulos/tutorials/tree/master/vue/vue_website_tutorial",\n          code: "",\n          description: [\n            {bullet: "Vue tutorial and exercises based on vuejs.org"},\n            {bullet: "Vue, CSS, HTML."},\n            {bullet: "Similar project in the Vanilla section."}\n          ],\n          highlights: [\n            {fact: "Several practice exercises and coding examples. (2018-09)"},\n            {fact: "Why was it built?\nIt has been useful for me to text my aquired knowledge by keeping my notes and by creating my own exercises"},\n            {fact: "Interesting fact: New Vue instances are created for every section of the tutorial"},\n          ],\n          language: "Vue",\n          images: [\n            {image: ""},\n            {image: ""},\n            {image: ""},\n          ],\n          video_url: "https://youtube.com/embed/4PPgpb3XgfI",\n          id: "vueTutorialVue",\n          bgImage: {\n            backgroundImage: "",\n            boxShadow: ""\n          }\n        },\n\n        {\n          key: 13,\n          title: "Drum Kit - Vue",\n          url: "https://papostolopoulos.github.io/js30/01-drum_kit/index-vue.html",\n          code_url: "",\n          git: "https://github.com/papostolopoulos/js30/tree/master/01-drum_kit",\n          code: "",\n          description: [\n            {bullet: "Drum Kit. Press the keys and hear the drums playing."},\n            {bullet: "Vue, CSS, HTML."},\n            {bullet: "Similar project in the Vanilla section."}\n          ],\n          highlights: [\n            {fact: "Play drums from your keyboard. (2018-07)"},\n            {fact: "Why was it built?\nGood practice of vue and css skills"},\n            {fact: "Interesting fact: There is a Vanilla js version for the same project"},\n          ],\n          language: "Vue",\n          images: [\n            {image: ""},\n            {image: ""},\n            {image: ""},\n          ],\n          video_url: "https://youtube.com/embed/HNRwOGbi2sU",\n          id: "drumKitVue",\n          bgImage: {\n            backgroundImage: "",\n            boxShadow: ""\n          }\n        },\n\n        {\n          key: 14,\n          title: "Street View Image Modal",\n          url: "https://git.io/vppLs",\n          git: "https://github.com/papostolopoulos/streetViewModal",\n          code_url: "",\n          code: "",\n          description: [\n            {bullet: "Modal that displays static Google Street View image."},\n            {bullet: "Camera rotation and zooming."},\n            {bullet: "Google maps API call."},\n            {bullet: "Vanilla JavaScript, Vanilla CSS."}\n          ],\n          highlights: [\n            {fact: "Enter coordinates, see Google Street View Image. (2018-06)"},\n            {fact: "Why was it built?\nIt was interesting for me to see if I could make something that would be matched with the Open Street Maps project."},\n            {fact: "Interesting fact: This was easier than I thought. the API call was straighforward but if a lot of users start using this, then there is a fee for getting data from Google."},\n          ],\n          language: "Vanilla",\n          images: [\n            {image: ""},\n            {image: ""},\n            {image: ""},\n          ],\n          video_url: "https://youtube.com/embed/Ce009inkFAA",\n          id: "streetViewModalVanilla",\n          bgImage: {\n            backgroundImage: "",\n            boxShadow: ""\n          }\n        },\n\n        {\n          key: 15,\n          title: "CSS Tutorial - Vue",\n          url: "https://papostolopoulos.github.io/css-exploration/index.html",\n          git: "https://github.com/papostolopoulos/css-exploration",\n          code_url: "",\n          code: "",\n          description: [\n            {bullet: "Project is still in the works."},\n            {bullet: "CSS tutorial built with Vue components."},\n            {bullet: "Single page application with viewable content based on the user's browsing pattern."},\n            {bullet: "The user can enter HTML and CSS in practice textareas and see the result of his code in real time"},\n            {bullet: "Vue, Vanilla CSS."}\n          ],\n          highlights: [\n            {fact: "Learn CSS and practice in a WYSIWYG environment. (2018-10)"},\n            {fact: "Why was it built?\nIt helps me understand some CSS principles and ti can create my own examples that other folks can later use"},\n            {fact: "Interesting fact: Reusable vue components make the process of building this project very interesting."},\n          ],\n          language: "Vue",\n          images: [\n            {image: ""},\n            {image: ""},\n            {image: ""},\n          ],\n          video_url: "https://youtube.com/embed/weG_SlyUaXM",\n          id: "cssTutorialVue",\n          bgImage: {\n            backgroundImage: "",\n            boxShadow: ""\n          }\n        },\n\n\n        {\n          key: 16,\n          title: "xPath Generator",\n          url: "https://papostolopoulos.github.io/xPathDataExtraction/copypaste/xPathGenerator.html",\n          git: "https://github.com/papostolopoulos/copypaste",\n          code_url: "",\n          code: "",\n          description: [\n            {bullet: "Single page application"},\n            {bullet: "Allows the user to create and modify xPath rules"},\n            {bullet: "The user has the option to update the rules even when they are created."},\n            {bullet: "Different page components allow the user to modify the different rule components through the model updates."},\n            {bullet: "Vue, Vanilla CSS."}\n          ],\n          highlights: [\n            {fact: "Create xPath rules without the worry of spelling errors. (2019-04)"},\n            {fact: "I thought it would be fun to build something that others can use."},\n            {fact: "Interesting fact: The vue models make it easy to modify input data as the rule is being built."},\n          ],\n          language: "Vue",\n          images: [\n            {image: ""},\n            {image: ""},\n            {image: ""},\n          ],\n          video_url: "https://www.youtube.com/embed/YRh_VZG0TJ4",\n          id: "xPathGeneratorVue",\n          bgImage: {\n            backgroundImage: "",\n            boxShadow: ""\n          }\n        },\n\n\n    ], //end of projects\n\n\n    }, //End of data\n    methods: {\n\n      // CHANGE THE CLASS OF THE BACKGROUND AND THE SELECTED NAV ELEMENT FROM HEADERS\n      headersClassChange(event) {\n        let attrName = event.target.getAttribute("name");\n        this.classChange(attrName);\n      },\n\n\n      // CHANGE THE CLASS OF THE BACKGROUND AND THE SELECTED NAV ELEMENT\n      classChange(attr){\n        //Change the activePage property. This one will define which images will be\n        //displayed in the carousel\n        // this.activePage = attr;\n\n        //Change the property "active" for each object element in the "sections" array\n        this.sections.forEach((el) => el.text === attr ? el.active = true : el.active = false);\n\n        //Change the properties in the "active" array (within data in the Vue instance)\n        this.active.forEach((el) => {\n          for (let key in el) key === attr ? el[key] = true : el[key] = false;\n        });\n\n        //This is for changing the active class of the <divTransform> tag\n        this.activeModals = attr;\n      },\n\n\n      //CHANGE PAGES FROM ARROWS\n      changePage(event){\n        let targetDiv = window["divTransform"];\n        let arrowId = event.target.id.replace(/(div)?Arrow/i, "").toLowerCase();\n        let arr = this.sections;\n\n        for (let i = 0; i < arr.length; i++) {\n          if (arr[i].active) {\n            if (arr[i].id === 3 && arrowId === "right" && arr[i].active === true) {\n              this.classChange(arr[0].text);\n              this.addStyle(targetDiv, this.updateStyle[arr[0].text]);\n              break;\n            }\n            else if (arr[i].id === 1 && arrowId === "left" && arr[i].active === true) {\n              this.classChange(arr[2].text);\n              this.addStyle(targetDiv, this.updateStyle[arr[2].text]);\n              break;\n            }\n            else {\n              arrowId === "right" ?\n              (this.classChange(arr[i + 1].text), this.addStyle(targetDiv, this.updateStyle[arr[i + 1].text])) :\n              (this.classChange(arr[i - 1].text), this.addStyle(targetDiv, this.updateStyle[arr[i - 1].text]));\n              break;\n            }\n          }\n        }\n\n        this.sections.forEach((el, idx, arr)=>{\n\n        });\n      },\n\n\n      // EFFECT THAT ACTIVATES THE TRANSITION WHEN MOUSING OVER\n      classTransitionOver(event) {\n        let attr = event.target.getAttribute("name");\n        let targetDiv = window["divTransform"];\n        this.addStyle(targetDiv, this.updateStyle[attr]);\n      },\n\n\n      // EFFECT THAT DEACTIVATES THE TRANSITION WHEN THE MOUSE LEAVES\n      classTransitionOut(event) {\n        let targetDiv = window["divTransform"];\n        this.addStyle(targetDiv, this.updateStyle.clean);\n      },\n\n\n      // LOOP THAT UPDATES THE INLINE STYLE OF THE ELEMENT THAT IS MOUSED OVER (FOR TRANSITION)\n      addStyle(el, styles) {\n        for (let key in styles){\n          el.style[key] = styles[key];\n        }\n      },\n\n\n      //CREATES THE PATHS FOR ALL THE IMAGES IN THE PROJECTS ARRAY INSIDE "DATA"\n      //ADDS THE BACKGROUND IMAGE IN MODALS\n      //ADDS THE BOX SHADOW IN MODALS\n      //CREATES THE PATHS FOR ALL THE VIDEOS IN THE PROJECTS ARRAY INSIDE DATA\n      pathCreate() {\n        let self = this;\n        let projectsArr = this.projects;\n        let codePath = "";\n\n        projectsArr.forEach((el) => {\n\n\n          //Add path in projects[i].images.image\n          el.images.forEach((ele, idx) => ele.image = self.imagePath + el.id + (idx+1) + ".jpg");\n\n\n          // DEACTIVATED IT - TRYING TO SEE IF IT LOOKS BETTER WITHOUT A BG IMAGE IN MODAL\n          //Add path in projects[i].bgImage.backgroundImage\n          // backgroundImage: 'url("assets/images/logo-vue.png")'\n          // el.bgImage.backgroundImage = "url(" + el.images[0].image + ")"\n\n\n          // DEACTIVATED IT. SEE ABOVE COMMENT\n          //Add attribute value for boxShadow for each modal\n          // el.language === "Vanilla" ? el.bgImage.boxShadow = "inset 100vw 100vh rgba(250, 220, 52, .5)" :\n          // el.language === "Vue" ? el.bgImage.boxShadow = "inset 100vw 100vh rgba(66, 184, 131, .5)" :\n          // el.language === "jQuery" ? el.bgImage.boxShadow = "inset 100vw 100vh rgba(18, 26, 38, .5)" :\n          // null;\n\n\n          //DEACTIVATED TO SEE IF THE YOUTUBE LINKS WORK BETTER\n          // Add path in projects[i].video_url\n          // el.video_url = self.videoPath + el.id + ".mp4";\n\n\n          //Add path in projects[i].code_url textPath: "assets/txt_files/code-"\n          el.code_url = self.textPath + el.id + ".json";\n        });\n      },\n\n      //OPEN THE MODAL\n      modalOpen() {\n        var getModalId = event.target.id.replace("aModalOpen", "modal");\n        window[getModalId].className += " activeModal";\n\n        //This is for the image and the text in the modal\n        this.modalDisplay = "flex";\n        this.changeCounterValue(); //This is for toggling through the images\n      },\n\n      //CLOSE THE MODAL FROM THE X ICON\n      modalClose(event) {\n        var getModalId = event.path[1].id.replace("divCloseModal", "modal");\n        window[getModalId].className = window[getModalId].className.replace(/ activeModal/, "");\n\n        this.modalDisplay = "none";\n        this.counter = 0;\n      },\n\n      imageModalOpen(event){\n        //Get the id from the "imageScreenshot". Change the name to match that of the modal\n        let divImageId = event.target.id.replace("imageScreenshot", "divImageModal");\n        \n        // window[divImageId].className += " activeImageModal"\n        //Change the display from "none" to "flex"\n        window[divImageId].style.display="flex";\n      },\n\n      imageModalClose(event){\n        // event.path[2].className = event.path[2].className.replace(" activeImageModal", "");\n        event.path[2].style.display = "none";\n      },\n\n      //EXPAND THE CODE MODAL TO FULL SCREEN\n      expandCodeModal(event){\n        if(event.path[3].className.includes("divModalLeftExpand")) return;\n\n        event.path[3].className += " divModalLeftExpand"\n        // this.addStyle(event.path[3], this.updateStyle.expandCodeModal);\n        event.path[3].children[1].className += " divModalCloseVisible";\n      },\n\n      //MINIMIZE THE CODE MODAL TO THE LEFT SIDE OF THE SCREEN BY CLICKING THE X BUTTON\n      codeModalClose(event){\n        event.path[2].className = event.path[2].className.replace(" divModalLeftExpand", "");\n        event.path[1].className = event.path[1].className.replace(/ divModalCloseVisible/, "");\n        // this.addStyle(event.path[2], this.updateStyle.codeModalClose);\n        // event.path[1].style.display = "none";\n      },\n\n      //MINIMIZE THE CODE MODAL BY CLICKING IN THE BODY OF THE SCREEN\n      divCodeModalClose(event){\n        if (event.target.localName === "pre" &&\n            event.path[2].className === "divModalLeft" &&\n            event.path[2].style.position === "fixed") {\n              event.path[2].children[1].style.display = "none";\n              this.addStyle(event.path[2], this.updateStyle.codeModalClose);\n            }\n      },\n\n\n      //CHANGE THE VALUE OF THE COUNTER SO THAT THE IMAGES CHANGE IN THE MODAL DISPLAY\n      changeCounterValue() {\n        let self = this;\n        let intervalId = setInterval(function(){\n          if (self.modalDisplay !== "flex") clearInterval(intervalId);\n          self.counter < 2 ? self.counter++ : self.counter = 0;\n          \n        }, 5000);\n      }\n\n    }, //End of methods\n    beforeMount(){\n      this.pathCreate();\n    },\n    computed: {\n    } //End of computed properties\n  }\n);
